import {
  l
} from "./chunk-CF56UYH2.js";
import {
  s
} from "./chunk-H7JF6Q7A.js";
import {
  u2 as u
} from "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n,
  y3 as y
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  r
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/analysis/Analysis.js
var n2 = 0;
var l2 = class extends u(l(s(y))) {
  constructor(e2) {
    super(e2), this.id = `${Date.now().toString(16)}-analysis-${n2++}`, this.title = null;
  }
  get parent() {
    return this._get("parent");
  }
  set parent(e2) {
    const t = this.parent;
    if (r(t))
      switch (t.type) {
        case "line-of-sight":
          t.removeAnalysis(this);
          break;
        case "2d":
        case "3d":
          t.analyses.includes(this) && t.analyses.remove(this);
      }
    this._set("parent", e2);
  }
  get isEditable() {
    return this.requiredPropertiesForEditing.every(r);
  }
};
e([d({ type: String, constructOnly: true, clonable: false })], l2.prototype, "id", void 0), e([d({ type: String })], l2.prototype, "title", void 0), e([d({ constructOnly: true })], l2.prototype, "type", void 0), e([d({ clonable: false, value: null })], l2.prototype, "parent", null), e([d({ readOnly: true })], l2.prototype, "extent", void 0), e([d({ readOnly: true })], l2.prototype, "isEditable", null), e([d({ readOnly: true })], l2.prototype, "requiredPropertiesForEditing", void 0), e([d({ readOnly: true })], l2.prototype, "nonEditableMessage", void 0), l2 = e([n("esri.analysis.Analysis")], l2);
var c = l2;

export {
  c
};
//# sourceMappingURL=chunk-SUK6SE2D.js.map
