import {
  a,
  d,
  j,
  l,
  m,
  o,
  p as p2,
  q,
  s
} from "./chunk-YZNDHJDJ.js";
import {
  n,
  t
} from "./chunk-RTHP2LNT.js";
import {
  p
} from "./chunk-BPZGJQOB.js";

// node_modules/@arcgis/core/views/support/geometry2dUtils.js
function h(t2, n2) {
  return t2[0] * n2[1] - t2[1] * n2[0];
}
function E(t2, r, s2) {
  const e = (r[0] - t2[0]) * (s2[1] - t2[1]) - (r[1] - t2[1]) * (s2[0] - t2[0]);
  return Math.abs(e) / m(r, s2);
}
function I(t2, n2, o2) {
  const u = j(o2, n2) / p2(o2);
  return l(t2, o2, u);
}
function L(t2, n2, r, s2, e = r) {
  return o(M, s2, r), o(A, n2, e), I(R, A, M), s(t2, e, R);
}
function N(t2, n2, e, u) {
  o(M, u, e), o(A, n2, e);
  const f = j(M, A) / p2(M);
  return f > 0 ? d(t2, e, M, f) : a(t2, e);
}
function m2(t2, n2, r, s2) {
  o(M, n2, r);
  const e = s2 / q(M);
  return d(t2, r, M, e);
}
function y(n2, r) {
  return L(A, r, n2.start, n2.end), p(A[0], r[0]) && p(A[1], r[1]) ? [t(r)] : [];
}
function d2(n2, r, s2) {
  return m2(A, s2, n2, r), p(A[0], s2[0]) && p(A[1], s2[1]) ? [t(s2)] : [];
}
function j2(t2, n2) {
  const r = t2.start, s2 = t2.end, e = n2.start, u = n2.end, a2 = o(M, s2, r), f = o(k, u, e), i = h(a2, f);
  if (Math.abs(i) <= l2)
    return [];
  const p3 = o(A, r, e), E2 = h(f, p3) / i, I2 = h(a2, p3) / i;
  if (E2 >= 0) {
    if (I2 >= 0 || n2.type === b.LINE)
      return [d(R, r, a2, E2)];
  } else if (t2.type === b.LINE && (I2 >= 0 || n2.type === b.LINE))
    return [d(R, r, a2, E2)];
  return [];
}
function v(t2, n2, e) {
  const u = [], a2 = o(M, t2.end, t2.start), f = o(k, t2.start, n2), i = p2(a2), p3 = 2 * j(a2, f), h2 = p3 * p3 - 4 * i * (p2(f) - e * e);
  if (0 === h2) {
    const n3 = -p3 / (2 * i);
    (t2.type === b.LINE || n3 >= 0) && u.push(d(R, t2.start, a2, n3));
  } else if (h2 > 0) {
    const n3 = Math.sqrt(h2), r = (-p3 + n3) / (2 * i);
    (t2.type === b.LINE || r >= 0) && u.push(d(R, t2.start, a2, r));
    const s2 = (-p3 - n3) / (2 * i);
    (t2.type === b.LINE || s2 >= 0) && u.push(d(A, t2.start, a2, s2));
  }
  return u;
}
var b;
!function(t2) {
  t2[t2.RAY = 0] = "RAY", t2[t2.LINE = 1] = "LINE";
}(b || (b = {}));
var l2 = 1e-6;
var M = n();
var k = n();
var A = n();
var R = n();

export {
  E,
  L,
  N,
  m2 as m,
  y,
  d2 as d,
  j2 as j,
  v,
  b
};
//# sourceMappingURL=chunk-N5C77AAH.js.map
