{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js", "../../@arcgis/core/chunks/HUDMaterial.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{ReadLinearDepth as e}from\"../output/ReadLinearDepth.glsl.js\";import{multipassGeometryTest as r}from\"../shading/MultipassGeometryTest.glsl.js\";import{RgbaFloatEncoding as t}from\"../util/RgbaFloatEncoding.glsl.js\";import{Float2PassUniform as o}from\"../../shaderModules/Float2PassUniform.js\";import{glsl as a}from\"../../shaderModules/interfaces.js\";import{Texture2DPassUniform as i}from\"../../shaderModules/Texture2DPassUniform.js\";function s(s,n){const{vertex:p,fragment:l}=s;n.hasMultipassGeometry&&p.include(r),n.hasMultipassTerrain&&s.varyings.add(\"depth\",\"float\"),p.code.add(a`\n  void main(void) {\n    vec4 posProjCenter;\n    if (dot(position, position) > 0.0) {\n      // Render single point to center of the pixel to avoid subpixel\n      // filtering to affect the marker color\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n      posProjCenter = alignToPixelCenter(posProj, viewport.zw);\n\n      ${n.hasMultipassGeometry?a`\n        // Don't draw vertices behind geometry\n        if(geometryDepthTest(.5 + .5 * posProjCenter.xy / posProjCenter.w, projectAux.posView.z)){\n          posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n        }`:\"\"}\n\n      ${n.hasMultipassTerrain?\"depth = projectAux.posView.z;\":\"\"}\n      vec3 vpos = projectAux.posModel;\n      if (rejectBySlice(vpos)) {\n        // Project out of clip space\n        posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n      }\n\n    } else {\n      // Project out of clip space\n      posProjCenter = vec4(1e038, 1e038, 1e038, 1.0);\n    }\n\n    gl_Position = posProjCenter;\n    gl_PointSize = 1.0;\n  }\n  `),n.hasMultipassTerrain&&l.include(e),n.hasMultipassTerrain&&l.uniforms.add([new i(\"terrainDepthTexture\",((e,r)=>r.multipassTerrain.linearDepthTexture)),new o(\"nearFar\",((e,r)=>r.camera.nearFar)),new o(\"inverseViewport\",((e,r)=>r.inverseViewport))]),l.include(t),l.code.add(a`\n  void main() {\n    gl_FragColor = vec4(1, 1, 1, 1);\n    ${n.hasMultipassTerrain?a`\n          vec2 uv = gl_FragCoord.xy * inverseViewport;\n\n          //Read the rgba data from the texture linear depth\n          vec4 terrainDepthData = texture2D(terrainDepthTexture, uv);\n\n          float terrainDepth = linearDepthFromFloat(rgba2float(terrainDepthData), nearFar);\n\n          //If HUD vertex is behind terrain and the terrain depth is not the initialize value (e.g. we are not looking at the sky)\n          //Mark the HUD vertex as occluded by transparent terrain\n          if(depth < terrainDepth && terrainDepthData != vec4(0,0,0,1)){\n            gl_FragColor.g = 0.5;\n          }`:\"\"}\n  }\n  `)}export{s as HUDOcclusionPass};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../core/maybe.js\";import{a as o,c as i}from\"./vec2.js\";import{O as r,a as l}from\"./vec2f64.js\";import{Z as t}from\"./vec4f64.js\";import{DEFAULT_TEX_SIZE as a}from\"../views/3d/layers/graphics/sdfPrimitives.js\";import{ShaderOutput as s}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutputOptions.js\";import{SliceDraw as n}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{AlignPixel as c}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/AlignPixel.glsl.js\";import{HUD as d}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUD.glsl.js\";import{HUDOcclusionPass as u}from\"../views/3d/webgl-engine/core/shaderLibrary/hud/HUDOcclusionPass.glsl.js\";import{OutputHighlight as p}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{VisualVariables as v}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as g,defaultMaskAlphaCutoff as f}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{ColorConversion as m}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{RgbaFloatEncoding as b}from\"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{ScreenSizePerspective as h,addScreenSizePerspective as w,addScreenSizePerspectiveAlignment as x}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js\";import{Float2PassUniform as C}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float4PassUniform as P}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{Float4sPassUniform as S}from\"../views/3d/webgl-engine/core/shaderModules/Float4sPassUniform.js\";import{FloatPassUniform as j}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{FloatsPassUniform as z}from\"../views/3d/webgl-engine/core/shaderModules/FloatsPassUniform.js\";import{glsl as y}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as F}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as O}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as A}from\"../views/3d/webgl-engine/lib/basicInterfaces.js\";import{VertexAttribute as $}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{vvColorNumber as D}from\"../views/3d/webgl-engine/materials/VisualVariablePassParameters.js\";function B(i){const l=new F,B=i.signedDistanceFieldEnabled;if(l.include(c),l.include(d,i),l.include(n,i),i.output===s.Occlusion)return l.include(u,i),l;const{vertex:H,fragment:V}=l;l.include(h),V.include(b),V.include(m),l.include(v,i),l.varyings.add(\"vcolor\",\"vec4\"),l.varyings.add(\"vtc\",\"vec2\"),l.varyings.add(\"vsize\",\"vec2\"),i.binaryHighlightOcclusionEnabled&&l.varyings.add(\"voccluded\",\"float\"),H.uniforms.add([new P(\"viewport\",((e,o)=>o.camera.fullViewport)),new C(\"screenOffset\",((e,i)=>o(U,2*e.screenOffset[0]*i.camera.pixelRatio,2*e.screenOffset[1]*i.camera.pixelRatio))),new C(\"anchorPosition\",(e=>L(e))),new P(\"materialColor\",(e=>e.color)),new j(\"pixelRatio\",((e,o)=>o.camera.pixelRatio))]),B&&(H.uniforms.add(new P(\"outlineColor\",(e=>e.outlineColor))),V.uniforms.add([new P(\"outlineColor\",(e=>_(e)?e.outlineColor:t)),new j(\"outlineSize\",(e=>_(e)?e.outlineSize:0))])),i.hasScreenSizePerspective&&(w(H),x(H)),(i.debugDrawLabelBorder||i.binaryHighlightOcclusionEnabled)&&l.varyings.add(\"debugBorderCoords\",\"vec4\"),l.attributes.add($.UV0,\"vec2\"),l.attributes.add($.COLOR,\"vec4\"),l.attributes.add($.SIZE,\"vec2\"),l.attributes.add($.AUXPOS2,\"vec4\"),H.code.add(y`\n    void main(void) {\n      ProjectHUDAux projectAux;\n      vec4 posProj = projectPositionHUD(projectAux);\n\n      if (rejectBySlice(projectAux.posModel)) {\n        // Project outside of clip plane\n        gl_Position = vec4(1e038, 1e038, 1e038, 1.0);\n        return;\n      }\n      vec2 inputSize;\n      ${i.hasScreenSizePerspective?y`\n      inputSize = screenSizePerspectiveScaleVec2(size, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspective);\n      vec2 screenOffsetScaled = screenSizePerspectiveScaleVec2(screenOffset, projectAux.absCosAngle, projectAux.distanceToCamera, screenSizePerspectiveAlignment);\n         `:y`\n      inputSize = size;\n      vec2 screenOffsetScaled = screenOffset;`}\n\n      ${i.vvSize?\"inputSize *= vvScale(auxpos2).xx;\":\"\"}\n\n      vec2 combinedSize = inputSize * pixelRatio;\n      vec4 quadOffset = vec4(0.0);\n\n      ${i.occlusionTestEnabled||i.binaryHighlightOcclusionEnabled?\"bool visible = testVisibilityHUD(posProj);\":\"\"}\n\n      ${i.binaryHighlightOcclusionEnabled?\"voccluded = visible ? 0.0 : 1.0;\":\"\"}\n    `);const E=y`vec2 uv01 = floor(uv0);\nvec2 uv = uv0 - uv01;\nquadOffset.xy = ((uv01 - anchorPosition) * 2.0 * combinedSize + screenOffsetScaled) / viewport.zw * posProj.w;`,T=i.pixelSnappingEnabled?B?y`posProj = alignToPixelOrigin(posProj, viewport.zw) + quadOffset;`:y`posProj += quadOffset;\nif (inputSize.x == size.x) {\nposProj = alignToPixelOrigin(posProj, viewport.zw);\n}`:y`posProj += quadOffset;`;i.vvColor&&H.uniforms.add([new S(\"vvColorColors\",(e=>e.vvColorColors),D),new z(\"vvColorValues\",(e=>e.vvColorValues),D)]),H.uniforms.add(new C(\"textureCoordinateScaleFactor\",(o=>e(o.texture)&&e(o.texture.descriptor.textureCoordinateScaleFactor)?o.texture.descriptor.textureCoordinateScaleFactor:r))),H.code.add(y`\n    ${i.occlusionTestEnabled?\"if (visible) {\":\"\"}\n    ${E}\n    ${i.vvColor?\"vcolor = vvGetColor(auxpos2, vvColorValues, vvColorColors) * materialColor;\":\"vcolor = color / 255.0 * materialColor;\"}\n\n    bool alphaDiscard = vcolor.a < ${y.float(g)};\n    ${B?`alphaDiscard = alphaDiscard && outlineColor.a < ${y.float(g)};`:\"\"}\n    if (alphaDiscard) {\n      // \"early discard\" if both symbol color (= fill) and outline color (if applicable) are transparent\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n      return;\n    } else {\n      ${T}\n      gl_Position = posProj;\n    }\n\n    vtc = uv * textureCoordinateScaleFactor;\n\n    ${i.debugDrawLabelBorder?\"debugBorderCoords = vec4(uv01, 1.5 / combinedSize);\":\"\"}\n    vsize = inputSize;\n    ${i.occlusionTestEnabled?y`} else { vtc = vec2(0.0);\n      ${i.debugDrawLabelBorder?\"debugBorderCoords = vec4(0.5, 0.5, 1.5 / combinedSize);}\":\"}\"}`:\"\"}\n  }\n  `),V.uniforms.add(new O(\"tex\",(e=>e.texture)));const M=i.debugDrawLabelBorder?y`(isBorder > 0.0 ? 0.0 : ${y.float(f)})`:y.float(f),R=y`\n    ${i.debugDrawLabelBorder?y`\n      float isBorder = float(any(lessThan(debugBorderCoords.xy, debugBorderCoords.zw)) || any(greaterThan(debugBorderCoords.xy, 1.0 - debugBorderCoords.zw)));`:\"\"}\n\n    ${B?y`\n      vec4 fillPixelColor = vcolor;\n\n      // Attempt to sample texel centers to avoid that thin cross outlines\n      // disappear with large symbol sizes.\n      // see: https://devtopia.esri.com/WebGIS/arcgis-js-api/issues/7058#issuecomment-603041\n      const float txSize = ${y.float(a)};\n      const float texelSize = 1.0 / txSize;\n      // Calculate how much we have to add/subtract to/from each texel to reach the size of an onscreen pixel\n      vec2 scaleFactor = (vsize - txSize) * texelSize;\n      vec2 samplePos = vtc + (vec2(1.0, -1.0) * texelSize) * scaleFactor;\n\n      // Get distance and map it into [-0.5, 0.5]\n      float d = rgba2float(texture2D(tex, samplePos)) - 0.5;\n\n      // Distance in output units (i.e. pixels)\n      float dist = d * vsize.x;\n\n      // Create smooth transition from the icon into its outline\n      float fillAlphaFactor = clamp(0.5 - dist, 0.0, 1.0);\n      fillPixelColor.a *= fillAlphaFactor;\n\n      if (outlineSize > 0.25) {\n        vec4 outlinePixelColor = outlineColor;\n        float clampedOutlineSize = min(outlineSize, 0.5*vsize.x);\n\n        // Create smooth transition around outline\n        float outlineAlphaFactor = clamp(0.5 - (abs(dist) - 0.5*clampedOutlineSize), 0.0, 1.0);\n        outlinePixelColor.a *= outlineAlphaFactor;\n\n        if (\n          outlineAlphaFactor + fillAlphaFactor < ${M} ||\n          fillPixelColor.a + outlinePixelColor.a < ${y.float(g)}\n        ) {\n          discard;\n        }\n\n        // perform un-premultiplied over operator (see https://en.wikipedia.org/wiki/Alpha_compositing#Description)\n        float compositeAlpha = outlinePixelColor.a + fillPixelColor.a * (1.0 - outlinePixelColor.a);\n        vec3 compositeColor = vec3(outlinePixelColor) * outlinePixelColor.a +\n          vec3(fillPixelColor) * fillPixelColor.a * (1.0 - outlinePixelColor.a);\n\n        gl_FragColor = vec4(compositeColor, compositeAlpha);\n      } else {\n        if (fillAlphaFactor < ${M}) {\n          discard;\n        }\n\n        gl_FragColor = premultiplyAlpha(fillPixelColor);\n      }\n\n      // visualize SDF:\n      // gl_FragColor = vec4(clamp(-dist/vsize.x*2.0, 0.0, 1.0), clamp(dist/vsize.x*2.0, 0.0, 1.0), 0.0, 1.0);\n      `:y`\n          vec4 texColor = texture2D(tex, vtc, -0.5);\n          if (texColor.a < ${M}) {\n            discard;\n          }\n          gl_FragColor = texColor * premultiplyAlpha(vcolor);\n          `}\n\n    // Draw debug border with transparency, so that original texels along border are still partially visible\n    ${i.debugDrawLabelBorder?y`gl_FragColor = mix(gl_FragColor, vec4(1.0, 0.0, 1.0, 1.0), isBorder * 0.5);`:\"\"}\n  `;return i.output===s.Alpha&&V.code.add(y`\n      void main() {\n        ${R}\n        gl_FragColor = vec4(gl_FragColor.a);\n      }\n      `),i.output===s.Color&&V.code.add(y`\n    void main() {\n      ${R}\n      ${i.transparencyPassType===A.FrontFace?\"gl_FragColor.rgb /= gl_FragColor.a;\":\"\"}\n    }\n    `),i.output===s.Highlight&&(l.include(p),V.code.add(y`\n    void main() {\n      ${R}\n      ${i.binaryHighlightOcclusionEnabled?y`\n          if (voccluded == 1.0) {\n            gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);\n          } else {\n            gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);\n          }`:\"outputHighlight();\"}\n    }\n    `)),l}function _(e){return e.outlineColor[3]>0&&e.outlineSize>0}function L(e,o=U){return e.textureIsSignedDistanceField?H(e.anchorPosition,e.distanceFieldBoundingBox,o):i(o,e.anchorPosition),o}function H(i,r,l){e(r)?o(l,i[0]*(r[2]-r[0])+r[0],i[1]*(r[3]-r[1])+r[1]):o(l,0,0)}const U=l(),V=Object.freeze(Object.defineProperty({__proto__:null,build:B,calculateAnchorPosForRendering:L},Symbol.toStringTag,{value:\"Module\"}));export{V as H,B as b,L as c};\n"],
  "mappings": "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",
  "names": ["s", "n", "l", "a", "e", "r", "i", "l", "B", "c", "u", "s", "H", "V", "a", "e", "o", "r", "t", "n", "O"]
}
