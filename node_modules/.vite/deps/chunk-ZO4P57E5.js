import {
  n as n2
} from "./chunk-DNPZNIDB.js";
import {
  e as e2
} from "./chunk-WW7VYUQW.js";
import {
  r as r2
} from "./chunk-FCDEMPPS.js";
import {
  o
} from "./chunk-TEJEYVH4.js";
import {
  o as o2
} from "./chunk-HEZ2ATGC.js";
import {
  u
} from "./chunk-IJHFAZOW.js";
import {
  c
} from "./chunk-DMGVDNFD.js";
import {
  d
} from "./chunk-YAQGRU5B.js";
import {
  o as o3
} from "./chunk-A3QLZKCF.js";
import {
  e
} from "./chunk-LGILR4HN.js";
import {
  i2
} from "./chunk-I5UNY2WQ.js";
import {
  n
} from "./chunk-NAB3NF54.js";
import {
  O as O2
} from "./chunk-MDCKEJ7B.js";
import {
  O
} from "./chunk-VMF4NMEB.js";
import {
  i
} from "./chunk-RTHP2LNT.js";
import {
  r
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/chunks/ImageMaterial.glsl.js
function f(f2) {
  const w2 = new i2();
  d(w2, f2), w2.include(r2), w2.attributes.add(O.POSITION, "vec3"), w2.attributes.add(O.UV0, "vec2"), w2.varyings.add("vpos", "vec3"), f2.hasMultipassTerrain && w2.varyings.add("depth", "float");
  const { vertex: h, fragment: b } = w2;
  return h.uniforms.add(new e("textureCoordinateScaleFactor", (o4) => r(o4.texture) && r(o4.texture.descriptor.textureCoordinateScaleFactor) ? o4.texture.descriptor.textureCoordinateScaleFactor : i)), h.code.add(n`
    void main(void) {
      vpos = position;
      ${f2.hasMultipassTerrain ? "depth = (view * vec4(vpos, 1.0)).z;" : ""}
      vTexCoord = uv0 * textureCoordinateScaleFactor;
      gl_Position = transformPosition(proj, view, vpos);
    }
  `), w2.include(u, f2), w2.include(n2, f2), b.uniforms.add([new c("tex", (e3) => e3.texture), new o3("opacity", (e3) => e3.opacity)]), w2.varyings.add("vTexCoord", "vec2"), f2.output === o.Alpha ? b.code.add(n`
    void main() {
      discardBySlice(vpos);
      ${f2.hasMultipassTerrain ? "terrainDepthTest(gl_FragCoord, depth);" : ""}

      float alpha = texture2D(tex, vTexCoord).a * opacity;
      if (alpha  < ${n.float(o2)}) {
        discard;
      }

      gl_FragColor = vec4(alpha);
    }
    `) : (b.include(e2), b.code.add(n`
    void main() {
      discardBySlice(vpos);
      ${f2.hasMultipassTerrain ? "terrainDepthTest(gl_FragCoord, depth);" : ""}
      gl_FragColor = texture2D(tex, vTexCoord) * opacity;

      if (gl_FragColor.a < ${n.float(o2)}) {
        discard;
      }

      gl_FragColor = highlightSlice(gl_FragColor, vpos);
      ${f2.transparencyPassType === O2.Color ? "gl_FragColor = premultiplyAlpha(gl_FragColor);" : ""}
    }
    `)), w2;
}
var w = Object.freeze(Object.defineProperty({ __proto__: null, build: f }, Symbol.toStringTag, { value: "Module" }));

export {
  f,
  w
};
//# sourceMappingURL=chunk-ZO4P57E5.js.map
