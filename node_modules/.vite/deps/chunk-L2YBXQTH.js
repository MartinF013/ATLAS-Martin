import {
  K
} from "./chunk-GSFXXEAM.js";
import {
  y
} from "./chunk-TBT57L4K.js";
import {
  i
} from "./chunk-C4LU7RDX.js";
import {
  d as d2
} from "./chunk-4PRVTUEZ.js";
import {
  s
} from "./chunk-DMJWTK32.js";
import {
  k2 as k
} from "./chunk-3NMRL5CR.js";
import {
  r
} from "./chunk-ZIHDQYKE.js";
import {
  l
} from "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  b
} from "./chunk-23NWA6WL.js";
import {
  m
} from "./chunk-G5JBUC5N.js";

// node_modules/@arcgis/core/rest/support/AttachmentQuery.js
var a;
var p = a = class extends l {
  constructor(t) {
    super(t), this.attachmentTypes = null, this.attachmentsWhere = null, this.cacheHint = void 0, this.keywords = null, this.globalIds = null, this.name = null, this.num = null, this.objectIds = null, this.returnMetadata = false, this.size = null, this.start = null, this.where = null;
  }
  writeStart(t, e3) {
    e3.resultOffset = this.start, e3.resultRecordCount = this.num || 10;
  }
  clone() {
    return new a(m({ attachmentTypes: this.attachmentTypes, attachmentsWhere: this.attachmentsWhere, cacheHint: this.cacheHint, keywords: this.keywords, where: this.where, globalIds: this.globalIds, name: this.name, num: this.num, objectIds: this.objectIds, returnMetadata: this.returnMetadata, size: this.size, start: this.start }));
  }
};
e([d({ type: [String], json: { write: true } })], p.prototype, "attachmentTypes", void 0), e([d({ type: String, json: { read: { source: "attachmentsDefinitionExpression" }, write: { target: "attachmentsDefinitionExpression" } } })], p.prototype, "attachmentsWhere", void 0), e([d({ type: Boolean, json: { write: true } })], p.prototype, "cacheHint", void 0), e([d({ type: [String], json: { write: true } })], p.prototype, "keywords", void 0), e([d({ type: [Number], json: { write: true } })], p.prototype, "globalIds", void 0), e([d({ json: { write: true } })], p.prototype, "name", void 0), e([d({ type: Number, json: { read: { source: "resultRecordCount" } } })], p.prototype, "num", void 0), e([d({ type: [Number], json: { write: true } })], p.prototype, "objectIds", void 0), e([d({ type: Boolean, json: { default: false, write: true } })], p.prototype, "returnMetadata", void 0), e([d({ type: [Number], json: { write: true } })], p.prototype, "size", void 0), e([d({ type: Number, json: { read: { source: "resultOffset" } } })], p.prototype, "start", void 0), e([r("start"), r("num")], p.prototype, "writeStart", null), e([d({ type: String, json: { read: { source: "definitionExpression" }, write: { target: "definitionExpression" } } })], p.prototype, "where", void 0), p = a = e([n("esri.rest.support.AttachmentQuery")], p), p.from = b(p);
var c = p;

// node_modules/@arcgis/core/rest/support/RelationshipQuery.js
var u;
var c2 = u = class extends l {
  constructor(t) {
    super(t), this.cacheHint = void 0, this.dynamicDataSource = void 0, this.gdbVersion = null, this.geometryPrecision = void 0, this.historicMoment = null, this.maxAllowableOffset = void 0, this.objectIds = null, this.orderByFields = null, this.outFields = null, this.outSpatialReference = null, this.relationshipId = void 0, this.start = void 0, this.num = void 0, this.returnGeometry = false, this.returnM = void 0, this.returnZ = void 0, this.where = null;
  }
  _writeHistoricMoment(t, e3) {
    e3.historicMoment = t && t.getTime();
  }
  writeStart(t, e3) {
    e3.resultOffset = this.start, e3.resultRecordCount = this.num || 10, this.start > 0 && null == this.where && (e3.definitionExpression = "1=1");
  }
  clone() {
    return new u(m({ cacheHint: this.cacheHint, dynamicDataSource: this.dynamicDataSource, gdbVersion: this.gdbVersion, geometryPrecision: this.geometryPrecision, historicMoment: this.historicMoment && new Date(this.historicMoment.getTime()), maxAllowableOffset: this.maxAllowableOffset, objectIds: this.objectIds, orderByFields: this.orderByFields, outFields: this.outFields, outSpatialReference: this.outSpatialReference, relationshipId: this.relationshipId, start: this.start, num: this.num, returnGeometry: this.returnGeometry, where: this.where, returnZ: this.returnZ, returnM: this.returnM }));
  }
};
e([d({ type: Boolean, json: { write: true } })], c2.prototype, "cacheHint", void 0), e([d({ type: K, json: { write: true } })], c2.prototype, "dynamicDataSource", void 0), e([d({ type: String, json: { write: true } })], c2.prototype, "gdbVersion", void 0), e([d({ type: Number, json: { write: true } })], c2.prototype, "geometryPrecision", void 0), e([d({ type: Date })], c2.prototype, "historicMoment", void 0), e([r("historicMoment")], c2.prototype, "_writeHistoricMoment", null), e([d({ type: Number, json: { write: true } })], c2.prototype, "maxAllowableOffset", void 0), e([d({ type: [Number], json: { write: true } })], c2.prototype, "objectIds", void 0), e([d({ type: [String], json: { write: true } })], c2.prototype, "orderByFields", void 0), e([d({ type: [String], json: { write: true } })], c2.prototype, "outFields", void 0), e([d({ type: k, json: { read: { source: "outSR" }, write: { target: "outSR" } } })], c2.prototype, "outSpatialReference", void 0), e([d({ json: { write: true } })], c2.prototype, "relationshipId", void 0), e([d({ type: Number, json: { read: { source: "resultOffset" } } })], c2.prototype, "start", void 0), e([r("start"), r("num")], c2.prototype, "writeStart", null), e([d({ type: Number, json: { read: { source: "resultRecordCount" } } })], c2.prototype, "num", void 0), e([d({ json: { write: true } })], c2.prototype, "returnGeometry", void 0), e([d({ type: Boolean, json: { write: { overridePolicy: (t) => ({ enabled: t }) } } })], c2.prototype, "returnM", void 0), e([d({ type: Boolean, json: { write: { overridePolicy: (t) => ({ enabled: t }) } } })], c2.prototype, "returnZ", void 0), e([d({ type: String, json: { read: { source: "definitionExpression" }, write: { target: "definitionExpression" } } })], c2.prototype, "where", void 0), c2 = u = e([n("esri.rest.support.RelationshipQuery")], c2), c2.from = b(c2);
var d3 = c2;

// node_modules/@arcgis/core/rest/support/TopFilter.js
var e2;
var p2 = e2 = class extends l {
  constructor(o) {
    super(o), this.groupByFields = void 0, this.topCount = void 0, this.orderByFields = void 0;
  }
  clone() {
    return new e2({ groupByFields: this.groupByFields, topCount: this.topCount, orderByFields: this.orderByFields });
  }
};
e([d({ type: [String], json: { write: true } })], p2.prototype, "groupByFields", void 0), e([d({ type: Number, json: { write: true } })], p2.prototype, "topCount", void 0), e([d({ type: [String], json: { write: true } })], p2.prototype, "orderByFields", void 0), p2 = e2 = e([n("esri.rest.support.TopFilter")], p2);
var i2 = p2;

// node_modules/@arcgis/core/rest/support/TopFeaturesQuery.js
var y2;
var m2 = new s({ esriSpatialRelIntersects: "intersects", esriSpatialRelContains: "contains", esriSpatialRelCrosses: "crosses", esriSpatialRelDisjoint: "disjoint", esriSpatialRelEnvelopeIntersects: "envelope-intersects", esriSpatialRelIndexIntersects: "index-intersects", esriSpatialRelOverlaps: "overlaps", esriSpatialRelTouches: "touches", esriSpatialRelWithin: "within", esriSpatialRelRelation: "relation" });
var h = new s({ esriSRUnit_Meter: "meters", esriSRUnit_Kilometer: "kilometers", esriSRUnit_Foot: "feet", esriSRUnit_StatuteMile: "miles", esriSRUnit_NauticalMile: "nautical-miles", esriSRUnit_USNauticalMile: "us-nautical-miles" });
var j = y2 = class extends l {
  constructor(e3) {
    super(e3), this.cacheHint = void 0, this.distance = void 0, this.geometry = null, this.geometryPrecision = void 0, this.maxAllowableOffset = void 0, this.num = void 0, this.objectIds = null, this.orderByFields = null, this.outFields = null, this.outSpatialReference = null, this.resultType = null, this.returnGeometry = false, this.returnM = void 0, this.returnZ = void 0, this.start = void 0, this.spatialRelationship = "intersects", this.timeExtent = null, this.topFilter = void 0, this.units = null, this.where = "1=1";
  }
  writeStart(e3, t) {
    t.resultOffset = this.start, t.resultRecordCount = this.num || 10;
  }
  clone() {
    return new y2(m({ cacheHint: this.cacheHint, distance: this.distance, geometry: this.geometry, geometryPrecision: this.geometryPrecision, maxAllowableOffset: this.maxAllowableOffset, num: this.num, objectIds: this.objectIds, orderByFields: this.orderByFields, outFields: this.outFields, outSpatialReference: this.outSpatialReference, resultType: this.resultType, returnGeometry: this.returnGeometry, returnZ: this.returnZ, returnM: this.returnM, start: this.start, spatialRelationship: this.spatialRelationship, timeExtent: this.timeExtent, topFilter: this.topFilter, units: this.units, where: this.where }));
  }
};
e([d({ type: Boolean, json: { write: true } })], j.prototype, "cacheHint", void 0), e([d({ type: Number, json: { write: { overridePolicy: (e3) => ({ enabled: e3 > 0 }) } } })], j.prototype, "distance", void 0), e([d({ types: i, json: { read: d2, write: true } })], j.prototype, "geometry", void 0), e([d({ type: Number, json: { write: true } })], j.prototype, "geometryPrecision", void 0), e([d({ type: Number, json: { write: true } })], j.prototype, "maxAllowableOffset", void 0), e([d({ type: Number, json: { read: { source: "resultRecordCount" } } })], j.prototype, "num", void 0), e([d({ json: { write: true } })], j.prototype, "objectIds", void 0), e([d({ type: [String], json: { write: true } })], j.prototype, "orderByFields", void 0), e([d({ type: [String], json: { write: true } })], j.prototype, "outFields", void 0), e([d({ type: k, json: { read: { source: "outSR" }, write: { target: "outSR" } } })], j.prototype, "outSpatialReference", void 0), e([d({ type: String, json: { write: true } })], j.prototype, "resultType", void 0), e([d({ json: { write: true } })], j.prototype, "returnGeometry", void 0), e([d({ type: Boolean, json: { write: { overridePolicy: (e3) => ({ enabled: e3 }) } } })], j.prototype, "returnM", void 0), e([d({ type: Boolean, json: { write: { overridePolicy: (e3) => ({ enabled: e3 }) } } })], j.prototype, "returnZ", void 0), e([d({ type: Number, json: { read: { source: "resultOffset" } } })], j.prototype, "start", void 0), e([r("start"), r("num")], j.prototype, "writeStart", null), e([d({ type: String, json: { read: { source: "spatialRel", reader: m2.read }, write: { target: "spatialRel", writer: m2.write } } })], j.prototype, "spatialRelationship", void 0), e([d({ type: y, json: { write: true } })], j.prototype, "timeExtent", void 0), e([d({ type: i2, json: { write: true } })], j.prototype, "topFilter", void 0), e([d({ type: String, json: { read: h.read, write: { writer: h.write, overridePolicy(e3) {
  return { enabled: e3 && this.distance > 0 };
} } } })], j.prototype, "units", void 0), e([d({ type: String, json: { write: true } })], j.prototype, "where", void 0), j = y2 = e([n("esri.rest.support.TopFeaturesQuery")], j), j.from = b(j);
var S = j;

export {
  c,
  d3 as d,
  S
};
//# sourceMappingURL=chunk-L2YBXQTH.js.map
