import {
  o as o2
} from "./chunk-KSOWE6GO.js";
import {
  d
} from "./chunk-PMOPLTRU.js";
import {
  c
} from "./chunk-DMGVDNFD.js";
import {
  o
} from "./chunk-A3QLZKCF.js";
import {
  i2 as i
} from "./chunk-I5UNY2WQ.js";
import {
  n
} from "./chunk-NAB3NF54.js";

// node_modules/@arcgis/core/chunks/Heatmap.glsl.js
function t() {
  const t2 = new i();
  return t2.include(o2), t2.include(d), t2.fragment.uniforms.add([new c("densityMap", (e) => e.densityMap), new c("tex", (e) => e.colorRamp), new o("densityNormalizer", (e) => 1 / (e.maxDensity - e.minDensity)), new o("minDensity", (e) => e.minDensity)]), t2.fragment.uniforms.add(new o("densityMultiplier", (e) => 3 / (e.searchRadius * e.searchRadius * Math.PI))), t2.fragment.code.add(n`void main() {
float density = texture2D(densityMap, uv).r * densityMultiplier;
float densityRatio = (density - minDensity) * densityNormalizer;
vec4 color = texture2D(tex, vec2(clamp(densityRatio, 0.0, 1.0), 0.5));
discardOrAdjustAlpha(color);
gl_FragColor = color;
}`), t2;
}
var d2 = Object.freeze(Object.defineProperty({ __proto__: null, build: t }, Symbol.toStringTag, { value: "Module" }));

export {
  t,
  d2 as d
};
//# sourceMappingURL=chunk-FXA5BH2C.js.map
