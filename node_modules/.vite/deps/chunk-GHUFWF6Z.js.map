{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/IsNaN.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/AdjustProjectedPosition.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardByCoverage.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardNonSilhouetteEdges.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/EdgeUtil.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardShortEdges.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/UnpackAttributes.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/LineAmplitude.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/LineOffset.glsl.js", "../../@arcgis/core/chunks/EdgeShader.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{glsl as a}from\"../../shaderModules/interfaces.js\";function o(o){const e=a`bool isNaN( float val )\n{\nreturn ( val < 0.0 || 0.0 < val || val == 0.0 ) ? false : true;\n}`;o.code.add(e)}export{o as IsNaN};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{f as o}from\"../../../../../../chunks/vec2f64.js\";import{IsNaN as r}from\"../../../core/shaderLibrary/util/IsNaN.glsl.js\";import{Float2PassUniform as e}from\"../../../core/shaderModules/Float2PassUniform.js\";import{glsl as a}from\"../../../core/shaderModules/interfaces.js\";import{Matrix3PassUniform as s}from\"../../../core/shaderModules/Matrix3PassUniform.js\";import{Matrix4PassUniform as t}from\"../../../core/shaderModules/Matrix4PassUniform.js\";import{Matrix4Uniform as l}from\"../../../core/shaderModules/Matrix4Uniform.js\";const i=o(.5,-4e-4);function c(o,c){const f=o.vertex;f.include(r),f.constants.add(\"depthBias\",\"vec2\",i),f.uniforms.add(new e(\"inverseViewport\",((o,r)=>r.inverseViewport))),c.legacy?(f.uniforms.add(new l(\"localView\")),f.uniforms.add(new t(\"proj\",((o,r)=>r.camera.projectionMatrix))),f.code.add(a`vec2 calculateProjectedBiasXY(vec4 projPos, vec3 globalNormal) {\nfloat offsetXY = depthBias.x;\nvec4 projNormal = proj * localView * vec4(globalNormal, 0.0);\nreturn offsetXY * projPos.w * 2.0 * inverseViewport * normalize(projNormal.xyz).xy;\n}`)):(f.uniforms.add(new s(\"transformNormalViewFromGlobal\",(o=>o.transformNormalViewFromGlobal))),f.uniforms.add(new t(\"transformProjFromView\",(o=>o.transformProjFromView))),f.code.add(a`vec2 calculateProjectedBiasXY(vec4 projPos, vec3 globalNormal) {\nfloat offsetXY = depthBias.x;\nvec4 projNormal = transformProjFromView * vec4(transformNormalViewFromGlobal * globalNormal, 0.0);\nreturn offsetXY * projPos.w * 2.0 * inverseViewport * normalize(projNormal.xyz).xy;\n}`)),f.code.add(a`float _calculateProjectedBiasZ(vec4 projPos) {\nfloat offsetZ = depthBias.y;\nreturn sqrt(max(projPos.z,0.0)) * offsetZ;\n}\nvec4 adjustProjectedPosition(vec4 projPos, vec3 worldNormal, float lineWidth) {\nvec2 offsetXY = calculateProjectedBiasXY(projPos, worldNormal);\nif (!isNaN(offsetXY.x) && !isNaN(offsetXY.y)) {\nprojPos.xy += offsetXY;\n}\nprojPos.z += _calculateProjectedBiasZ(projPos);\nreturn projPos;\n}`)}export{c as AdjustProjectedPosition};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../../core/shaderModules/interfaces.js\";function a(a,r){const d=a.fragment;d.constants.add(\"coverageTestThreshold\",\"float\",.01),r.antialiasing?d.code.add(e`#define discardByCoverage(radius, coverage) { if (coverage < coverageTestThreshold) discard; }`):d.code.add(e`#define discardByCoverage(radius, coverage) { float coverageLimit = radius <= 0.5 ? coverageTestThreshold : 0.75; if (coverage < coverageLimit) discard; }`)}export{a as DiscardByCoverage};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../../core/shaderModules/interfaces.js\";function o(o,r){const l=o.vertex;r.silhouette?(l.code.add(e`bool isSilhouetteEdge(vec3 viewDir, vec3 normalA, vec3 normalB) {\nfloat faceAVisible = dot(viewDir, normalA);\nfloat faceBVisible = dot(viewDir, normalB);\nreturn faceAVisible * faceBVisible < 0.0;\n}`),r.legacy?l.code.add(e`bool discardNonSilhouetteEdges(vec3 viewPos, vec3 worldPos) {\nvec3 viewNormalA = _modelToViewNormal(normalA);\nvec3 viewNormalB = _modelToViewNormal(normalB);\nvec3 viewDir = -viewPos;\nif (isSilhouetteEdge(viewDir, viewNormalA, viewNormalB)) {\nreturn false;\n}\ngl_Position = vec4(10.0, 10.0, 10.0, 1.0);\nreturn true;\n}`):l.code.add(e`bool discardNonSilhouetteEdges(vec3 viewPos, vec3 worldPos) {\nvec3 worldNormalA = _modelToWorldNormal(normalA);\nvec3 worldNormalB = _modelToWorldNormal(normalB);\nvec3 viewDir = -worldPos;\nif (isSilhouetteEdge(viewDir, worldNormalA, worldNormalB)) {\nreturn false;\n}\ngl_Position = vec4(10.0, 10.0, 10.0, 1.0);\nreturn true;\n}`)):l.code.add(e`bool discardNonSilhouetteEdges(vec3 viewPos, vec3 worldPos) {\nreturn false;\n}`)}export{o as DiscardNonSilhouetteEdges};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{MAX_ELEVATION_OFFSET as o}from\"../../../collections/Component/Material/shader/ComponentData.glsl.js\";import{DoublePrecision as e}from\"../../../core/shaderLibrary/util/DoublePrecision.glsl.js\";import{RgbaFloatEncoding as r}from\"../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{Float2Uniform as t}from\"../../../core/shaderModules/Float2Uniform.js\";import{Float3DrawUniform as a}from\"../../../core/shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as n}from\"../../../core/shaderModules/Float3PassUniform.js\";import{FloatPassUniform as l}from\"../../../core/shaderModules/FloatPassUniform.js\";import{glsl as d}from\"../../../core/shaderModules/interfaces.js\";import{Matrix3DrawUniform as m}from\"../../../core/shaderModules/Matrix3DrawUniform.js\";import{Matrix3PassUniform as s}from\"../../../core/shaderModules/Matrix3PassUniform.js\";import{Matrix4PassUniform as i}from\"../../../core/shaderModules/Matrix4PassUniform.js\";import{Texture2DUniform as c}from\"../../../core/shaderModules/Texture2DUniform.js\";import{VertexAttribute as f}from\"../../../lib/VertexAttribute.js\";function u(u,v){const p=u.vertex;p.include(r),p.uniforms.add(new l(\"distanceFalloffFactor\",(o=>o.distanceFalloffFactor))),p.code.add(d`float distanceBasedPerspectiveFactor(float distance) {\nreturn clamp(sqrt(distanceFalloffFactor / distance), 0.0, 1.0);\n}`),p.uniforms.add(new c(\"componentDataTex\")),p.uniforms.add(new t(\"componentDataTexInvDim\")),u.attributes.add(f.COMPONENTINDEX,\"float\"),p.constants.add(\"componentColorFieldOffset\",\"float\",0),p.constants.add(\"componentOtherFieldOffset\",\"float\",1),p.constants.add(\"componentVerticalOffsetFieldOffset\",\"float\",2),p.constants.add(\"componentFieldCount\",\"float\",3),p.constants.add(\"lineWidthFractionFactor\",\"float\",8),p.constants.add(\"extensionLengthOffset\",\"float\",128),p.constants.add(\"componentTexWidth\",\"float\",4096),p.constants.add(\"verticalOffsetScale\",\"float\",2*o),p.code.add(d`vec2 _componentTextureCoords(float componentIndex, float fieldOffset) {\nfloat fieldIndex = componentFieldCount * componentIndex + fieldOffset;\nfloat rowIndex = floor(fieldIndex / componentTexWidth);\nfloat colIndex = mod(fieldIndex, componentTexWidth);\nvec2 linearIndex = vec2(\n(colIndex + 0.5) / componentTexWidth,\n(rowIndex + 0.5) * componentDataTexInvDim.y\n);\nreturn linearIndex;\n}\nstruct ComponentData {\nvec4 color;\nfloat lineWidth;\nfloat extensionLength;\nfloat type;\nfloat verticalOffset;\n};\nComponentData readComponentData() {\nvec2 colorIndex = _componentTextureCoords(componentIndex, componentColorFieldOffset);\nvec2 otherIndex = _componentTextureCoords(componentIndex, componentOtherFieldOffset);\nvec2 verticalOffsetIndex = _componentTextureCoords(componentIndex, componentVerticalOffsetFieldOffset);\nvec4 colorValue = texture2D(componentDataTex, colorIndex);\nvec4 otherValue = texture2D(componentDataTex, otherIndex);\nfloat verticalOffset = (rgba2float(texture2D(componentDataTex, verticalOffsetIndex)) - 0.5) * verticalOffsetScale;\nreturn ComponentData(\nvec4(colorValue.rgb, colorValue.a * otherValue.w),\notherValue.x * (255.0 / lineWidthFractionFactor),\notherValue.y * 255.0 - extensionLengthOffset,\n-(otherValue.z * 255.0) + 0.5,\nverticalOffset\n);\n}`),v.legacy?p.code.add(d`vec3 _modelToWorldNormal(vec3 normal) {\nreturn (model * vec4(normal, 0.0)).xyz;\n}\nvec3 _modelToViewNormal(vec3 normal) {\nreturn (localView * model * vec4(normal, 0.0)).xyz;\n}`):(p.uniforms.add(new m(\"transformNormalGlobalFromModel\",(o=>o.transformNormalGlobalFromModel))),p.code.add(d`vec3 _modelToWorldNormal(vec3 normal) {\nreturn transformNormalGlobalFromModel * normal;\n}`)),v.silhouette?(u.attributes.add(f.NORMALA,\"vec3\"),u.attributes.add(f.NORMALB,\"vec3\"),p.code.add(d`vec3 worldNormal() {\nreturn _modelToWorldNormal(normalize(normalA + normalB));\n}`)):(u.attributes.add(f.NORMAL,\"vec3\"),p.code.add(d`vec3 worldNormal() {\nreturn _modelToWorldNormal(normal);\n}`)),v.legacy?p.code.add(d`void worldAndViewFromModelPosition(vec3 modelPos, float verticalOffset, out vec3 worldPos, out vec3 viewPos) {\nworldPos = (model * vec4(modelPos, 1.0)).xyz;\nviewPos = (localView * vec4(worldPos, 1.0)).xyz;\n}`):(p.include(e,v),p.include(e,v),p.uniforms.add([new s(\"transformViewFromCameraRelativeRS\",(o=>o.transformViewFromCameraRelativeRS)),new m(\"transformWorldFromModelRS\",(o=>o.transformWorldFromModelRS)),new a(\"transformWorldFromModelTL\",(o=>o.transformWorldFromModelTL)),new a(\"transformWorldFromModelTH\",(o=>o.transformWorldFromModelTH)),new n(\"transformWorldFromViewTL\",(o=>o.transformWorldFromViewTL)),new n(\"transformWorldFromViewTH\",(o=>o.transformWorldFromViewTH))]),p.code.add(d`\n      void worldAndViewFromModelPosition(vec3 modelPos, float verticalOffset, out vec3 worldPos, out vec3 viewPos) {\n        vec3 rotatedModelPosition = transformWorldFromModelRS * modelPos;\n\n        vec3 transformCameraRelativeFromModel = dpAdd(\n          transformWorldFromModelTL,\n          transformWorldFromModelTH,\n          -transformWorldFromViewTL,\n          -transformWorldFromViewTH\n        );\n\n        worldPos = transformCameraRelativeFromModel + rotatedModelPosition;\n\n        if (verticalOffset != 0.0) {\n          vec3 vUp = ${v.spherical?d`normalize(transformWorldFromModelTL + rotatedModelPosition);`:d`vec3(0.0, 0.0, 1.0);`}\n          worldPos += verticalOffset * vUp;\n        }\n\n        viewPos = transformViewFromCameraRelativeRS * worldPos;\n      }\n    `)),p.uniforms.add(new i(\"transformProjFromView\",((o,e)=>e.camera.projectionMatrix))),p.code.add(d`vec4 projFromViewPosition(vec3 position) {\nreturn transformProjFromView * vec4(position, 1.0);\n}`),p.code.add(d`float calculateExtensionLength(float extensionLength, float lineLength) {\nreturn extensionLength / (log2(max(1.0, 256.0 / lineLength)) * 0.2 + 1.0);\n}`)}function v(o){return o.mode===x.SKETCH||o.mode===x.MIXED}function p(o){return o.mode===x.SOLID||o.mode===x.MIXED}var x;!function(o){o[o.SOLID=0]=\"SOLID\",o[o.SKETCH=1]=\"SKETCH\",o[o.MIXED=2]=\"MIXED\",o[o.COUNT=3]=\"COUNT\"}(x||(x={}));export{u as EdgeUtil,x as EdgeUtilMode,v as usesSketchLogic,p as usesSolidLogic};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../../core/shaderModules/interfaces.js\";import{EdgeUtilMode as t}from\"./EdgeUtil.glsl.js\";function i(i,d){const s=i.vertex;switch(d.mode){case t.SKETCH:s.code.add(e`#define discardShortEdges(unpackedAttributes, lineLengthPixels) { if (lineLengthPixels <= 3.0) { gl_Position = vec4(10.0, 10.0, 10.0, 1.0); return; }}`);break;case t.MIXED:s.code.add(e`#define discardShortEdges(unpackedAttributes, lineLengthPixels) { if (unpackedAttributes.type <= 0.0 && lineLengthPixels <= 3.0) { gl_Position = vec4(10.0, 10.0, 10.0, 1.0); return; }}`);break;case t.SOLID:s.code.add(e`#define discardShortEdges(unpackedAttributes, lineLengthPixels) {}`)}}export{i as DiscardShortEdges};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{glsl as t}from\"../../../core/shaderModules/interfaces.js\";import{VertexAttribute as n}from\"../../../lib/VertexAttribute.js\";import{EdgeUtilMode as s}from\"./EdgeUtil.glsl.js\";function i(i,o){const d=i.vertex;switch(i.attributes.add(n.SIDENESS,\"vec2\"),o.mode===s.MIXED?d.code.add(t`struct UnpackedAttributes {\nvec2 sideness;\nvec2 sidenessNorm;\nfloat lineWidthPixels;\nfloat extensionLengthPixels;\nfloat type;\n};`):d.code.add(t`struct UnpackedAttributes {\nvec2 sideness;\nvec2 sidenessNorm;\nfloat lineWidthPixels;\nfloat extensionLengthPixels;\n};`),o.mode){case s.MIXED:d.code.add(t`UnpackedAttributes unpackAttributes(ComponentData component) {\nvec2 sidenessNorm = sideness;\nvec2 sideness = sidenessNorm * 2.0 - 1.0;\nfloat fType = component.type;\nfloat extensionLengthPixels = component.extensionLength;\nfloat lineWidth = component.lineWidth;\nif (fType <= 0.0) {\nextensionLengthPixels *= variantExtension * 2.0 - 1.0;\n}\nreturn UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels, fType);\n}`);break;case s.SKETCH:d.code.add(t`UnpackedAttributes unpackAttributes(ComponentData component) {\nvec2 sidenessNorm = sideness;\nvec2 sideness = sidenessNorm * 2.0 - 1.0;\nfloat extensionLengthPixels = component.extensionLength;\nextensionLengthPixels *= variantExtension * 2.0 - 1.0;\nfloat lineWidth = component.lineWidth;\nreturn UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels);\n}`);break;case s.SOLID:d.code.add(t`UnpackedAttributes unpackAttributes(ComponentData component) {\nvec2 sidenessNorm = sideness;\nvec2 sideness = sidenessNorm * 2.0 - 1.0;\nfloat extensionLengthPixels = component.extensionLength;\nfloat lineWidth = component.lineWidth;\nreturn UnpackedAttributes(sideness, sidenessNorm, lineWidth, extensionLengthPixels);\n}`);break;case s.COUNT:break;default:e(o.mode)}}export{i as UnpackAttributes};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{FloatUniform as e}from\"../../../core/shaderModules/FloatUniform.js\";import{glsl as t}from\"../../../core/shaderModules/interfaces.js\";import{usesSketchLogic as r,EdgeUtilMode as s}from\"./EdgeUtil.glsl.js\";import{UnpackAttributes as a}from\"./UnpackAttributes.glsl.js\";function d(d,u){const i=d.vertex;switch(d.include(a,u),r(u)&&i.uniforms.add(new e(\"strokesAmplitude\")),u.mode){case s.SOLID:i.code.add(t`float calculateLineAmplitude(UnpackedAttributes unpackedAttributes) {\nreturn 0.0;\n}`);break;case s.SKETCH:i.code.add(t`float calculateLineAmplitude(UnpackedAttributes unpackedAttributes) {\nreturn strokesAmplitude;\n}`);break;case s.MIXED:i.code.add(t`float calculateLineAmplitude(UnpackedAttributes unpackedAttributes) {\nfloat type = unpackedAttributes.type;\nif (type <= 0.0) {\nreturn strokesAmplitude;\n}\nelse {\nreturn 0.0;\n}\n}`)}}export{d as LineAmplitude};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{RgbaFloatEncoding as e}from\"../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{Float2Uniform as t}from\"../../../core/shaderModules/Float2Uniform.js\";import{FloatUniform as r}from\"../../../core/shaderModules/FloatUniform.js\";import{glsl as a}from\"../../../core/shaderModules/interfaces.js\";import{Texture2DUniform as s}from\"../../../core/shaderModules/Texture2DUniform.js\";import{usesSketchLogic as o,EdgeUtilMode as c}from\"./EdgeUtil.glsl.js\";import{UnpackAttributes as l}from\"./UnpackAttributes.glsl.js\";function u(u,n){const i=u.vertex;u.include(l,n);const d=u.fragment;switch(o(n)&&(i.uniforms.add(new t(\"strokesTextureScale\")),i.uniforms.add(new r(\"strokesLog2Resolution\")),i.uniforms.add(new r(\"strokeVariants\")),u.varyings.add(\"vStrokeUV\",\"vec2\"),d.uniforms.add(new s(\"strokesTexture\")),d.uniforms.add(new r(\"strokesNormalizationScale\")),i.code.add(a`void calculateStyleOutputsSketch(float lineLength, UnpackedAttributes unpackedAttributes) {\nvec2 sidenessNorm = unpackedAttributes.sidenessNorm;\nfloat lineIndex = clamp(ceil(log2(lineLength)), 0.0, strokesLog2Resolution);\nvStrokeUV = vec2(exp2(lineIndex) * sidenessNorm.y, lineIndex * strokeVariants + variantStroke + 0.5) * strokesTextureScale;\nvStrokeUV.x += variantOffset;\n}`),u.fragment.include(e),d.code.add(a`float calculateLineOffsetSketch() {\nfloat offsetNorm = rgba2float(texture2D(strokesTexture, vStrokeUV));\nreturn (offsetNorm - 0.5) * strokesNormalizationScale;\n}\nfloat calculateLinePressureSketch() {\nreturn rgba2float(texture2D(strokesTexture, vStrokeUV + vec2(0.0, 0.5)));\n}`)),n.mode){case c.SOLID:i.code.add(a`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes) {}`),d.code.add(a`float calculateLineOffset() {\nreturn 0.0;\n}\nfloat calculateLinePressure() {\nreturn 1.0;\n}`);break;case c.SKETCH:i.code.add(a`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes)\n{\ncalculateStyleOutputsSketch(vLineLengthPixels, unpackedAttributes);\n}`),d.code.add(a`float calculateLineOffset() {\nreturn calculateLineOffsetSketch();\n}\nfloat calculateLinePressure() {\nreturn calculateLinePressureSketch();\n}`);break;case c.MIXED:u.varyings.add(\"vType\",\"float\"),i.code.add(a`void calculateStyleOutputs(UnpackedAttributes unpackedAttributes)\n{\nvType = unpackedAttributes.type;\nif (unpackedAttributes.type <= 0.0) {\ncalculateStyleOutputsSketch(vLineLengthPixels, unpackedAttributes);\n}\n}`),d.code.add(a`float calculateLineOffset() {\nif (vType <= 0.0) {\nreturn calculateLineOffsetSketch();\n}\nelse {\nreturn 0.0;\n}\n}\nfloat calculateLinePressure() {\nif (vType <= 0.0) {\nreturn calculateLinePressureSketch();\n}\nelse {\nreturn 1.0;\n}\n}`)}}export{u as LineOffset};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{a as e}from\"./vec2.js\";import{a as i}from\"./vec2f64.js\";import{SliceDraw as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{multipassTerrainTest as s}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{Float2PassUniform as n}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float4PassUniform as t}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as d}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as a}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4Uniform as l}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4Uniform.js\";import{ShaderBuilder as r}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{VertexAttribute as c}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{AdjustProjectedPosition as p}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/AdjustProjectedPosition.glsl.js\";import{DiscardByCoverage as P}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardByCoverage.glsl.js\";import{DiscardNonSilhouetteEdges as u}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardNonSilhouetteEdges.glsl.js\";import{DiscardShortEdges as g}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/DiscardShortEdges.glsl.js\";import{EdgeUtil as v}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/EdgeUtil.glsl.js\";import{LineAmplitude as f}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/LineAmplitude.glsl.js\";import{LineOffset as m}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/LineOffset.glsl.js\";import{UnpackAttributes as x}from\"../views/3d/webgl-engine/shaders/sources/edgeRenderer/UnpackAttributes.glsl.js\";function w(i){const w=new r,A=w.vertex,L=w.fragment;return i.legacy&&A.uniforms.add(new l(\"model\")),i.antialiasing&&(A.code.add(a`#define ANTIALIASING 1`),L.code.add(a`#define ANTIALIASING 1`)),w.include(p,i),w.include(v,i),w.include(f,i),w.include(x,i),w.include(m,i),w.include(o,i),w.include(u,i),w.include(P,i),w.include(g,i),w.include(s,i),w.varyings.add(\"vColor\",\"vec4\"),w.varyings.add(\"vRadius\",\"float\"),w.varyings.add(\"vPosition\",\"vec3\"),w.varyings.add(\"vWorldPosition\",\"vec3\"),w.varyings.add(\"vViewPos\",\"vec3\"),w.varyings.add(\"vLineLengthPixels\",\"float\"),w.varyings.add(\"vSizeFalloffFactor\",\"float\"),A.uniforms.add(new n(\"pixelToNDC\",((i,o)=>e(h,2/o.camera.fullViewport[2],2/o.camera.fullViewport[3])))),A.uniforms.add(new t(\"viewport\",((e,i)=>i.camera.fullViewport))),A.uniforms.add(new d(\"pixelRatio\",((e,i)=>i.camera.pixelRatio))),w.attributes.add(c.POSITION0,\"vec3\"),w.attributes.add(c.POSITION1,\"vec3\"),w.attributes.add(c.VARIANTOFFSET,\"float\"),w.attributes.add(c.VARIANTSTROKE,\"float\"),w.attributes.add(c.VARIANTEXTENSION,\"float\"),A.code.add(a`const float opaqueCutoff = 1.0 / 255.0;\nvoid calculateGeometricOutputs(vec3 viewPosV0, vec3 viewPosV1, vec3 worldPosV0, vec3 worldPosV1, vec3 worldNormal, UnpackedAttributes unpackedAttributes) {\nvec2 sideness = unpackedAttributes.sideness;\nvec2 sidenessNorm = unpackedAttributes.sidenessNorm;\nvWorldPosition = mix(worldPosV0, worldPosV1, sidenessNorm.y).xyz;\nvec3 viewPos = mix(viewPosV0, viewPosV1, sidenessNorm.y);\nvViewPos = viewPos;\nvec4 projPosV0 = projFromViewPosition(viewPosV0);\nvec4 projPosV1 = projFromViewPosition(viewPosV1);\nvec4 projPos = projFromViewPosition(viewPos);\nvec3 screenSpaceLineNDC = (projPosV1.xyz / projPosV1.w - projPosV0.xyz / projPosV0.w);\nvec2 ndcToPixel = viewport.zw * 0.5;\nvec2 screenSpaceLinePixels = screenSpaceLineNDC.xy * ndcToPixel;\nfloat lineLengthPixels = length(screenSpaceLinePixels);\nfloat dzPerPixel = screenSpaceLineNDC.z / lineLengthPixels;\nvec2 screenSpaceDirection = screenSpaceLinePixels / lineLengthPixels;\nvec2 perpendicularScreenSpaceDirection = vec2(screenSpaceDirection.y, -screenSpaceDirection.x) * sideness.x;\nfloat falloffFactor = distanceBasedPerspectiveFactor(-viewPos.z) * pixelRatio;\nfloat lineWidthPixels = unpackedAttributes.lineWidthPixels * falloffFactor;\nfloat extensionLengthPixels = calculateExtensionLength(unpackedAttributes.extensionLengthPixels, lineLengthPixels) * falloffFactor;\nfloat lineAmplitudePixels = calculateLineAmplitude(unpackedAttributes) * pixelRatio;\nvSizeFalloffFactor = falloffFactor;\nfloat lineWidthAndAmplitudePixels = lineWidthPixels + lineAmplitudePixels + lineAmplitudePixels;\nfloat extendedLineLengthPixels = lineLengthPixels + extensionLengthPixels + extensionLengthPixels;\n#ifdef ANTIALIASING\nconst float aaPaddingPixels = 1.0;\nfloat halfAAPaddedLineWidthAndAmplitudePixels = lineWidthAndAmplitudePixels * 0.5 + aaPaddingPixels;\nfloat aaPaddedRoundedCapSizePixels = lineWidthPixels * 0.5 + aaPaddingPixels;\n#else\nfloat halfAAPaddedLineWidthAndAmplitudePixels = max(lineWidthAndAmplitudePixels, 1.0) * 0.5;\nfloat aaPaddedRoundedCapSizePixels = max(lineWidthPixels, 1.0) * 0.5;\n#endif\nvec2 halfAAPaddedLineWidthAndAmplitudeNDC = halfAAPaddedLineWidthAndAmplitudePixels * pixelToNDC;\nvec2 aaPaddedRoundedCapSizeNDC = aaPaddedRoundedCapSizePixels * pixelToNDC;\nvec2 extensionLengthNDC = extensionLengthPixels * pixelToNDC;\nvec2 ndcOffset = (\nscreenSpaceDirection * sideness.y * (aaPaddedRoundedCapSizeNDC + extensionLengthNDC)\n+ perpendicularScreenSpaceDirection * halfAAPaddedLineWidthAndAmplitudeNDC\n);\nprojPos.xy += ndcOffset * projPos.w;\nprojPos.z += (dzPerPixel * (aaPaddedRoundedCapSizePixels + extensionLengthPixels)) * sideness.y * projPos.w;\nprojPos = adjustProjectedPosition(projPos, worldNormal, 1.0 + max((lineWidthAndAmplitudePixels - 1.0) * 0.5, 0.0));\nfloat aaPaddedLineWithCapsLengthPixels = extendedLineLengthPixels + aaPaddedRoundedCapSizePixels + aaPaddedRoundedCapSizePixels;\nfloat pixelPositionAlongLine = aaPaddedLineWithCapsLengthPixels * sidenessNorm.y - aaPaddedRoundedCapSizePixels;\nvPosition = vec3(\nhalfAAPaddedLineWidthAndAmplitudePixels * sideness.x,\npixelPositionAlongLine,\npixelPositionAlongLine / extendedLineLengthPixels\n);\nvRadius = lineWidthPixels * 0.5;\nvLineLengthPixels = extendedLineLengthPixels;\ndiscardShortEdges(unpackedAttributes, lineLengthPixels);\ngl_Position = projPos;\n}\nvoid main() {\nComponentData component = readComponentData();\nUnpackedAttributes unpackedAttributes = unpackAttributes(component);\nvec3 worldPosV0, worldPosV1, viewPosV0, viewPosV1;\nworldAndViewFromModelPosition(position0, component.verticalOffset, worldPosV0, viewPosV0);\nworldAndViewFromModelPosition(position1, component.verticalOffset, worldPosV1, viewPosV1);\nvColor = component.color;\nif (vColor.a < opaqueCutoff) {\ngl_Position = vec4(10.0, 10.0, 10.0, 1.0);\nreturn;\n}\nif (discardNonSilhouetteEdges(viewPosV0, worldPosV0)) {\nreturn;\n}\ncalculateGeometricOutputs(viewPosV0, viewPosV1, worldPosV0, worldPosV1, worldNormal(), unpackedAttributes);\ncalculateStyleOutputs(unpackedAttributes);\n}`),w.fragment.code.add(a`\n    vec2 lineWithCapsDistance(float radius, vec2 position, float lineLength) {\n      float lineOffset = calculateLineOffset();\n      float positionX = position.x - lineOffset;\n\n      if (radius < 1.0) {\n        // Handle this specifically for subpixel sizes:\n        // 1. Compute correct coverage (note coverage is computed by\n        //    0.5 - dist, so we make sure that that will lead to correct\n        //    subpixel coverage\n        // 2. Ignore rounded caps\n        float coverageX = clamp(min(radius, positionX + 0.5) - max(-radius, positionX - 0.5), 0.0, 1.0);\n        float coverageY = clamp(min(lineLength, position.y + 0.5) - max(0.0, position.y - 0.5), 0.0, 1.0);\n\n        float coverage = min(coverageX, coverageY);\n\n        return vec2(0.5 - coverage, 0.0);\n      }\n      else {\n        // Between -radius -> 0 for start cap, 0 for line, 0 -> radius\n        float positionOnCap = position.y - clamp(position.y, 0.0, lineLength);\n\n        vec2 lineToPosition = vec2(positionX, positionOnCap);\n        return vec2(length(lineToPosition) - radius, positionOnCap / radius);\n      }\n    }\n\n    void main() {\n      ${i.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, vViewPos.z);\":\"\"}\n      float radius = vRadius * calculateLinePressure();\n\n      vec2 distance = lineWithCapsDistance(radius, vPosition.xy, vLineLengthPixels);\n      float coverage = clamp(0.5 - distance.x, 0.0, 1.0);\n\n      discardByCoverage(radius, coverage);\n      discardBySlice(vWorldPosition);\n\n      float alpha = vColor.a * coverage;\n\n      gl_FragColor = vec4(vColor.rgb, alpha);\n\n    }\n  `),w}const h=i(),A=Object.freeze(Object.defineProperty({__proto__:null,build:w},Symbol.toStringTag,{value:\"Module\"}));export{A as E,w as b};\n"],
  "mappings": "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",
  "names": ["o", "e", "n", "i", "r", "o", "c", "e", "n", "a", "r", "d", "n", "o", "r", "n", "u", "v", "o", "n", "e", "x", "x", "o", "i", "d", "s", "x", "n", "i", "o", "d", "x", "n", "d", "u", "i", "r", "x", "n", "u", "n", "i", "d", "o", "r", "x", "i", "w", "A", "o", "n", "u", "a", "e"]
}
