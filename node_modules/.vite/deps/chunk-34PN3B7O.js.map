{
  "version": 3,
  "sources": ["../../@arcgis/core/layers/support/ElevationTile.js", "../../@arcgis/core/layers/support/ElevationQuery.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as t,isNone as a}from\"../../core/maybe.js\";class i{constructor(a,i=null){if(this.tile=a,this.zmin=0,this.zmax=0,t(i)){const t=a.extent;this.samplerData={pixelData:i.values,width:i.width,height:i.height,safeWidth:.99999999*(i.width-1),noDataValue:i.noDataValue,dx:(i.width-1)/(t[2]-t[0]),dy:(i.width-1)/(t[3]-t[1]),x0:t[0],y1:t[3]},this.zmin=i.minValue,this.zmax=i.maxValue}}sample(t,i){if(a(this.samplerData))return;const{safeWidth:h,width:s,pixelData:l,noDataValue:n,dx:o,dy:r,y1:m,x0:d}=this.samplerData,u=e(r*(m-i),0,h),x=e(o*(t-d),0,h),f=Math.floor(u),c=Math.floor(x),p=f*s+c,D=p+s,w=l[p],y=l[D],V=l[p+1],z=l[D+1];if(w!==n&&y!==n&&V!==n&&z!==n){const t=x-c,a=w+(V-w)*t;return a+(y+(z-y)*t-a)*(u-f)}}}function e(t,a,i){return t<a?a:t>i?i:t}export{i as ElevationTile};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{result as e}from\"../../core/asyncUtils.js\";import t from\"../../core/Error.js\";import{isNone as i,isSome as o}from\"../../core/maybe.js\";import{whenOrAbort as s,throwIfAbortError as l,eachAlways as n}from\"../../core/promiseUtils.js\";import{getMetersPerUnitForSR as a}from\"../../core/unitUtils.js\";import r from\"../../geometry/Multipoint.js\";import c from\"../../geometry/Point.js\";import u from\"../../geometry/Polyline.js\";import{initializeProjection as h,project as p}from\"../../geometry/projection.js\";import{fromExtent as m,create as f,contains as d}from\"../../geometry/support/aaBoundingRect.js\";import{MultiTileElevationSampler as y}from\"./ElevationSampler.js\";import{ElevationTile as T}from\"./ElevationTile.js\";class v{async queryAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");const s=x.fromGeometry(i);let l=!1;o&&o.returnSampleInfo||(l=!0);const n={...R,...o,returnSampleInfo:!0},a=await this.query(e[e.length-1],s,n),r=await this._queryAllContinue(e,a,n);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||!(i instanceof x)&&\"point\"!==i.type&&\"multipoint\"!==i.type&&\"polyline\"!==i.type)throw new t(\"elevation-query:invalid-geometry\",\"Only point, polyline and multipoint geometries can be used to query elevation\");const s={...R,...o},l=new w(e,i.spatialReference,s),n=s.signal;return await e.load({signal:n}),await this._createGeometryDescriptor(l,i,n),await this._selectTiles(l,n),await this._populateElevationTiles(l,n),this._sampleGeometryWithElevation(l),this._createQueryResult(l,n)}async createSampler(e,i,o){if(!e)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require an elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o};return this._createSampler(e,i,s)}async createSamplerAll(e,i,o){if(!(e=o&&o.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new t(\"elevation-query:invalid-layer\",\"Elevation queries require at least one elevation layer to fetch tiles from\");if(!i||\"extent\"!==i.type)throw new t(\"elevation-query:invalid-extent\",\"Invalid or undefined extent\");const s={...R,...o,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],i,s);return this._createSamplerAllContinue(e,i,l,s)}async _createSampler(e,t,i,o){const s=i.signal;await e.load({signal:s});const l=t.spatialReference,n=e.tileInfo.spatialReference;l.equals(n)||(await h([{source:l,dest:n}],{signal:s}),t=p(t,n));const a=new _(e,t,i,o);return await this._selectTiles(a,s),await this._populateElevationTiles(a,s),new y(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,o){if(e.pop(),!e.length)return i;const s=i.samplers.map((e=>m(e.extent))),l=await this._createSampler(e[e.length-1],t,o,s);if(0===l.samplers.length)return i;const n=i.samplers.concat(l.samplers),a=new y(n,o.noDataValue);return this._createSamplerAllContinue(e,t,a,o)}async _queryAllContinue(e,t,i){const o=e.pop(),s=t.geometry.coordinates,l=[],n=[];for(let c=0;c<s.length;c++){const i=t.sampleInfo[c];i.demResolution>=0?i.source||(i.source=o):e.length&&(l.push(s[c]),n.push(c))}if(!e.length||0===l.length)return t;const a=t.geometry.clone(l),r=await this.query(e[e.length-1],a,i);return n.forEach(((e,i)=>{s[e].z=r.geometry.coordinates[i].z,t.sampleInfo[e].demResolution=r.sampleInfo[i].demResolution})),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i={geometry:(await e.geometry.project(e.outSpatialReference,t)).export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(i.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),i}async _createGeometryDescriptor(e,i,o){let s;const l=e.layer.tileInfo.spatialReference;if(i instanceof x?s=await i.project(l,o):(await h([{source:i.spatialReference,dest:l}],{signal:o}),s=p(i,l)),!s)throw new t(\"elevation-query:spatial-reference-mismatch\",`Cannot query elevation in '${i.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=x.fromGeometry(s)}async _selectTiles(e,i){const o=e.options.demResolution;if(\"geometry\"===e.type&&this._preselectOutsideLayerExtent(e),\"number\"==typeof o)this._selectTilesClosestResolution(e);else if(\"finest-contiguous\"===o)await this._selectTilesFinestContiguous(e,i);else{if(\"auto\"!==o)throw new t(\"elevation-query:invalid-dem-resolution\",`Invalid dem resolution value '${o}', expected a number, \"finest-contiguous\" or \"auto\"`);await this._selectTilesAuto(e,i)}}_preselectOutsideLayerExtent(e){if(i(e.layer.fullExtent))return;const t=new T(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const o=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const i=e.x,s=e.y;(i<o.xmin||i>o.xmax||s<o.ymin||s>o.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/a(e.spatialReference);let o=e.lods[0],s=0;for(let l=1;l<e.lods.length;l++){const t=e.lods[l];Math.abs(t.resolution-i)<Math.abs(o.resolution-i)&&(o=t,s=l)}return s}async _selectTilesFinestContiguous(e,t){const i=E(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,i,o){const n=e.layer;if(e.selectTilesAtLOD(i),i<0)return;const a=n.tilemapCache,r=e.getTilesToFetch();try{if(a)await s(Promise.all(r.map((e=>a.fetchAvailability(e.level,e.row,e.col,{signal:o})))),o);else if(await this._populateElevationTiles(e,o),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new t(\"elevation-query:has-unavailable-tiles\")}catch(c){l(c),await this._selectTilesFinestContiguousAt(e,i-1,o)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),l={},a=e.options.cache,r=e.options.noDataValue,c=i.map((async i=>{const s=`${e.layer.uid}:${i.id}:${r}`,n=o(a)?a.get(s):null,c=o(n)?n:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:r,signal:t});o(a)&&a.put(s,c),l[i.id]=new T(i,c)}));await s(n(c),t),e.populateElevationTiles(l)}async _selectTilesAuto(t,i){this._selectTilesAutoFinest(t),this._reduceTilesForMaximumRequests(t);const o=t.layer.tilemapCache;if(!o)return this._selectTilesAutoPrefetchUpsample(t,i);const n=t.getTilesToFetch(),a={},r=n.map((async t=>{const s={id:null,level:0,row:0,col:0,extent:f()},n=await e(o.fetchAvailabilityUpsample(t.level,t.row,t.col,s,{signal:i}));!1===n.ok?l(n.error):a[t.id]=s}));await s(Promise.all(r),i),t.remapTiles(a)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const o={},s=e=>{e.id in o?o[e.id]++:(o[e.id]=1,i++)},l=e=>{const t=o[e.id];1===t?(delete o[e.id],i--):o[e.id]=t-1};e.forEachTileToFetch(s,l);let n=!0;for(;n&&(n=!1,e.forEachTileToFetch((o=>{i<=e.options.maximumAutoTileRequests||(l(o),t.upsampleTile(o)&&(n=!0),s(o))}),l),n););}_selectTilesAutoFinest(e){const t=E(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let o=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?o=!0:t()})),o&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);o(e)?s=e:t.elevationTile=null}t.z=s}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=a(t.spatialReference);return e.geometry.coordinates.map((o=>{let s=-1;if(o.elevationTile&&o.elevationTile!==e.outsideExtentTile){s=t.lodAt(o.elevationTile.tile.level).resolution*i}return{demResolution:s}}))}}class x{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new x;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>this._cloneCoordinate(e))),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await h([{source:this.spatialReference,dest:e}],{signal:t});const i=new r({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),o=p(i,e);if(!o)return null;const s=this.coordinates.map(((e,t)=>{const i=this._cloneCoordinate(e),s=o.points[t];return i.x=s[0],i.y=s[1],i})),l=this.clone(s);return l.spatialReference=e,l}_cloneCoordinate(e){return{x:e.x,y:e.y,z:e.z,m:e.m,tile:null,elevationTile:null}}static fromGeometry(e){const t=new x;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof x)t.coordinates=e.coordinates.map((e=>t._cloneCoordinate(e))),t._exporter=(t,i)=>{const o=e.clone(t);return o.spatialReference=i,o};else switch(e.type){case\"point\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?[{x:i.x,y:i.y,z:i.z,m:i.m}]:o?[{x:i.x,y:i.y,z:i.z}]:s?[{x:i.x,y:i.y,m:i.m}]:[{x:i.x,y:i.y}],t._exporter=(t,i)=>e.hasM?new c(t[0].x,t[0].y,t[0].z,t[0].m,i):new c(t[0].x,t[0].y,t[0].z,i);break}case\"multipoint\":{const i=e,{hasZ:o,hasM:s}=i;t.coordinates=o&&s?i.points.map((e=>({x:e[0],y:e[1],z:e[2],m:e[3]}))):o?i.points.map((e=>({x:e[0],y:e[1],z:e[2]}))):s?i.points.map((e=>({x:e[0],y:e[1],m:e[2]}))):i.points.map((e=>({x:e[0],y:e[1]}))),t._exporter=(t,i)=>e.hasM?new r({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new r(t.map((e=>[e.x,e.y,e.z])),i);break}case\"polyline\":{const i=e,o=[],s=[],{hasZ:l,hasM:n}=e;let a=0;for(const e of i.paths)if(s.push([a,a+e.length]),a+=e.length,l&&n)for(const t of e)o.push({x:t[0],y:t[1],z:t[2],m:t[3]});else if(l)for(const t of e)o.push({x:t[0],y:t[1],z:t[2]});else if(n)for(const t of e)o.push({x:t[0],y:t[1],m:t[2]});else for(const t of e)o.push({x:t[0],y:t[1]});t.coordinates=o,t._exporter=(t,i)=>{const o=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),l=s.map((e=>o.slice(e[0],e[1])));return new u({paths:l,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class g{constructor(e,t){this.layer=e,this.options=t}}class w extends g{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type=\"geometry\"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>e.tile=null));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates)t.tile=e[t.tile.id]}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const o=i.tile;i.elevationTile||!i.tile||e[o.id]||(e[o.id]=o,t.push(o))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>t.tile=null))}}class _ extends g{constructor(e,t,i,o){super(e,i),this.type=\"extent\",this.elevationTiles=[],this.candidateTiles=[],this.fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=o}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),o=Math.min(i,e);o<0?this.candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(o)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const o=this.extent;if(i(o))return-1;for(let i=t.lods.length-1;i>=0;i--){const s=t.lods[i],l=s.resolution*t.size[0],n=s.resolution*t.size[1];if(Math.ceil(o.width/l)*Math.ceil(o.height/n)<=e)return i}return-1}allElevationTilesFetched(){return this.candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this.fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this.candidateTiles){const i=e[t.id];i&&(this.fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this.candidateTiles}forEachTileToFetch(e,t){const i=this.candidateTiles;this.candidateTiles=[],i.forEach((i=>{if(this.fetchedCandidates.has(i))return void(t&&t(i));let o=!1;e(i,(()=>o=!0)),o?t&&t(i):this.candidateTiles.push(i)})),this.candidateTiles=this._uniqueNonOverlappingTiles(this.candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},o=[];for(const l of e)i[l.id]?t&&t(l):(i[l.id]=l,o.push(l));const s=o.sort(((e,t)=>e.level-t.level));return s.filter(((e,i)=>{for(let o=0;o<i;o++)if(d(s[o].extent,e.extent))return t&&t(e),!1;return!0}))}_selectCandidateTilesCoveringExtentAt(e){this.candidateTiles.length=0;const t=this.extent;if(i(t))return;const o=this.layer.tileInfo,s=o.lods[e],l=o.tileAt(s.level,t.xmin,t.ymin),n=s.resolution*o.size[0],a=s.resolution*o.size[1],r=Math.ceil((t.xmax-l.extent[0])/n),c=Math.ceil((t.ymax-l.extent[1])/a);for(let i=0;i<c;i++)for(let e=0;e<r;e++){const t={id:null,level:l.level,row:l.row-i,col:l.col+e};o.updateTileInfo(t),this._tileIsMasked(t)||this.candidateTiles.push(t)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>d(t,e.extent)))}}function E(e,t){let i=e.lods.length-1;if(t>0){const o=e.lods.findIndex((e=>e.resolution<t));0===o?i=0:o>0&&(i=o-1)}return i}const R={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:\"auto\",minDemResolution:0};export{v as ElevationQuery,x as GeometryDescriptor,E as getFinestLodIndex};\n"],
  "mappings": "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",
  "names": ["a", "i", "t", "s", "r", "m", "u", "x", "c", "p", "w", "y", "z", "e", "i", "s", "R", "a", "r", "w", "t", "c", "E", "n", "o", "l", "m"]
}
