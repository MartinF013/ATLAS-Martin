import {
  b
} from "./chunk-YZNDHJDJ.js";
import {
  l as l2
} from "./chunk-FVPTCNCX.js";
import {
  l
} from "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  s
} from "./chunk-CVWDM4C7.js";

// node_modules/@arcgis/core/views/interactive/snapping/snappingUtils.js
function E(t, E2) {
  const n3 = t.x - E2.x, r3 = t.y - E2.y;
  return n3 * n3 + r3 * r3;
}
function n2(t, E2) {
  const n3 = t.length === E2.length && t[0] === E2[0] && t[1] === E2[1];
  switch (t.length) {
    case 2:
      return n3;
    case 3:
      return n3 && t[2] === E2[2];
    case 4:
      return n3 && t[3] === E2[3];
  }
  return false;
}
function r(E2, n3) {
  n3.sort((n4, r3) => b(n4.targetPoint, E2) - b(r3.targetPoint, E2));
}
var e2;
!function(t) {
  t[t.TARGET = 0] = "TARGET", t[t.REFERENCE = 1] = "REFERENCE", t[t.REFERENCE_EXTENSION = 2] = "REFERENCE_EXTENSION";
}(e2 || (e2 = {}));

// node_modules/@arcgis/core/views/interactive/snapping/Settings.js
var r2 = class extends l {
  constructor() {
    super(...arguments), this.enabled = true;
  }
};
e([d({ type: Boolean })], r2.prototype, "enabled", void 0), r2 = e([n("esri.views.interactive.snapping.Settings.DefaultSnappingAlgorithm")], r2);
var l3 = class extends l {
  constructor(e3) {
    super(e3), this.lineSnapper = new r2(), this.parallelLineSnapper = new r2(), this.rightAngleSnapper = new r2(), this.rightAngleTriangleSnapper = new r2(), this.shortLineThreshold = 15, this.distance = 5, this.pointThreshold = 1e-6, this.intersectionParallelLineThreshold = 1e-6, this.parallelLineThreshold = 1e-6, this.touchSensitivityMultiplier = 1.5, this.pointOnLineThreshold = 1e-6, this.orange = new l2([255, 127, 0]), this.lineHintWidthReference = 3, this.lineHintWidthTarget = 3, this.lineHintFadedExtensions = 0.3, this.parallelLineHintWidth = 2, this.parallelLineHintLength = 24, this.parallelLineHintOffset = 1.5, this.rightAngleHintSize = 24, this.rightAngleHintOutlineSize = 1.5;
  }
};
e([d({ type: r2, constructOnly: true, nonNullable: true, json: { write: true } })], l3.prototype, "lineSnapper", void 0), e([d({ type: r2, constructOnly: true, nonNullable: true, json: { write: true } })], l3.prototype, "parallelLineSnapper", void 0), e([d({ type: r2, constructOnly: true, nonNullable: true, json: { write: true } })], l3.prototype, "rightAngleSnapper", void 0), e([d({ type: r2, constructOnly: true, nonNullable: true, json: { write: true } })], l3.prototype, "rightAngleTriangleSnapper", void 0), e([d({ type: Number, nonNullable: true, range: { min: -1, max: 50, step: 1 }, json: { write: true } })], l3.prototype, "shortLineThreshold", void 0), e([d({ type: Number, nonNullable: true, range: { min: -1, max: 50, step: 1 }, json: { write: true } })], l3.prototype, "distance", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 1e-5 }, json: { write: true } })], l3.prototype, "pointThreshold", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 1e-5 }, json: { write: true } })], l3.prototype, "intersectionParallelLineThreshold", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 1e-5 }, json: { write: true } })], l3.prototype, "parallelLineThreshold", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 10 }, json: { write: true } })], l3.prototype, "touchSensitivityMultiplier", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 1e-5 }, json: { write: true } })], l3.prototype, "pointOnLineThreshold", void 0), e([d({ type: l2, nonNullable: true })], l3.prototype, "orange", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 10 }, json: { write: true } })], l3.prototype, "lineHintWidthReference", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 10 }, json: { write: true } })], l3.prototype, "lineHintWidthTarget", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], l3.prototype, "lineHintFadedExtensions", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 10 }, json: { write: true } })], l3.prototype, "parallelLineHintWidth", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 50 }, json: { write: true } })], l3.prototype, "parallelLineHintLength", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 5 }, json: { write: true } })], l3.prototype, "parallelLineHintOffset", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 46 }, json: { write: true } })], l3.prototype, "rightAngleHintSize", void 0), e([d({ type: Number, nonNullable: true, range: { min: 0, max: 6 }, json: { write: true } })], l3.prototype, "rightAngleHintOutlineSize", void 0), l3 = e([n("esri.views.interactive.snapping.Settings.Defaults")], l3);
var p = new l3();

// node_modules/@arcgis/core/views/interactive/snapping/hints/SnappingHint.js
var o = class {
  constructor(o2) {
    this.elevationInfo = o2;
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/hints/LineSnappingHint.js
s.getLogger("esri.views.interactive.snapping.hints.LineSnappingHint");
var s2 = class extends o {
  constructor(t, i, e3, s3, n3 = true, r3 = true) {
    super(s3), this.type = t, this.lineStart = i, this.lineEnd = e3, this.fadeLeft = n3, this.fadeRight = r3;
  }
  equals(t) {
    return t instanceof s2 && (this.type === t.type && n2(this.lineStart, t.lineStart) && n2(this.lineEnd, t.lineEnd) && this.fadeLeft === t.fadeLeft && this.fadeRight === t.fadeRight);
  }
};

export {
  p,
  E,
  n2 as n,
  r,
  e2 as e,
  o,
  s2 as s
};
//# sourceMappingURL=chunk-3HMF3PNP.js.map
