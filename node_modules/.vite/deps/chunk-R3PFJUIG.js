import {
  e as e4
} from "./chunk-YSWURJZW.js";
import {
  e as e2
} from "./chunk-O7YSDCZE.js";
import {
  a
} from "./chunk-767LZ6IM.js";
import {
  n as n2
} from "./chunk-DNPZNIDB.js";
import {
  e as e5
} from "./chunk-WW7VYUQW.js";
import {
  r
} from "./chunk-FCDEMPPS.js";
import {
  o
} from "./chunk-TEJEYVH4.js";
import {
  t
} from "./chunk-HEZ2ATGC.js";
import {
  e as e3
} from "./chunk-AALA53RH.js";
import {
  u
} from "./chunk-IJHFAZOW.js";
import {
  d
} from "./chunk-YAQGRU5B.js";
import {
  e
} from "./chunk-LGILR4HN.js";
import {
  i2 as i
} from "./chunk-I5UNY2WQ.js";
import {
  n
} from "./chunk-NAB3NF54.js";
import {
  O as O2
} from "./chunk-MDCKEJ7B.js";
import {
  O
} from "./chunk-VMF4NMEB.js";

// node_modules/@arcgis/core/chunks/ColorMaterial.glsl.js
function f(f2) {
  const v2 = new i(), w = f2.output === o.Depth, b = f2.hasMultipassTerrain && (f2.output === o.Color || f2.output === o.Alpha);
  d(v2, f2), v2.include(r, { hasModelTransformation: false, linearDepth: w }), v2.include(e2, f2), v2.attributes.add(O.POSITION, "vec3"), v2.varyings.add("vpos", "vec3"), b && v2.varyings.add("depth", "float");
  const { vertex: C, fragment: j } = v2;
  return w && (v2.include(e4, f2), C.uniforms.add(new e("nearFar", (e6, r2) => r2.camera.nearFar)), v2.varyings.add("linearDepth", "float")), C.code.add(n`
    void main(void) {
      vpos = position;
      forwardNormalizedVertexColor();
      ${b ? "depth = (view * vec4(vpos, 1.0)).z;" : ""}
      gl_Position = ${w ? n`transformPositionWithDepth(proj, view, vpos, nearFar, linearDepth);` : n`transformPosition(proj, view, vpos);`}
    }
  `), v2.include(u, f2), b && v2.include(n2, f2), j.include(e5), j.uniforms.add(new e3("eColor", (e6) => e6.color)), f2.output === o.Highlight && v2.include(a), j.code.add(n`
  void main() {
    discardBySlice(vpos);
    ${b ? "terrainDepthTest(gl_FragCoord, depth);" : ""}
    vec4 fColor = ${f2.hasVertexColors ? "vColor * eColor;" : "eColor;"}

    if (fColor.a < ${n.float(t)}) {
      discard;
    }

    ${f2.output === o.Alpha ? n`gl_FragColor = vec4(fColor.a);` : ""}

    ${f2.output === o.Color ? n`gl_FragColor = highlightSlice(fColor, vpos); ${f2.transparencyPassType === O2.Color ? "gl_FragColor = premultiplyAlpha(gl_FragColor);" : ""}` : ""}
    ${f2.output === o.Highlight ? n`outputHighlight();` : ""};
    ${f2.output === o.Depth ? n`outputDepth(linearDepth);` : ""};
  }
  `), v2;
}
var v = Object.freeze(Object.defineProperty({ __proto__: null, build: f }, Symbol.toStringTag, { value: "Module" }));

export {
  f,
  v
};
//# sourceMappingURL=chunk-R3PFJUIG.js.map
