import {
  s
} from "./chunk-FUQI3AAI.js";
import {
  o as o2
} from "./chunk-7ZPDA3EC.js";
import {
  A,
  J,
  K,
  N,
  R2 as R,
  T,
  Y
} from "./chunk-RN2KRYDN.js";
import {
  m
} from "./chunk-OOZMA7DN.js";
import {
  o
} from "./chunk-BPZGJQOB.js";
import {
  r
} from "./chunk-G5JBUC5N.js";
import {
  c
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/core/unitFormatUtils.js
function g(t, n, i) {
  return t.units[n][i];
}
function l(t, n, i, r2 = 2, o3 = "abbr") {
  return `${m(n, { minimumFractionDigits: r2, maximumFractionDigits: r2 })} ${g(t, i, o3)}`;
}
function p(t, n, i, r2 = 2, o3 = "abbr") {
  return `${m(n, { minimumFractionDigits: r2, maximumFractionDigits: r2, signDisplay: "exceptZero" })} ${g(t, i, o3)}`;
}
function D(t, n, i, r2 = 2, o3 = "abbr") {
  const c2 = R(n, i);
  return l(t, N(n, i, c2), c2, r2, o3);
}
function F(t, n, i, r2 = 2, o3 = "abbr") {
  const c2 = R(n, i);
  return p(t, N(n, i, c2), c2, r2, o3);
}
function x(t, n, i, r2 = 2, o3 = "abbr") {
  const e = J(n, i);
  return l(t, N(n, i, e), e, r2, o3);
}
function h(t, n, i, r2 = 2, o3 = "abbr") {
  const e = J(n, i);
  return p(t, N(n, i, e), e, r2, o3);
}
function y(t, n, i, r2 = 2, o3 = "abbr") {
  const e = K(n, i);
  return l(t, N(n, i, e), e, r2, o3);
}
function d(t, n, i, r2 = 2, o3 = "abbr") {
  const e = K(n, i);
  return p(t, N(n, i, e), e, r2, o3);
}
function j(t, n, i, r2 = 2, o3 = "abbr") {
  const e = A(n, i);
  return l(t, N(n, i, e), e, r2, o3);
}
function B(t, n, i, r2 = 2, o3 = "abbr") {
  const e = A(n, i);
  return p(t, N(n, i, e), e, r2, o3);
}
function $(t, n, i, r2 = 2, o3 = "abbr") {
  const e = T(n, i);
  return l(t, N(n, i, e), e, r2, o3);
}
function M(t, n, i, r2 = 2, o3 = "abbr") {
  const e = Y(n, i);
  return l(t, N(n, i, e), e, r2, o3);
}
function w(t, i, o3, e, c2) {
  const s2 = s.normalize(z(N(t, i, "degrees"), o3, e), 0, true);
  return c2 = c(c2, 2), m(s2, { style: "unit", unitDisplay: "narrow", unit: "degree", maximumFractionDigits: c2, minimumFractionDigits: c2 });
}
function z(t, n, i) {
  if (n === i)
    return t;
  switch (i) {
    case "arithmetic":
      return E(t);
    case "geographic":
      return T2(t);
  }
}
function E(t) {
  return 90 - t;
}
function T2(t) {
  return -t - 90;
}
function I(t, n, i, o3, e) {
  i !== o3 && (t = -t);
  const c2 = N(t, n, "degrees") % 360;
  return e = c(e, 2), m(c2, { style: "unit", unitDisplay: "narrow", unit: "degree", maximumFractionDigits: e, minimumFractionDigits: e, signDisplay: "exceptZero" });
}
var K2 = ["B", "kB", "MB", "GB", "TB"];
function L(n, r2) {
  let e = 0 === r2 ? 0 : Math.floor(Math.log(r2) / Math.log(o2.KILOBYTES));
  e = o(e, 0, K2.length - 1);
  const u = m(r2 / o2.KILOBYTES ** e, { maximumFractionDigits: 2 });
  return r(n.units.bytes[K2[e]], { fileSize: u });
}

export {
  g,
  l,
  p,
  D,
  F,
  x,
  h,
  y,
  d,
  j,
  B,
  $,
  M,
  w,
  I,
  L
};
//# sourceMappingURL=chunk-GT2OBOXC.js.map
