import {
  u
} from "./chunk-G4IZ2HTT.js";
import {
  f,
  l as l2
} from "./chunk-T7BEWVV3.js";
import {
  n as n2
} from "./chunk-OIPX3EDD.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  l,
  o,
  r
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/widgets/support/AnchorElementViewModel.js
var l3;
var d2 = Symbol("anchorHandles");
var m = class extends n2.EventedAccessor {
  constructor(o2) {
    super(o2), this[l3] = new u(), this.location = null, this.screenLocationEnabled = false, this.view = null, this[d2].add([f(() => o(this.screenLocationEnabled ? this.view : null, (o3) => [o3.size, "3d" === o3.type ? o3.camera : o3.viewpoint]), () => this.notifyChange("screenLocation")), l2(() => this.screenLocation, (o3, e2) => {
      r(o3) && r(e2) && this.emit("view-change");
    })]);
  }
  destroy() {
    this.view = null, this[d2] = l(this[d2]);
  }
  get screenLocation() {
    const { location: o2, view: e2, screenLocationEnabled: t } = this;
    return t && r(o2) && r(e2) && e2.ready ? e2.toScreen(o2) : null;
  }
};
l3 = d2, e([d()], m.prototype, "location", void 0), e([d()], m.prototype, "screenLocation", null), e([d()], m.prototype, "screenLocationEnabled", void 0), e([d()], m.prototype, "view", void 0), m = e([n("esri.widgets.support.AnchorElementViewModel")], m);
var h = m;

export {
  h
};
//# sourceMappingURL=chunk-TWQ374WD.js.map
