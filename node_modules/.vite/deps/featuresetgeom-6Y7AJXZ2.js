import {
  a3 as a,
  c
} from "./chunk-CEJQPREK.js";
import {
  A,
  O,
  g,
  h,
  p as p2,
  w,
  x
} from "./chunk-GXI3XMFU.js";
import {
  s
} from "./chunk-7DMYZG6H.js";
import "./chunk-X64NQ2GK.js";
import {
  G,
  J,
  X,
  ye
} from "./chunk-LBBA3SFR.js";
import "./chunk-2KZBVPWA.js";
import "./chunk-M2WA2LMI.js";
import "./chunk-UQDLDM54.js";
import "./chunk-YL26MZEL.js";
import "./chunk-WBX2MY5R.js";
import "./chunk-3DZ4BNVJ.js";
import "./chunk-FU5UMT3R.js";
import "./chunk-WODSLTZT.js";
import "./chunk-JMZLJZMP.js";
import "./chunk-GRILTTJT.js";
import "./chunk-KVF4M6PZ.js";
import "./chunk-2HDG7SIE.js";
import "./chunk-5Z5455ZY.js";
import "./chunk-D7DLEBS2.js";
import "./chunk-OOZMA7DN.js";
import "./chunk-Y7FSCP47.js";
import "./chunk-65A2N4LL.js";
import "./chunk-GVELBHGI.js";
import "./chunk-5N3FSR63.js";
import "./chunk-C4LU7RDX.js";
import "./chunk-EPCCNF3D.js";
import "./chunk-4PRVTUEZ.js";
import "./chunk-DMJWTK32.js";
import "./chunk-CHNDTVQJ.js";
import "./chunk-VLCG72SW.js";
import "./chunk-Q72YFZUL.js";
import {
  p
} from "./chunk-YPZEGNLG.js";
import "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import "./chunk-XRL56EGK.js";
import "./chunk-ZIHDQYKE.js";
import "./chunk-GSRNZQFV.js";
import "./chunk-ICD7AJSY.js";
import "./chunk-2QOWZFCU.js";
import "./chunk-IVBXK6OP.js";
import "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import "./chunk-U3PSONS6.js";
import "./chunk-HFTNOKM2.js";
import "./chunk-23NWA6WL.js";
import "./chunk-CVWDM4C7.js";
import "./chunk-G5JBUC5N.js";
import "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/arcade/functions/featuresetgeom.js
function w2(e) {
  return e instanceof p;
}
function y(r, i, h2, y2) {
  return y2(r, i, async function(r2, i2, y3) {
    if (y3.length < 2)
      throw new Error("Missing Parameters");
    if (null === (y3 = ye(y3))[0] && null === y3[1])
      return false;
    if (J(y3[0])) {
      if (y3[1] instanceof p)
        return new c({ parentfeatureset: y3[0], relation: h2, relationGeom: y3[1] });
      if (null === y3[1])
        return new a({ parentfeatureset: y3[0] });
      throw new Error("Spatial Relation cannot accept this parameter type");
    }
    if (w2(y3[0])) {
      if (w2(y3[1])) {
        switch (h2) {
          case "esriSpatialRelEnvelopeIntersects":
            return g(s(y3[0]), s(y3[1]));
          case "esriSpatialRelIntersects":
            return g(y3[0], y3[1]);
          case "esriSpatialRelContains":
            return p2(y3[0], y3[1]);
          case "esriSpatialRelOverlaps":
            return O(y3[0], y3[1]);
          case "esriSpatialRelWithin":
            return x(y3[0], y3[1]);
          case "esriSpatialRelTouches":
            return A(y3[0], y3[1]);
          case "esriSpatialRelCrosses":
            return w(y3[0], y3[1]);
        }
        throw new Error("Unrecognised Relationship");
      }
      if (J(y3[1]))
        return new c({ parentfeatureset: y3[1], relation: h2, relationGeom: y3[0] });
      if (null === y3[1])
        return false;
      throw new Error("Spatial Relation cannot accept this parameter type");
    }
    if (null !== y3[0])
      throw new Error("Spatial Relation cannot accept this parameter type");
    return J(y3[1]) ? new a({ parentfeatureset: y3[1] }) : !(y3[1] instanceof p || null === y3[1]) && void 0;
  });
}
function d(e) {
  "async" === e.mode && (e.functions.intersects = function(n, t) {
    return y(n, t, "esriSpatialRelIntersects", e.standardFunctionAsync);
  }, e.functions.envelopeintersects = function(n, t) {
    return y(n, t, "esriSpatialRelEnvelopeIntersects", e.standardFunctionAsync);
  }, e.signatures.push({ name: "envelopeintersects", min: "2", max: "2" }), e.functions.contains = function(n, t) {
    return y(n, t, "esriSpatialRelContains", e.standardFunctionAsync);
  }, e.functions.overlaps = function(n, t) {
    return y(n, t, "esriSpatialRelOverlaps", e.standardFunctionAsync);
  }, e.functions.within = function(n, t) {
    return y(n, t, "esriSpatialRelWithin", e.standardFunctionAsync);
  }, e.functions.touches = function(n, t) {
    return y(n, t, "esriSpatialRelTouches", e.standardFunctionAsync);
  }, e.functions.crosses = function(n, t) {
    return y(n, t, "esriSpatialRelCrosses", e.standardFunctionAsync);
  }, e.functions.relate = function(a2, u) {
    return e.standardFunctionAsync(a2, u, function(e2, a3, u2) {
      if (u2 = ye(u2), G(u2, 3, 3), w2(u2[0]) && w2(u2[1]))
        return h(u2[0], u2[1], X(u2[2]));
      if (u2[0] instanceof p && null === u2[1])
        return false;
      if (u2[1] instanceof p && null === u2[0])
        return false;
      if (J(u2[0]) && null === u2[1])
        return new a({ parentfeatureset: u2[0] });
      if (J(u2[1]) && null === u2[0])
        return new a({ parentfeatureset: u2[1] });
      if (J(u2[0]) && u2[1] instanceof p)
        return u2[0].relate(u2[1], X(u2[2]));
      if (J(u2[1]) && u2[0] instanceof p)
        return u2[1].relate(u2[0], X(u2[2]));
      if (null === u2[0] && null === u2[1])
        return false;
      throw new Error("Illegal Argument");
    });
  });
}
export {
  d as registerFunctions
};
//# sourceMappingURL=featuresetgeom-6Y7AJXZ2.js.map
