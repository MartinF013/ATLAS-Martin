import {
  a as a2
} from "./chunk-JERZLQLG.js";
import {
  h,
  x
} from "./chunk-JWKDNFWF.js";
import {
  I
} from "./chunk-6FQZDXGD.js";
import {
  a
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/views/2d/engine/webgl/TileContainer.js
var i = (e, r) => e.key.level - r.key.level != 0 ? e.key.level - r.key.level : e.key.row - r.key.row != 0 ? e.key.row - r.key.row : e.key.col - r.key.col;
var o = class extends a2 {
  constructor(e) {
    super(), this._tileInfoView = e;
  }
  get requiresDedicatedFBO() {
    return false;
  }
  renderChildren(e) {
    this.sortChildren(i), this.setStencilReference(e), super.renderChildren(e);
  }
  createRenderParams(e) {
    const { state: r } = e, s = super.createRenderParams(e);
    return s.requiredLevel = this._tileInfoView.getClosestInfoForScale(r.scale).level, s.displayLevel = this._tileInfoView.tileInfo.scaleToZoom(r.scale), s;
  }
  prepareRenderPasses(s) {
    const i2 = super.prepareRenderPasses(s);
    return i2.push(s.registerRenderPass({ name: "stencil", brushes: [h], drawPhase: I.DEBUG | I.MAP | I.HIGHLIGHT, target: () => this.getStencilTarget() })), a("esri-tiles-debug") && i2.push(s.registerRenderPass({ name: "tileInfo", brushes: [x], drawPhase: I.DEBUG, target: () => this.children })), i2;
  }
  getStencilTarget() {
    return this.children;
  }
  updateTransforms(e) {
    for (const r of this.children) {
      const s = this._tileInfoView.getTileResolution(r.key);
      r.setTransform(e, s);
    }
  }
  setStencilReference(e) {
    let r = 1;
    for (const s of this.children)
      s.stencilRef = r++;
  }
};

export {
  o
};
//# sourceMappingURL=chunk-JX3YCNPL.js.map
