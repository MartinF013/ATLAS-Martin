{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/NativeLine.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{ShaderOutput as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutputOptions.js\";import{SliceDraw as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{VertexColor as r}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{OutputHighlight as t}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{LineStipple as s}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/LineStipple.glsl.js\";import{symbolAlphaCutoff as l}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{addProjViewLocalOrigin as n}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float4PassUniform as a}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as d}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as p}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as c}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{VertexAttribute as g}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function m(m){const u=new c;u.include(i),u.include(r,m),u.include(s,m),n(u,m);const{vertex:v,fragment:h}=u;return m.stippleEnabled&&(u.attributes.add(g.UV0,\"vec2\"),u.attributes.add(g.AUXPOS1,\"vec3\"),v.uniforms.add(new a(\"viewport\",((e,o)=>o.camera.fullViewport)))),u.attributes.add(g.POSITION,\"vec3\"),u.varyings.add(\"vpos\",\"vec3\"),v.code.add(p`void main(void) {\nvpos = position;\nforwardNormalizedVertexColor();\ngl_Position = transformPosition(proj, view, vpos);`),m.stippleEnabled&&(v.code.add(p`vec4 vpos2 = transformPosition(proj, view, auxpos1);\nvec2 ndcToPixel = viewport.zw * 0.5;\nfloat lineSegmentPixelSize = length((vpos2.xy / vpos2.w - gl_Position.xy / gl_Position.w) * ndcToPixel);`),m.draped?v.uniforms.add(new d(\"worldToScreenRatio\",((e,o)=>1/o.screenToPCSRatio))):v.code.add(p`vec3 segmentCenter = (position + auxpos1) * 0.5;\nfloat worldToScreenRatio = computeWorldToScreenRatio(segmentCenter);`),v.code.add(p`float discreteWorldToScreenRatio = discretizeWorldToScreenRatio(worldToScreenRatio);`),m.draped?v.code.add(p`float startPseudoScreen = uv0.y * discreteWorldToScreenRatio - mix(0.0, lineSegmentPixelSize, uv0.x);\nfloat segmentLengthPseudoScreen = lineSegmentPixelSize;`):v.code.add(p`float segmentLengthRender = length(position - auxpos1);\nfloat startPseudoScreen = mix(uv0.y, uv0.y - segmentLengthRender, uv0.x) * discreteWorldToScreenRatio;\nfloat segmentLengthPseudoScreen = segmentLengthRender * discreteWorldToScreenRatio;`),v.code.add(p`vec2 stippleDistanceLimits = computeStippleDistanceLimits(startPseudoScreen, segmentLengthPseudoScreen, lineSegmentPixelSize, stipplePatternPixelSize);\nvStippleDistance = mix(stippleDistanceLimits.x, stippleDistanceLimits.y, uv0.x);\nvStippleDistance *= gl_Position.w;`)),v.code.add(p`}`),m.output===e.Highlight&&u.include(t),u.include(o,m),h.uniforms.add(new d(\"alphaCoverage\",((e,o)=>Math.min(1,e.width*o.camera.pixelRatio)))),m.hasVertexColors||h.uniforms.add(new a(\"constantColor\",(e=>e.color))),h.code.add(p`\n  void main() {\n    discardBySlice(vpos);\n\n    vec4 color = ${m.hasVertexColors?\"vColor\":\"constantColor\"};\n\n    float stippleAlpha = getStippleAlpha();\n    discardByStippleAlpha(stippleAlpha, stippleAlphaColorDiscard);\n\n    vec4 finalColor = blendStipple(vec4(color.rgb, color.a * alphaCoverage), stippleAlpha);\n\n    if (finalColor.a < ${p.float(l)}) {\n      discard;\n    }\n\n    ${m.output===e.Color?p`gl_FragColor = highlightSlice(finalColor, vpos);`:\"\"}\n    ${m.output===e.Highlight?p`outputHighlight();`:\"\"}\n  }\n  `),u}const u=Object.freeze(Object.defineProperty({__proto__:null,build:m},Symbol.toStringTag,{value:\"Module\"}));export{u as N,m as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIiuC,SAAS,EAAEA,IAAE;AAAC,QAAMC,KAAE,IAAI;AAAE,EAAAA,GAAE,QAAQ,CAAC,GAAEA,GAAE,QAAQ,GAAED,EAAC,GAAEC,GAAE,QAAQ,GAAED,EAAC,GAAE,EAAEC,IAAED,EAAC;AAAE,QAAK,EAAC,QAAO,GAAE,UAAS,EAAC,IAAEC;AAAE,SAAOD,GAAE,mBAAiBC,GAAE,WAAW,IAAI,EAAE,KAAI,MAAM,GAAEA,GAAE,WAAW,IAAI,EAAE,SAAQ,MAAM,GAAE,EAAE,SAAS,IAAI,IAAIC,GAAE,YAAY,CAACA,IAAEC,OAAIA,GAAE,OAAO,YAAa,CAAC,IAAGF,GAAE,WAAW,IAAI,EAAE,UAAS,MAAM,GAAEA,GAAE,SAAS,IAAI,QAAO,MAAM,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA,mDAGpgD,GAAED,GAAE,mBAAiB,EAAE,KAAK,IAAI;AAAA;AAAA,yGAEsB,GAAEA,GAAE,SAAO,EAAE,SAAS,IAAI,IAAIG,GAAE,sBAAsB,CAACD,IAAEC,OAAI,IAAEA,GAAE,gBAAiB,CAAC,IAAE,EAAE,KAAK,IAAI;AAAA,qEACpI,GAAE,EAAE,KAAK,IAAI,uFAAuF,GAAEH,GAAE,SAAO,EAAE,KAAK,IAAI;AAAA,wDACvI,IAAE,EAAE,KAAK,IAAI;AAAA;AAAA,oFAEe,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA,mCAE9D,IAAG,EAAE,KAAK,IAAI,IAAI,GAAEA,GAAE,WAAS,EAAE,aAAWC,GAAE,QAAQ,CAAC,GAAEA,GAAE,QAAQ,GAAED,EAAC,GAAE,EAAE,SAAS,IAAI,IAAIG,GAAE,iBAAiB,CAACD,IAAEC,OAAI,KAAK,IAAI,GAAED,GAAE,QAAMC,GAAE,OAAO,UAAU,CAAE,CAAC,GAAEH,GAAE,mBAAiB,EAAE,SAAS,IAAI,IAAIE,GAAE,iBAAiB,CAAAA,OAAGA,GAAE,KAAM,CAAC,GAAE,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA,mBAIlQF,GAAE,kBAAgB,WAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAOrB,EAAE,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA,MAI5BA,GAAE,WAAS,EAAE,QAAM,sDAAoD;AAAA,MACvEA,GAAE,WAAS,EAAE,YAAU,wBAAsB;AAAA;AAAA,GAEhD,GAAEC;AAAC;AAAC,IAAMA,KAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAM,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["m", "u", "e", "o"]
}
