import {
  C,
  D,
  W,
  X,
  z
} from "./chunk-3RU6IUIF.js";
import "./chunk-EZXI7GSK.js";
import "./chunk-WFUZXUS4.js";
import {
  c,
  u
} from "./chunk-NCMBCUFA.js";
import "./chunk-EZ4QR7V3.js";
import "./chunk-OZT6RDST.js";
import "./chunk-PZWU5EHT.js";
import {
  p as p4
} from "./chunk-SWCA522B.js";
import {
  p as p3,
  p3 as p5,
  r as r3
} from "./chunk-YPIBZ3CH.js";
import "./chunk-XLCZFN6R.js";
import "./chunk-OMNBM2E4.js";
import {
  l as l2
} from "./chunk-WKHS6QIX.js";
import {
  a as a4
} from "./chunk-6O7ZZEV7.js";
import {
  u as u3
} from "./chunk-M2WA2LMI.js";
import "./chunk-UQDLDM54.js";
import "./chunk-YL26MZEL.js";
import "./chunk-J6DXGG2A.js";
import "./chunk-YG6VFATO.js";
import "./chunk-WBX2MY5R.js";
import "./chunk-3DZ4BNVJ.js";
import {
  x as x2
} from "./chunk-4XBERLPX.js";
import {
  j as j2
} from "./chunk-OXRBYKVX.js";
import "./chunk-6O2ARNGD.js";
import "./chunk-YLU2PLJS.js";
import {
  o as o2
} from "./chunk-MZX3HN4G.js";
import {
  d as d3
} from "./chunk-T47JAOQZ.js";
import "./chunk-CQ47VEUP.js";
import "./chunk-FU5UMT3R.js";
import {
  b
} from "./chunk-GSFXXEAM.js";
import "./chunk-QZTJM4HG.js";
import {
  n as n2
} from "./chunk-RIWDMEW4.js";
import {
  n as n3,
  p as p2
} from "./chunk-C7S44TP4.js";
import "./chunk-KUWW4YJ7.js";
import "./chunk-P6I5J7W6.js";
import "./chunk-ORGMKDYR.js";
import "./chunk-F2DXUUYL.js";
import "./chunk-EGR3VVZG.js";
import "./chunk-F5A4XAOJ.js";
import "./chunk-4TDLPK3D.js";
import "./chunk-U7B2WKBH.js";
import "./chunk-T7SYNS2R.js";
import {
  y
} from "./chunk-WODSLTZT.js";
import "./chunk-JMZLJZMP.js";
import {
  v
} from "./chunk-OG6CQEZJ.js";
import {
  c as c3
} from "./chunk-X5Z3DJQ4.js";
import {
  O
} from "./chunk-BUWXVMJU.js";
import {
  c as c2,
  d as d2,
  f,
  l,
  m as m2,
  p,
  u as u2
} from "./chunk-JT3LXQ47.js";
import "./chunk-P3QN5DXX.js";
import "./chunk-QKRZMDWG.js";
import "./chunk-TBT57L4K.js";
import {
  a as a3
} from "./chunk-D3XXPCBB.js";
import {
  t
} from "./chunk-OWBMOIIV.js";
import {
  b as b2
} from "./chunk-SIH2IMSA.js";
import "./chunk-2AGPHSDM.js";
import "./chunk-JGSSQ5FR.js";
import "./chunk-5OEHY3VV.js";
import "./chunk-LJLQIETB.js";
import "./chunk-WKRVG5MO.js";
import "./chunk-GRILTTJT.js";
import {
  a as a2
} from "./chunk-JJRJ6TV3.js";
import "./chunk-K2FQEYBG.js";
import "./chunk-G4IZ2HTT.js";
import "./chunk-T7BEWVV3.js";
import "./chunk-ASC3X65B.js";
import "./chunk-KVF4M6PZ.js";
import "./chunk-IZCP5QP4.js";
import "./chunk-QFTOW2ST.js";
import "./chunk-I4USSDLI.js";
import "./chunk-VI3TTBSC.js";
import "./chunk-B42HXLDM.js";
import "./chunk-TVXPO7T5.js";
import "./chunk-2EZYA7VW.js";
import "./chunk-OEQ3EDRD.js";
import "./chunk-Z6EP2GTZ.js";
import "./chunk-P6G64ARX.js";
import "./chunk-GD6ALUPQ.js";
import "./chunk-CLGCKZUR.js";
import "./chunk-RN2KRYDN.js";
import "./chunk-BLINZ65M.js";
import "./chunk-TADZYUVR.js";
import "./chunk-C5ULLWJ7.js";
import "./chunk-HFDYAQZS.js";
import "./chunk-HJHWUUQQ.js";
import "./chunk-TMBOFNWA.js";
import "./chunk-ZNEGSJWK.js";
import {
  B
} from "./chunk-EI4MOLML.js";
import "./chunk-4SBWV5M2.js";
import "./chunk-CF56UYH2.js";
import "./chunk-5TRUGQDM.js";
import "./chunk-PZG7CR4Y.js";
import "./chunk-2HDG7SIE.js";
import "./chunk-56RHM4A6.js";
import "./chunk-ACJD5XFJ.js";
import "./chunk-OO2JXX7L.js";
import "./chunk-6DWU2ZQF.js";
import "./chunk-Q3R7XFM5.js";
import "./chunk-JCPK2OXG.js";
import {
  m
} from "./chunk-HVM5D6S5.js";
import "./chunk-JYHTO6QC.js";
import "./chunk-FTLBKDGL.js";
import {
  c as c4,
  m as m3
} from "./chunk-5Z5455ZY.js";
import "./chunk-D7DLEBS2.js";
import "./chunk-H7JF6Q7A.js";
import "./chunk-TT2HIXWQ.js";
import "./chunk-OIPX3EDD.js";
import "./chunk-NWRK6QLX.js";
import "./chunk-HPH3FMVB.js";
import "./chunk-OOZMA7DN.js";
import "./chunk-Y7FSCP47.js";
import "./chunk-65A2N4LL.js";
import "./chunk-GVELBHGI.js";
import {
  j
} from "./chunk-5N3FSR63.js";
import "./chunk-C4LU7RDX.js";
import {
  i
} from "./chunk-EPCCNF3D.js";
import "./chunk-4PRVTUEZ.js";
import "./chunk-DMJWTK32.js";
import "./chunk-FVPTCNCX.js";
import "./chunk-BPZGJQOB.js";
import "./chunk-ZOKX6UGH.js";
import "./chunk-PKZEO23A.js";
import "./chunk-43S7PUMG.js";
import "./chunk-AIRC226G.js";
import "./chunk-BNPOKP6A.js";
import "./chunk-CHNDTVQJ.js";
import "./chunk-VLCG72SW.js";
import {
  M
} from "./chunk-Q72YFZUL.js";
import "./chunk-YPZEGNLG.js";
import {
  k2 as k
} from "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import "./chunk-XRL56EGK.js";
import {
  r as r2
} from "./chunk-ZIHDQYKE.js";
import "./chunk-GSRNZQFV.js";
import "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import {
  E,
  x
} from "./chunk-U3PSONS6.js";
import {
  s2 as s
} from "./chunk-HFTNOKM2.js";
import {
  S
} from "./chunk-23NWA6WL.js";
import "./chunk-CVWDM4C7.js";
import {
  o
} from "./chunk-G5JBUC5N.js";
import {
  a,
  e as e2,
  r
} from "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/layers/graphics/sources/WFSSource.js
var j3 = class extends a2(m) {
  constructor() {
    super(...arguments), this.capabilities = c(false, false), this.type = "wfs", this.refresh = x(async (e3) => {
      await this.load();
      const { extent: t2 } = await this._connection.invoke("refresh", e3);
      return this.sourceJSON.extent = t2, { dataChanged: true, updates: { extent: this.sourceJSON.extent } };
    });
  }
  load(e3) {
    const t2 = (r(e3) && e3.signal) ?? null;
    return this.addResolvingPromise(this._startWorker({ signal: t2 })), Promise.resolve(this);
  }
  destroy() {
    var _a;
    (_a = this._connection) == null ? void 0 : _a.close(), this._connection = null;
  }
  async openPorts() {
    return await this.load(), this._connection.openPorts();
  }
  async queryFeatures(e3, t2 = {}) {
    await this.load(t2);
    const r4 = await this._connection.invoke("queryFeatures", e3 ? e3.toJSON() : null, t2);
    return x2.fromJSON(r4);
  }
  async queryFeaturesJSON(e3, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryFeatures", e3 ? e3.toJSON() : null, t2);
  }
  async queryFeatureCount(e3, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryFeatureCount", e3 ? e3.toJSON() : null, t2);
  }
  async queryObjectIds(e3, t2 = {}) {
    return await this.load(t2), this._connection.invoke("queryObjectIds", e3 ? e3.toJSON() : null, t2);
  }
  async queryExtent(e3, t2 = {}) {
    await this.load(t2);
    const r4 = await this._connection.invoke("queryExtent", e3 ? e3.toJSON() : null, t2);
    return { count: r4.count, extent: M.fromJSON(r4.extent) };
  }
  async querySnapping(e3, t2 = {}) {
    return await this.load(t2), this._connection.invoke("querySnapping", e3, t2);
  }
  async _createLoadOptions(e3) {
    const { url: r4, customParameters: o3, name: s2, namespaceUri: a5, spatialReference: n4, fields: c5, geometryType: p6, swapXY: l3 } = this.layer;
    if (!r4)
      throw new s("wfs-layer:missing-url", "WFSLayer must be created with a url");
    this.wfsCapabilities || (this.wfsCapabilities = await D(r4, { customParameters: o3, ...e3 }));
    const u4 = ["fields", "geometryType", "name", "namespaceUri", "spatialReference", "swapXY"].some((e4) => null == this.layer[e4]), y2 = u4 ? await X(this.wfsCapabilities, s2, a5, { spatialReference: n4, customParameters: o3, signal: e3 == null ? void 0 : e3.signal }) : { ...z(c5), geometryType: p6, name: s2, namespaceUri: a5, spatialReference: n4, swapXY: l3 }, d4 = e2(W(this.wfsCapabilities.readFeatureTypes(), y2.name, y2.namespaceUri)), S2 = i.toJSON(y2.geometryType);
    return { customParameters: o3, featureType: d4, fields: y2.fields.map((e4) => e4.toJSON()), geometryField: y2.geometryField, geometryType: S2, getFeatureUrl: this.wfsCapabilities.operations.GetFeature.url, getFeatureOutputFormat: this.wfsCapabilities.operations.GetFeature.outputFormat, objectIdField: y2.objectIdField, spatialReference: y2.spatialReference.toJSON(), swapXY: y2.swapXY };
  }
  async _startWorker(e3) {
    const [t2, r4] = await E([this._createLoadOptions(e3), u3("WFSSourceWorker", { ...e3, strategy: a("feature-layers-workers") ? "dedicated" : "local" })]), s2 = t2.error || r4.error || null, a5 = r4.value || null;
    if (s2)
      throw a5 && a5.close(), s2;
    const i2 = t2.value;
    this._connection = r4.value;
    const { extent: n4 } = await this._connection.invoke("load", i2, e3);
    this.sourceJSON = { extent: n4, fields: i2.fields, geometryType: i2.geometryType, objectIdField: i2.objectIdField, geometryField: i2.geometryField, drawingInfo: u(i2.geometryType), name: i2.featureType.title, wfsInfo: { name: i2.featureType.name, featureUrl: i2.getFeatureUrl, maxFeatures: 3e3, swapXY: i2.swapXY, supportedSpatialReferences: i2.featureType.supportedSpatialReferences, version: "2.0.0", wfsNamespace: i2.featureType.namespaceUri } };
  }
};
e([d()], j3.prototype, "capabilities", void 0), e([d({ constructOnly: true })], j3.prototype, "layer", void 0), e([d()], j3.prototype, "sourceJSON", void 0), e([d()], j3.prototype, "type", void 0), e([d()], j3.prototype, "wfsCapabilities", void 0), j3 = e([n("esri.layers.graphics.sources.WFSSource")], j3);

// node_modules/@arcgis/core/layers/WFSLayer.js
var J;
var M2 = l2();
var _ = J = class extends p4(o2(p3(a3(a4(n2(t(c3(v(O(b2)))))))))) {
  constructor(e3) {
    super(e3), this.capabilities = null, this.copyright = null, this.customParameters = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.featureReduction = null, this.featureUrl = void 0, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.objectIdField = null, this.operationalLayerType = "WFS", this.maxFeatures = 3e3, this.mode = 0, this.name = null, this.namespaceUri = null, this.outFields = null, this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new j3({ layer: this }), this.spatialReference = k.WGS84, this.spatialReferences = [4326], this.swapXY = void 0, this.title = "WFS", this.type = "wfs", this.url = null, this.version = void 0;
  }
  static fromWFSLayerInfo(e3) {
    const { customParameters: r4, fields: t2, geometryField: i2, geometryType: o3, name: s2, namespaceUri: n4, objectIdField: p6, spatialReference: a5, swapXY: l3, url: d4, wfsCapabilities: m4 } = e3;
    return new J({ customParameters: r4, fields: t2, geometryField: i2, geometryType: o3, name: s2, namespaceUri: n4, objectIdField: p6, spatialReference: a5, swapXY: l3, url: d4, wfsCapabilities: m4 });
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e3) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["WFS"] }, e3).then(() => this.source.load(e3)).then(() => {
      this.read(this.source.sourceJSON, { origin: "service", url: this.parsedUrl }), this.revert(["objectIdField", "fields", "timeInfo", "spatialReference", "name", "namespaceUri"], "service"), c4(this.renderer, this.fieldsIndex), m3(this.timeInfo, this.fieldsIndex);
    })), Promise.resolve(this);
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("capabilities"), (this._get("createQueryVersion") || 0) + 1;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  writeFields(e3, r4, t2) {
    const i2 = e3.filter((e4) => e4.name !== C);
    this.geometryField && i2.unshift(new y({ name: this.geometryField, alias: this.geometryField, type: "geometry" })), o(t2, i2.map((e4) => e4.toJSON()), r4);
  }
  get parsedUrl() {
    return this.url ? j(this.url) : null;
  }
  set renderer(e3) {
    c4(e3, this.fieldsIndex), this._set("renderer", e3);
  }
  createPopupTemplate(e3) {
    return d3(this, e3);
  }
  createQuery() {
    const e3 = new b();
    e3.returnGeometry = true, e3.outFields = ["*"], e3.where = this.definitionExpression || "1=1";
    const { timeOffset: r4, timeExtent: t2 } = this;
    return e3.timeExtent = null != r4 && null != t2 ? t2.offset(-r4.value, r4.unit) : t2 || null, e3;
  }
  getFieldDomain(e3, r4) {
    var _a;
    return (_a = this.getField(e3)) == null ? void 0 : _a.domain;
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  queryFeatures(e3, r4) {
    return this.load().then(() => this.source.queryFeatures(b.from(e3) || this.createQuery(), r4)).then((e4) => {
      if (e4 == null ? void 0 : e4.features)
        for (const r5 of e4.features)
          r5.layer = r5.sourceLayer = this;
      return e4;
    });
  }
  queryObjectIds(e3, r4) {
    return this.load().then(() => this.source.queryObjectIds(b.from(e3) || this.createQuery(), r4));
  }
  queryFeatureCount(e3, r4) {
    return this.load().then(() => this.source.queryFeatureCount(b.from(e3) || this.createQuery(), r4));
  }
  queryExtent(e3, r4) {
    return this.load().then(() => this.source.queryExtent(b.from(e3) || this.createQuery(), r4));
  }
  async hasDataChanged() {
    try {
      const { dataChanged: e3, updates: r4 } = await this.source.refresh(this.customParameters);
      return r(r4) && this.read(r4, { origin: "service", url: this.parsedUrl, ignoreDefaults: true }), e3;
    } catch {
    }
    return false;
  }
};
e([d({ readOnly: true, aliasOf: "source.capabilities" })], _.prototype, "capabilities", void 0), e([d({ type: String })], _.prototype, "copyright", void 0), e([d({ readOnly: true })], _.prototype, "createQueryVersion", null), e([d({ json: { name: "wfsInfo.customParameters", write: { ignoreOrigin: true } } })], _.prototype, "customParameters", void 0), e([d({ readOnly: true })], _.prototype, "defaultPopupTemplate", null), e([d({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], _.prototype, "definitionExpression", void 0), e([d({ type: String })], _.prototype, "displayField", void 0), e([d(d2)], _.prototype, "elevationInfo", void 0), e([d(p5)], _.prototype, "featureReduction", void 0), e([d({ type: String, readOnly: true, json: { name: "wfsInfo.featureUrl", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "featureUrl", void 0), e([d({ type: [y], json: { name: "layerDefinition.fields", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "fields" } } } })], _.prototype, "fields", void 0), e([r2("fields")], _.prototype, "writeFields", null), e([d(M2.fieldsIndex)], _.prototype, "fieldsIndex", void 0), e([d({ type: M, json: { name: "extent" } })], _.prototype, "fullExtent", void 0), e([d()], _.prototype, "geometryField", void 0), e([d({ type: String, json: { read: { source: "layerDefinition.geometryType", reader: i.read }, write: { target: "layerDefinition.geometryType", writer: i.write, ignoreOrigin: true }, origins: { service: { read: i.read } } } })], _.prototype, "geometryType", void 0), e([d({ type: String })], _.prototype, "id", void 0), e([d(m2)], _.prototype, "labelsVisible", void 0), e([d({ type: [j2], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: r3 }, write: true } })], _.prototype, "labelingInfo", void 0), e([d(c2)], _.prototype, "legendEnabled", void 0), e([d({ type: ["show", "hide"] })], _.prototype, "listMode", void 0), e([d({ type: String })], _.prototype, "objectIdField", void 0), e([d({ type: ["WFS"] })], _.prototype, "operationalLayerType", void 0), e([d({ type: S, json: { name: "wfsInfo.maxFeatures", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "maxFeatures", void 0), e([d({ type: [0], readOnly: true, json: { origins: { "web-map": { write: { ignoreOrigin: true, isRequired: true } } } } })], _.prototype, "mode", void 0), e([d({ type: String, json: { name: "wfsInfo.name", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "name", void 0), e([d({ type: String, json: { name: "wfsInfo.wfsNamespace", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "namespaceUri", void 0), e([d(u2)], _.prototype, "opacity", void 0), e([d(M2.outFields)], _.prototype, "outFields", void 0), e([d({ readOnly: true })], _.prototype, "parsedUrl", null), e([d(p)], _.prototype, "popupEnabled", void 0), e([d({ type: B, json: { name: "popupInfo", write: true } })], _.prototype, "popupTemplate", void 0), e([d({ types: p2, json: { origins: { service: { name: "drawingInfo.renderer" }, "web-scene": { types: n3, name: "layerDefinition.drawingInfo.renderer", write: true } }, name: "layerDefinition.drawingInfo.renderer", write: { ignoreOrigin: true } } })], _.prototype, "renderer", null), e([d(l)], _.prototype, "screenSizePerspectiveEnabled", void 0), e([d({ readOnly: true })], _.prototype, "source", void 0), e([d({ type: k, json: { name: "layerDefinition.spatialReference", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "extent.spatialReference" } } } })], _.prototype, "spatialReference", void 0), e([d({ readOnly: true, type: [S], json: { name: "wfsInfo.supportedSpatialReferences", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "spatialReferences", void 0), e([d({ type: Boolean, value: false, json: { name: "wfsInfo.swapXY", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "swapXY", void 0), e([d({ json: { write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "name" } } } })], _.prototype, "title", void 0), e([d({ json: { read: false }, readOnly: true })], _.prototype, "type", void 0), e([d(f)], _.prototype, "url", void 0), e([d({ type: String, readOnly: true, json: { name: "wfsInfo.version", write: { ignoreOrigin: true, isRequired: true } } })], _.prototype, "version", void 0), e([d({ aliasOf: "source.wfsCapabilities" })], _.prototype, "wfsCapabilities", void 0), _ = J = e([n("esri.layers.WFSLayer")], _);
var k2 = _;
export {
  k2 as default
};
//# sourceMappingURL=WFSLayer-GIF3K5GN.js.map
