{
  "version": 3,
  "sources": ["../../@arcgis/core/views/2d/layers/BaseDynamicLayerView2D.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as t}from\"../../../chunks/tslib.es6.js\";import e from\"../../../core/Logger.js\";import{isAbortError as r}from\"../../../core/promiseUtils.js\";import{property as s}from\"../../../core/accessorSupport/decorators/property.js\";import\"../../../core/arrayUtils.js\";import\"../../../core/has.js\";import\"../../../core/accessorSupport/ensureType.js\";import{subclass as i}from\"../../../core/accessorSupport/decorators/subclass.js\";import{BitmapContainer as a}from\"../engine/BitmapContainer.js\";import{LayerView2DMixin as o}from\"./LayerView2D.js\";import p from\"./support/ExportStrategy.js\";import n from\"../../layers/LayerView.js\";import m from\"../../layers/RefreshableLayerView.js\";const h=e.getLogger(\"esri.views.2d.layers.BaseDynamicLayerView2D\");let c=class extends(m(o(n))){update(t){this.strategy.update(t).catch((t=>{r(t)||h.error(t)})),this.notifyChange(\"updating\")}attach(){this._bitmapContainer=new a,this.container.addChild(this._bitmapContainer),this.strategy=new p({container:this._bitmapContainer,fetchSource:this.fetchBitmapData.bind(this),requestUpdate:this.requestUpdate.bind(this)})}detach(){this.strategy.destroy(),this.strategy=null,this.container.removeChild(this._bitmapContainer),this._bitmapContainer.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}fetchBitmapData(t,e,r){return this.layer.fetchImage(t,e,r)}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}};t([s()],c.prototype,\"strategy\",void 0),t([s()],c.prototype,\"updating\",void 0),c=t([i(\"esri.views.2d.layers.BaseDynamicLayerView2D\")],c);const d=c;export{d as default};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIqqB,IAAM,IAAE,EAAE,UAAU,6CAA6C;AAAE,IAAI,IAAE,cAAc,EAAE,EAAE,CAAC,CAAC,EAAE;AAAA,EAAC,OAAOA,IAAE;AAAC,SAAK,SAAS,OAAOA,EAAC,EAAE,MAAO,CAAAA,OAAG;AAAC,QAAEA,EAAC,KAAG,EAAE,MAAMA,EAAC;AAAA,IAAC,CAAE,GAAE,KAAK,aAAa,UAAU;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,SAAK,mBAAiB,IAAI,KAAE,KAAK,UAAU,SAAS,KAAK,gBAAgB,GAAE,KAAK,WAAS,IAAI,EAAE,EAAC,WAAU,KAAK,kBAAiB,aAAY,KAAK,gBAAgB,KAAK,IAAI,GAAE,eAAc,KAAK,cAAc,KAAK,IAAI,EAAC,CAAC;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,SAAK,SAAS,QAAQ,GAAE,KAAK,WAAS,MAAK,KAAK,UAAU,YAAY,KAAK,gBAAgB,GAAE,KAAK,iBAAiB,kBAAkB;AAAA,EAAC;AAAA,EAAC,YAAW;AAAA,EAAC;AAAA,EAAC,aAAY;AAAA,EAAC;AAAA,EAAC,UAAS;AAAC,SAAK,cAAc;AAAA,EAAC;AAAA,EAAC,gBAAgBA,IAAEC,IAAE,GAAE;AAAC,WAAO,KAAK,MAAM,WAAWD,IAAEC,IAAE,CAAC;AAAA,EAAC;AAAA,EAAC,MAAM,YAAW;AAAC,SAAK,cAAc;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,WAAO,KAAK,SAAS,YAAU,KAAK;AAAA,EAAe;AAAC;AAAE,EAAE,CAAC,EAAE,CAAC,GAAE,EAAE,WAAU,YAAW,MAAM,GAAE,EAAE,CAAC,EAAE,CAAC,GAAE,EAAE,WAAU,YAAW,MAAM,GAAE,IAAE,EAAE,CAAC,EAAE,6CAA6C,CAAC,GAAE,CAAC;AAAE,IAAMC,KAAE;",
  "names": ["t", "e", "d"]
}
