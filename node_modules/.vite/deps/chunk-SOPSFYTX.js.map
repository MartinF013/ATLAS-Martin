{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/collections/Component/Material/shader/VertexDiscardByOpacity.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/collections/Component/Material/ComponentTechniqueConfiguration.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ComputeMaterialColor.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ComputeShadingNormal.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ReadBaseColorTexture.glsl.js", "../../@arcgis/core/chunks/ComponentShader.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{glsl as e}from\"../../../../core/shaderModules/interfaces.js\";var a;function r(r,c){const i=r.vertex;switch(i.code.add(e`#define VERTEX_DISCARD_CUTOFF (1.0 - 1.0 / 255.0)`),c.vertexDiscardMode){case a.None:i.code.add(e`#define vertexDiscardByOpacity(_opacity_) {}`);break;case a.Opaque:i.code.add(e`#define vertexDiscardByOpacity(_opacity_) { if (_opacity_ >  VERTEX_DISCARD_CUTOFF) {  gl_Position = vec4(1e38, 1e38, 1e38, 1.0); return; } }`);break;case a.Transparent:i.code.add(e`#define vertexDiscardByOpacity(_opacity_) { if (_opacity_ <= VERTEX_DISCARD_CUTOFF) {  gl_Position = vec4(1e38, 1e38, 1e38, 1.0); return; } }`)}}!function(e){e[e.None=0]=\"None\",e[e.Transparent=1]=\"Transparent\",e[e.Opaque=2]=\"Opaque\",e[e.COUNT=3]=\"COUNT\"}(a||(a={}));export{r as VertexDiscardByOpacity,a as VertexDiscardMode};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as o}from\"../../../../../../chunks/tslib.es6.js\";import{ComponentDataType as e}from\"./shader/ComponentData.glsl.js\";import{VertexDiscardMode as t}from\"./shader/VertexDiscardByOpacity.glsl.js\";import{ShaderOutput as r}from\"../../../core/shaderLibrary/ShaderOutputOptions.js\";import{NormalAttributeType as s}from\"../../../core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{TextureCoordinateAttributeType as i}from\"../../../core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{NormalsDoubleSidedMode as a}from\"../../../core/shaderLibrary/shading/Normals.glsl.js\";import{PBRMode as p}from\"../../../core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{EllipsoidMode as n}from\"../../../core/shaderLibrary/util/EllipsoidMode.js\";import{BindType as d}from\"../../../core/shaderTechnique/BindType.js\";import{parameter as l,ShaderTechniqueConfiguration as h}from\"../../../core/shaderTechnique/ShaderTechniqueConfiguration.js\";import{CullFaceOptions as c,AlphaDiscardMode as u,TransparencyPassType as y}from\"../../../lib/basicInterfaces.js\";var v,T;!function(o){o[o.None=0]=\"None\",o[o.Transparent=1]=\"Transparent\",o[o.Opaque=2]=\"Opaque\",o[o.COUNT=3]=\"COUNT\"}(v||(v={})),function(o){o[o.None=0]=\"None\",o[o.NoOverlay=1]=\"NoOverlay\",o[o.ColorOverlay=2]=\"ColorOverlay\",o[o.ColorOverlayWithWater=3]=\"ColorOverlayWithWater\",o[o.COUNT=4]=\"COUNT\"}(T||(T={}));class m extends h{constructor(){super(...arguments),this.output=r.Color,this.textureCoordinateType=i.None,this.componentData=e.Uniform,this.cullFace=c.Back,this.vertexDiscardMode=t.None,this.doubleSidedMode=a.WindingOrder,this.alphaDiscardMode=u.Opaque,this.integratedMeshMode=T.None,this.transparencyPassType=y.NONE,this.ellipsoidMode=n.Earth,this.pbrMode=p.Disabled,this.normalType=s.Attribute,this.spherical=!1,this.doublePrecisionRequiresObfuscation=!1,this.hasVertexColors=!1,this.hasNormals=!1,this.hasSlicePlane=!1,this.hasBaseColorTexture=!1,this.receiveAmbientOcclusion=!0,this.receiveShadows=!0,this.blendingEnabled=!0,this.hasScreenSpaceReflections=!1,this.hasPolygonOffset=!1,this.hasMetalnessAndRoughnessTexture=!1,this.hasEmissionTexture=!1,this.hasOcclusionTexture=!1,this.hasNormalTexture=!1,this.hasOccludees=!1,this.hasMultipassTerrain=!1,this.cullAboveGround=!1,this.isGround=!1,this.hasCloudsReflections=!0,this.snowCover=!1}}o([l({count:r.COUNT})],m.prototype,\"output\",void 0),o([l({count:i.COUNT})],m.prototype,\"textureCoordinateType\",void 0),o([l({count:e.COUNT})],m.prototype,\"componentData\",void 0),o([l({count:c.COUNT})],m.prototype,\"cullFace\",void 0),o([l({count:t.COUNT})],m.prototype,\"vertexDiscardMode\",void 0),o([l({count:a.COUNT})],m.prototype,\"doubleSidedMode\",void 0),o([l({count:u.COUNT})],m.prototype,\"alphaDiscardMode\",void 0),o([l({count:T.COUNT})],m.prototype,\"integratedMeshMode\",void 0),o([l({count:y.COUNT})],m.prototype,\"transparencyPassType\",void 0),o([l({count:n.COUNT})],m.prototype,\"ellipsoidMode\",void 0),o([l({count:p.COUNT})],m.prototype,\"pbrMode\",void 0),o([l({count:s.COUNT})],m.prototype,\"normalType\",void 0),o([l()],m.prototype,\"spherical\",void 0),o([l()],m.prototype,\"doublePrecisionRequiresObfuscation\",void 0),o([l()],m.prototype,\"hasVertexColors\",void 0),o([l()],m.prototype,\"hasNormals\",void 0),o([l()],m.prototype,\"hasSlicePlane\",void 0),o([l()],m.prototype,\"hasBaseColorTexture\",void 0),o([l()],m.prototype,\"receiveAmbientOcclusion\",void 0),o([l()],m.prototype,\"receiveShadows\",void 0),o([l()],m.prototype,\"blendingEnabled\",void 0),o([l()],m.prototype,\"hasScreenSpaceReflections\",void 0),o([l()],m.prototype,\"hasPolygonOffset\",void 0),o([l()],m.prototype,\"hasMetalnessAndRoughnessTexture\",void 0),o([l()],m.prototype,\"hasEmissionTexture\",void 0),o([l()],m.prototype,\"hasOcclusionTexture\",void 0),o([l()],m.prototype,\"hasNormalTexture\",void 0),o([l()],m.prototype,\"hasOccludees\",void 0),o([l()],m.prototype,\"hasMultipassTerrain\",void 0),o([l()],m.prototype,\"cullAboveGround\",void 0),o([l()],m.prototype,\"isGround\",void 0),o([l()],m.prototype,\"hasCloudsReflections\",void 0),o([l()],m.prototype,\"snowCover\",void 0),o([l({constValue:d.Draw})],m.prototype,\"pbrTextureBindType\",void 0),o([l({constValue:!0})],m.prototype,\"hasSliceHighlight\",void 0),o([l({constValue:!1})],m.prototype,\"hasSliceInVertexProgram\",void 0),o([l({constValue:!1})],m.prototype,\"useCustomDTRExponentForWater\",void 0),o([l({constValue:!1})],m.prototype,\"hasVertexTangents\",void 0),o([l({constValue:!0})],m.prototype,\"supportsTextureAtlas\",void 0),o([l({constValue:!1})],m.prototype,\"highStepCount\",void 0),o([l({constValue:!1})],m.prototype,\"instancedDoublePrecision\",void 0),o([l({constValue:!0})],m.prototype,\"useFillLights\",void 0);export{m as ComponentTechniqueConfiguration,T as IntegratedMeshMode,v as PassDiscardMode};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{VertexColor as o}from\"../attributes/VertexColor.glsl.js\";import{MixExternalColor as r}from\"../util/MixExternalColor.glsl.js\";import{Float4DrawUniform as e}from\"../../shaderModules/Float4DrawUniform.js\";import{FloatDrawUniform as a}from\"../../shaderModules/FloatDrawUniform.js\";import{glsl as t}from\"../../shaderModules/interfaces.js\";function l(l,s){l.include(o,s),l.fragment.include(r);const i=l.fragment;i.uniforms.add(new e(\"baseColor\",(o=>o.baseColor))),i.uniforms.add(new a(\"objectOpacity\",(o=>o.objectOpacity))),s.hasVertexColors?i.code.add(t`vec3 _baseColor() {\nreturn baseColor.rgb * vColor.rgb;\n}\nfloat _baseOpacity() {\nreturn baseColor.a * vColor.a;\n}`):i.code.add(t`vec3 _baseColor() {\nreturn baseColor.rgb;\n}\nfloat _baseOpacity() {\nreturn baseColor.a;\n}`),i.code.add(t`vec4 computeMaterialColor(vec4 textureColor, vec4 externalColor, int externalColorMixMode) {\nvec3 baseColor = _baseColor();\nfloat baseOpacity = _baseOpacity();\nvec3 color = mixExternalColor(\nbaseColor,\ntextureColor.rgb,\nexternalColor.rgb,\nexternalColorMixMode\n);\nfloat opacity = objectOpacity * mixExternalOpacity(\nbaseOpacity,\ntextureColor.a,\nexternalColor.a,\nexternalColorMixMode\n);\nreturn vec4(color, opacity);\n}`)}export{l as ComputeMaterialColor};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{neverReached as e}from\"../../../../../../core/compilerUtils.js\";import{NormalAttributeType as r}from\"../attributes/NormalAttribute.glsl.js\";import{VertexNormal as o}from\"../attributes/VertexNormal.glsl.js\";import{VertexPosition as a}from\"../attributes/VertexPosition.glsl.js\";import{NormalsDoubleSidedMode as d}from\"./Normals.glsl.js\";import{glsl as i}from\"../../shaderModules/interfaces.js\";function t(t,s){const l=t.fragment;switch(s.doubleSidedMode){case d.None:l.code.add(i`vec3 _adjustDoublesided(vec3 normal) {\nreturn normal;\n}`);break;case d.View:t.include(a,s),l.code.add(i`vec3 _adjustDoublesided(vec3 normal) {\nreturn dot(normal, vPositionWorldCameraRelative) > 0.0 ? -normal : normal;\n}`);break;case d.WindingOrder:l.code.add(i`vec3 _adjustDoublesided(vec3 normal) {\nreturn gl_FrontFacing ? normal : -normal;\n}`);break;default:e(s.doubleSidedMode);case d.COUNT:}switch(s.normalType){case r.Attribute:case r.CompressedAttribute:t.include(o,s),l.code.add(i`vec3 shadingNormalWorld() {\nreturn _adjustDoublesided(normalize(vNormalWorld));\n}\nvec3 shadingNormal_view() {\nvec3 normal = normalize(vNormalView);\nreturn gl_FrontFacing ? normal : -normal;\n}`);break;case r.ScreenDerivative:t.extensions.add(\"GL_OES_standard_derivatives\"),t.include(a,s),l.code.add(i`vec3 shadingNormalWorld() {\nreturn normalize(cross(\ndFdx(vPositionWorldCameraRelative),\ndFdy(vPositionWorldCameraRelative)\n));\n}\nvec3 shadingNormal_view() {\nreturn normalize(cross(dFdx(vPosition_view),dFdy(vPosition_view)));\n}`);break;case r.Ground:s.spherical?(t.include(a,s),l.code.add(i`vec3 shadingNormalWorld() {\nreturn normalize(positionWorld());\n}`)):l.code.add(i`vec3 shadingNormalWorld() {\nreturn vec3(0.0, 0.0, 1.0);\n}`),t.extensions.add(\"GL_OES_standard_derivatives\"),l.code.add(i`vec3 shadingNormal_view() {\nreturn normalize(cross(dFdx(vPosition_view),dFdy(vPosition_view))).xyz;\n}`);break;default:e(s.normalType);case r.COUNT:}}export{t as ComputeShadingNormal};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{TextureCoordinateAttributeType as e}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{VertexTextureCoordinates as r}from\"../attributes/VertexTextureCoordinates.glsl.js\";import{TextureAtlasLookup as t}from\"../util/TextureAtlasLookup.glsl.js\";import{glsl as o}from\"../../shaderModules/interfaces.js\";import{createTexture2DDrawSizeUniforms as u}from\"../../shaderModules/Texture2DDrawUniform.js\";function s(s,a){const d=s.fragment;if(a.hasBaseColorTexture){s.include(r,a);const l=a.textureCoordinateType===e.Atlas;d.uniforms.add(u(\"baseColorTexture\",(e=>e.texture),l)),l?(s.include(t),d.code.add(o`vec4 readBaseColorTexture() {\nreturn textureAtlasLookup(baseColorTexture, baseColorTextureSize, vuv0, vuvRegion);\n}`)):d.code.add(o`vec4 readBaseColorTexture() {\nreturn texture2D(baseColorTexture, vuv0);\n}`)}else d.code.add(o`vec4 readBaseColorTexture() { return vec4(1.0); }`)}export{s as ReadBaseColorTexture};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{earth as e,mars as o,moon as r}from\"../geometry/support/Ellipsoid.js\";import{OverlayIndex as a,RenderTargetType as i}from\"../views/3d/terrain/interfaces.js\";import{IntegratedMeshMode as l}from\"../views/3d/webgl-engine/collections/Component/Material/ComponentTechniqueConfiguration.js\";import{ComponentData as t,ComponentDataType as d}from\"../views/3d/webgl-engine/collections/Component/Material/shader/ComponentData.glsl.js\";import{VertexDiscardByOpacity as n}from\"../views/3d/webgl-engine/collections/Component/Material/shader/VertexDiscardByOpacity.glsl.js\";import{ForwardLinearDepth as s}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{ShaderOutput as c}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutputOptions.js\";import{SlicePass as m}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{NormalAttributeType as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{TextureCoordinateAttribute as v}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as u}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VertexNormal as h}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";import{VertexPosition as p}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexPosition.glsl.js\";import{OutputDepth as C}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputDepth.glsl.js\";import{OutputHighlight as w}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{ReadLinearDepth as b}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";import{ComputeMaterialColor as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeMaterialColor.glsl.js\";import{ComputeNormalTexture as x}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";import{ComputeShadingNormal as y}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeShadingNormal.glsl.js\";import{EvaluateSceneLighting as M}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{multipassTerrainTest as L}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{PBRMode as N,PhysicallyBasedRenderingParameters as O}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadBaseColorTexture as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadBaseColorTexture.glsl.js\";import{ReadShadowMapPass as S}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{OverlayIM as T,getColorTexture as P}from\"../views/3d/webgl-engine/core/shaderLibrary/terrain/Overlay.glsl.js\";import{symbolAlphaCutoff as W}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaDraw as A}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{EllipsoidMode as R}from\"../views/3d/webgl-engine/core/shaderLibrary/util/EllipsoidMode.js\";import{Float3PassUniform as D}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{FloatPassUniform as B}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as _}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4Uniform as E}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4Uniform.js\";import{ShaderBuilder as F}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as $}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as z}from\"../views/3d/webgl-engine/lib/basicInterfaces.js\";import{VertexAttribute as V}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";const I=new Map([[V.POSITION,0],[V.NORMAL,1],[V.NORMALCOMPRESSED,1],[V.COLOR,2],[V.UV0,3],[V.UVREGION,4],[V.COMPONENTINDEX,5]]);function G(a){const i=new F;i.include(p,a),i.include(h,a),i.include(u,a),i.include(v,a),i.include(s,a),i.include(t,a),i.include(A,a),i.include(m,a),i.include(j,a),i.include(n,a);const{vertex:V,fragment:I}=i;I.uniforms.add(new E(\"view\")),a.pbrMode!==N.Normal&&a.pbrMode!==N.Schematic||(i.include(O,a),a.hasNormalTexture&&i.include(x,a)),a.output===c.Shadow&&a.componentData===d.Varying?V.code.add(_`#define discardShadows(castShadows) { if(!castShadows) { gl_Position = vec4(1e38, 1e38, 1e38, 1.0); return; } }`):V.code.add(_`#define discardShadows(castShadows) {}`);const G=a.integratedMeshMode===l.ColorOverlay||a.integratedMeshMode===l.ColorOverlayWithWater,k=G&&a.output===c.Color&&a.pbrMode===N.WaterOnIntegratedMesh;return G&&(i.include(M,a),i.include(T,a),a.spherical?V.code.add(_`\n      const float invEllipsoidRadius = ${_.float(1/(a.ellipsoidMode===R.Earth?e.radius:a.ellipsoidMode===R.Mars?o.radius:r.radius))};\n      vec2 projectOverlay(vec3 pos) {\n        return pos.xy / (1.0 + invEllipsoidRadius * pos.z);\n      }\n      `):V.code.add(_`vec2 projectOverlay(vec3 pos) { return pos.xy; }`)),k&&(i.varyings.add(\"tbnTangent\",\"vec3\"),i.varyings.add(\"tbnBiTangent\",\"vec3\"),i.varyings.add(\"groundNormal\",\"vec3\")),V.code.add(_`\n    void main() {\n      bool castShadows;\n      vec4 externalColor = forwardExternalColor(castShadows);\n      discardShadows(castShadows);\n\n      vertexDiscardByOpacity(externalColor.a);\n\n      if (externalColor.a < ${_.float(W)}) {\n        // Discard this vertex\n        gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n        return;\n      }\n\n      forwardPosition(readElevationOffset());\n      forwardNormal();\n      forwardTextureCoordinates();\n      forwardVertexColor();\n      forwardLinearDepth();\n      ${k?a.spherical?_`\n                groundNormal = normalize(positionWorld());\n                tbnTangent = normalize(cross(vec3(0.0, 0.0, 1.0), groundNormal));\n                tbnBiTangent = normalize(cross(groundNormal, tbnTangent));`:_`\n                groundNormal = vec3(0.0, 0.0, 1.0);\n                tbnTangent = vec3(1.0, 0.0, 0.0);\n                tbnBiTangent = vec3(0.0, 1.0, 0.0);`:\"\"}\n      ${G?_`setOverlayVTC(projectOverlay(position));`:\"\"}\n    }\n  `),a.output===c.Alpha&&(I.include(b),i.include(L,a),i.include(f,a),G&&I.uniforms.add(new $(\"ovColorTex\",((e,o)=>P(e,o)))),I.code.add(_`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n        ${a.hasMultipassTerrain?_`terrainDepthTest(gl_FragCoord, vPosition_view.z);`:\"\"}\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        vec4 externalColor;\n        int externalColorMixMode;\n        readExternalColor(externalColor, externalColorMixMode);\n\n        vec4 materialColor = computeMaterialColor(\n          textureColor,\n          externalColor,\n          externalColorMixMode\n        );\n        ${G?_`\n                vec4 overlayColor = getOverlayColor(ovColorTex, vtcOverlay);\n                materialColor = materialColor * (1.0 - overlayColor.a) + overlayColor;`:\"\"}\n\n        gl_FragColor = vec4(materialColor.a);\n      }\n    `)),a.output===c.Color&&(I.include(b),i.include(L,a),i.include(f,a),i.include(y,a),i.include(M,a),a.receiveShadows?(i.include(S,a),I.code.add(_`float evaluateShadow() {\nreturn readShadowMap(vPositionWorldCameraRelative, linearDepth);\n}`)):I.code.add(_`float evaluateShadow() { return 0.0; }`),G&&I.uniforms.add(new $(\"ovColorTex\",((e,o)=>P(e,o)))),I.code.add(_`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n        ${a.hasMultipassTerrain?_`terrainDepthTest(gl_FragCoord, vPosition_view.z);`:\"\"}\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        vec4 externalColor;\n        int externalColorMixMode;\n        readExternalColor(externalColor, externalColorMixMode);\n\n        vec4 materialColor = computeMaterialColor(\n          textureColor,\n          externalColor,\n          externalColorMixMode\n        );\n        ${G?_`vec4 overlayColor = getOverlayColor(ovColorTex, vtcOverlay);`:\"\"}\n    `),a.pbrMode===N.Normal||a.pbrMode===N.Schematic?(I.uniforms.add(new D(\"lightingMainIntensity\",((e,o)=>o.lighting.mainLight.intensity))),I.code.add(_`\n        ${a.pbrMode===N.Normal?_`\n                applyPBRFactors();\n                if (int(externalColorMixMode) == 3) {\n                  mrr = vec3(0.0, 0.6, 0.2);\n                }`:\"\"}\n        vec3 normalVertex = shadingNormalWorld();\n        float additionalIrradiance = 0.02 * lightingMainIntensity[2];\n      `),a.hasNormalTexture?I.code.add(_`mat3 tangentSpace = computeTangentSpace(normalVertex, vPositionWorldCameraRelative, vuv0);\nvec3 shadingNormal = computeTextureNormal(tangentSpace, vuv0);`):I.code.add(_`vec3 shadingNormal = normalVertex;`),I.code.add(_`${a.spherical?_`vec3 normalGround = normalize(positionWorld());`:_`vec3 normalGround = vec3(0.0, 0.0, 1.0);`}\n      `),I.code.add(_`\n        vec3 viewDir = normalize(vPositionWorldCameraRelative);\n        float ssao = 1.0 - occlusion * (1.0 - evaluateAmbientOcclusion());\n\n        ${a.snowCover?_`\n                vec3 surfaceNormal = normalize(shadingNormalWorld());\n                float snow = smoothstep(0.5, 0.55, dot(surfaceNormal, normalize(positionWorld())));\n                materialColor.rgb = mix(materialColor.rgb, vec3(1), snow);\n\n                shadingNormal = mix(shadingNormal, surfaceNormal, snow);\n                ssao = mix(ssao, 0.0, snow);\n                mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);\n                emission = mix(emission, vec3(0.0), snow);`:\"\"}\n\n        ${G?_` materialColor = materialColor * (1.0 - overlayColor.a) + overlayColor;`:\"\"}\n\n        vec3 additionalLight = evaluateAdditionalLighting(ssao, positionWorld());\n        vec4 shadedColor = vec4(evaluateSceneLightingPBR(shadingNormal, materialColor.rgb, evaluateShadow(), ssao, additionalLight, viewDir, normalGround, mrr, emission, additionalIrradiance), materialColor.a);\n        `)):(a.receiveShadows?I.code.add(_`float shadow = evaluateShadow();`):a.spherical?(I.uniforms.add(new B(\"lightingGlobalFactor\",((e,o)=>o.lighting.globalFactor))),I.code.add(_`float additionalAmbientScale = additionalDirectedAmbientLight(positionWorld());\nfloat shadow = lightingGlobalFactor * (1.0 - additionalAmbientScale);`)):I.code.add(_`float shadow = 0.0;`),k&&I.uniforms.add(new $(\"ovNormalTex\",((e,o)=>U(o)))),a.snowCover&&(i.extensions.add(\"GL_OES_standard_derivatives\"),I.code.add(_`vec3 surfaceNormal = normalize(cross(dFdx(vPositionWorldCameraRelative), dFdy(vPositionWorldCameraRelative)));\nfloat snow = smoothstep(0.5, 0.55, dot(surfaceNormal, normalize(positionWorld())));\nmaterialColor.rgb = mix(materialColor.rgb, vec3(1), snow);`)),I.code.add(_`\n        float ambientOcclusion = evaluateAmbientOcclusion();\n        vec3 additionalLight = evaluateAdditionalLighting(ambientOcclusion, positionWorld());\n\n        ${G?_` materialColor = materialColor * (1.0 - overlayColor.a) + overlayColor;`:\"\"}\n\n        vec4 shadedColor = vec4(evaluateSceneLighting(shadingNormalWorld(), materialColor.rgb, shadow, ambientOcclusion, additionalLight), materialColor.a);\n      ${k?_`\n              vec4 overlayWaterMask = getOverlayColor(ovNormalTex, vtcOverlay);\n              float waterNormalLength = length(overlayWaterMask);\n              if (waterNormalLength > 0.95) {\n                mat3 tbnMatrix = mat3(tbnTangent, tbnBiTangent, groundNormal);\n                vec4 waterColorLinear = getOverlayWaterColor(overlayWaterMask, overlayColor, -normalize(vPositionWorldCameraRelative), shadow, groundNormal, tbnMatrix, vPosition_view, positionWorld());\n                vec4 waterColorNonLinear = delinearizeGamma(vec4(waterColorLinear.xyz, 1.0));\n                // un-gamma the ground color to mix in linear space\n                shadedColor = mix(shadedColor, waterColorNonLinear, waterColorLinear.w);\n              }`:\"\"}\n      `)),I.code.add(_`\n        gl_FragColor = highlightSlice(shadedColor, vPositionWorldCameraRelative);\n        ${a.transparencyPassType===z.Color?\"gl_FragColor = premultiplyAlpha(gl_FragColor);\":\"\"}\n      }\n    `)),a.output!==c.Depth&&a.output!==c.Shadow||(i.include(C,a),I.code.add(_`void main() {\ndiscardBySlice(vPositionWorldCameraRelative);\nvec4 textureColor = readBaseColorTexture();\ndiscardOrAdjustAlpha(textureColor);\noutputDepth(linearDepth);\n}`)),a.output===c.Normal&&(i.include(y,a),I.code.add(_`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        // note: the alpha component needs to be 1.0 in order for this material\n        // to influence ambient occlusion, see the ssao fragment shader\n        float alpha = ${a.normalType===g.Ground?\"0.0\":\"1.0\"};\n        gl_FragColor = vec4(vec3(.5) + .5 * shadingNormal_view(), alpha);\n      }\n    `)),a.output===c.Highlight&&(i.include(w),I.code.add(_`\n      void main() {\n        discardBySlice(vPositionWorldCameraRelative);\n\n        vec4 textureColor = readBaseColorTexture();\n        discardOrAdjustAlpha(textureColor);\n\n        ${G?_`\n                vec4 overlayColor = getCombinedOverlayColor();\n                if (overlayColor.a == 0.0) {\n                  gl_FragColor = vec4(0.0);\n                  return;\n                }`:\"\"}\n\n        outputHighlight();\n      }\n    `)),i}function U(e){return 0===e.overlays.length?null:e.overlays[a.INNER].getValidTexture(i.Water)}const k=Object.freeze(Object.defineProperty({__proto__:null,attributeLocations:I,build:G,getOverlayNormalTexture:U},Symbol.toStringTag,{value:\"Module\"}));export{k as C,I as a,G as b,U as g};\n"],
  "mappings": "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",
  "names": ["a", "r", "c", "i", "n", "e", "T", "o", "m", "t", "n", "a", "i", "O", "e", "l", "s", "e", "i", "o", "n", "t", "s", "l", "i", "n", "s", "a", "d", "l", "o", "e", "t", "n", "a", "i", "n", "e", "t", "C", "s", "I", "o", "d", "m", "G", "T", "k", "l", "O"]
}
