{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/MeasurementArrow.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{addProjViewLocalOrigin as e}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float4PassUniform as o}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as t}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as r}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as i}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{VertexAttribute as d}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function n(n){const s=new i;e(s,n),s.vertex.uniforms.add(new t(\"width\",(e=>e.width))),s.attributes.add(d.POSITION,\"vec3\"),s.attributes.add(d.NORMAL,\"vec3\"),s.attributes.add(d.UV0,\"vec2\"),s.attributes.add(d.AUXPOS1,\"float\"),s.varyings.add(\"vtc\",\"vec2\"),s.varyings.add(\"vlength\",\"float\"),s.varyings.add(\"vradius\",\"float\"),s.vertex.code.add(r`void main(void) {\nvec3 bitangent = normal;\nvtc = uv0;\nvlength = auxpos1;\nvradius = 0.5 * width;\nvec4 pos = view * vec4(position + vradius * bitangent * uv0.y, 1.0);\ngl_Position = proj * pos;\n}`),s.fragment.uniforms.add([new t(\"outlineSize\",(e=>e.outlineSize)),new o(\"outlineColor\",(e=>e.outlineColor)),new t(\"stripeLength\",(e=>e.stripeLength)),new o(\"stripeEvenColor\",(e=>e.stripeEvenColor)),new o(\"stripeOddColor\",(e=>e.stripeOddColor))]);const a=1/Math.sqrt(2);return s.fragment.code.add(r`\n    const float INV_SQRT2 = ${r.float(a)};\n\n    vec4 arrowColor(vec2 tc, float len) {\n      float d = INV_SQRT2 * (tc.x - abs(tc.y));\n      d = min(d, INV_SQRT2 * (len - tc.x - abs(tc.y)));\n      d = min(d, 1.0 - abs(tc.y));\n\n      if (d < 0.0) {\n        return vec4(0.0);\n      } else if (d < outlineSize) {\n        return outlineColor;\n      } else {\n        return fract(0.5 / stripeLength * tc.x * vradius) >= 0.5 ? stripeOddColor : stripeEvenColor;\n      }\n    }\n\n    void main(void) {\n      vec2 ntc = vec2(vtc.x / vradius, vtc.y);\n      vec4 color = arrowColor(ntc, vlength / vradius);\n      if (color.a == 0.0) {\n        discard;\n      }\n      gl_FragColor = color;\n    }\n  `),s}const s=Object.freeze(Object.defineProperty({__proto__:null,build:n},Symbol.toStringTag,{value:\"Module\"}));export{s as M,n as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAI+iB,SAASA,GAAEA,IAAE;AAAC,QAAMC,KAAE,IAAI;AAAE,IAAEA,IAAED,EAAC,GAAEC,GAAE,OAAO,SAAS,IAAI,IAAI,EAAE,SAAS,CAAAC,OAAGA,GAAE,KAAM,CAAC,GAAED,GAAE,WAAW,IAAI,EAAE,UAAS,MAAM,GAAEA,GAAE,WAAW,IAAI,EAAE,QAAO,MAAM,GAAEA,GAAE,WAAW,IAAI,EAAE,KAAI,MAAM,GAAEA,GAAE,WAAW,IAAI,EAAE,SAAQ,OAAO,GAAEA,GAAE,SAAS,IAAI,OAAM,MAAM,GAAEA,GAAE,SAAS,IAAI,WAAU,OAAO,GAAEA,GAAE,SAAS,IAAI,WAAU,OAAO,GAAEA,GAAE,OAAO,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO/3B,GAAEA,GAAE,SAAS,SAAS,IAAI,CAAC,IAAI,EAAE,eAAe,CAAAC,OAAGA,GAAE,WAAY,GAAE,IAAI,EAAE,gBAAgB,CAAAA,OAAGA,GAAE,YAAa,GAAE,IAAI,EAAE,gBAAgB,CAAAA,OAAGA,GAAE,YAAa,GAAE,IAAI,EAAE,mBAAmB,CAAAA,OAAGA,GAAE,eAAgB,GAAE,IAAI,EAAE,kBAAkB,CAAAA,OAAGA,GAAE,cAAe,CAAC,CAAC;AAAE,QAAM,IAAE,IAAE,KAAK,KAAK,CAAC;AAAE,SAAOD,GAAE,SAAS,KAAK,IAAI;AAAA,8BAC7Q,EAAE,MAAM,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAwBpC,GAAEA;AAAC;AAAC,IAAM,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAMD,GAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["n", "s", "e"]
}
