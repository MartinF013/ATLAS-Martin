import {
  U
} from "./chunk-65A2N4LL.js";
import {
  s2 as s
} from "./chunk-HFTNOKM2.js";
import {
  r
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/layers/support/I3SIndexInfo.js
async function n(n2, t, s2, a, i, d) {
  let l = null;
  if (r(s2)) {
    const o = `${n2}/nodepages/`, t2 = o + Math.floor(s2.rootIndex / s2.nodesPerPage);
    try {
      return { type: "page", rootPage: (await U(t2, { query: { f: "json", token: a }, responseType: "json", signal: d })).data, rootIndex: s2.rootIndex, pageSize: s2.nodesPerPage, lodMetric: s2.lodSelectionMetricType, urlPrefix: o };
    } catch (f) {
      r(i) && i.warn("#fetchIndexInfo()", "Failed to load root node page. Falling back to node documents.", t2, f), l = f;
    }
  }
  if (!t)
    return null;
  const p = `${n2}/nodes/`, c = p + (t && t.split("/").pop());
  try {
    return { type: "node", rootNode: (await U(c, { query: { f: "json", token: a }, responseType: "json", signal: d })).data, urlPrefix: p };
  } catch (f) {
    throw new s("sceneservice:root-node-missing", "Root node missing.", { pageError: l, nodeError: f, url: c });
  }
}

export {
  n
};
//# sourceMappingURL=chunk-ZG7SHSSS.js.map
