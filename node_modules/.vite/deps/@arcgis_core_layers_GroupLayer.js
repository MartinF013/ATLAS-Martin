import {
  p as p2,
  t as t2,
  y as y2
} from "./chunk-45UEUCUL.js";
import {
  y
} from "./chunk-4AZE5OWC.js";
import "./chunk-CQSGZXR7.js";
import {
  n as n2
} from "./chunk-POPR7XUB.js";
import {
  p
} from "./chunk-TMSBC6BS.js";
import {
  v
} from "./chunk-OG6CQEZJ.js";
import {
  c
} from "./chunk-X5Z3DJQ4.js";
import {
  O
} from "./chunk-BUWXVMJU.js";
import "./chunk-JT3LXQ47.js";
import "./chunk-P3QN5DXX.js";
import "./chunk-QKRZMDWG.js";
import "./chunk-TBT57L4K.js";
import {
  a
} from "./chunk-D3XXPCBB.js";
import {
  t
} from "./chunk-OWBMOIIV.js";
import {
  b
} from "./chunk-SIH2IMSA.js";
import "./chunk-2AGPHSDM.js";
import "./chunk-JGSSQ5FR.js";
import "./chunk-5OEHY3VV.js";
import "./chunk-LJLQIETB.js";
import "./chunk-WKRVG5MO.js";
import "./chunk-GRILTTJT.js";
import "./chunk-JJRJ6TV3.js";
import "./chunk-K2FQEYBG.js";
import "./chunk-G4IZ2HTT.js";
import {
  U,
  l
} from "./chunk-T7BEWVV3.js";
import "./chunk-ASC3X65B.js";
import "./chunk-KVF4M6PZ.js";
import "./chunk-GD6ALUPQ.js";
import "./chunk-RN2KRYDN.js";
import "./chunk-ACJD5XFJ.js";
import "./chunk-OO2JXX7L.js";
import "./chunk-6DWU2ZQF.js";
import "./chunk-Q3R7XFM5.js";
import "./chunk-JCPK2OXG.js";
import "./chunk-HVM5D6S5.js";
import "./chunk-JYHTO6QC.js";
import "./chunk-FTLBKDGL.js";
import "./chunk-5Z5455ZY.js";
import "./chunk-D7DLEBS2.js";
import "./chunk-H7JF6Q7A.js";
import "./chunk-TT2HIXWQ.js";
import "./chunk-OIPX3EDD.js";
import "./chunk-NWRK6QLX.js";
import "./chunk-HPH3FMVB.js";
import "./chunk-Y7FSCP47.js";
import "./chunk-65A2N4LL.js";
import "./chunk-GVELBHGI.js";
import "./chunk-5N3FSR63.js";
import "./chunk-C4LU7RDX.js";
import "./chunk-EPCCNF3D.js";
import "./chunk-4PRVTUEZ.js";
import "./chunk-DMJWTK32.js";
import "./chunk-43S7PUMG.js";
import "./chunk-AIRC226G.js";
import "./chunk-BNPOKP6A.js";
import "./chunk-CHNDTVQJ.js";
import "./chunk-VLCG72SW.js";
import "./chunk-Q72YFZUL.js";
import "./chunk-YPZEGNLG.js";
import "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import "./chunk-XRL56EGK.js";
import {
  r as r2
} from "./chunk-ZIHDQYKE.js";
import "./chunk-GSRNZQFV.js";
import "./chunk-ICD7AJSY.js";
import {
  d,
  e as e2,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import "./chunk-U3PSONS6.js";
import "./chunk-HFTNOKM2.js";
import "./chunk-23NWA6WL.js";
import "./chunk-CVWDM4C7.js";
import "./chunk-G5JBUC5N.js";
import {
  r
} from "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/layers/GroupLayer.js
var _ = class extends a(t(c(v(p2(y2(O(b))))))) {
  constructor(i) {
    super(i), this._visibilityHandles = {}, this.allLayers = new p({ getCollections: () => [this.layers], getChildrenFunction: (i2) => "layers" in i2 ? i2.layers : null }), this.allTables = t2(this), this.fullExtent = void 0, this.operationalLayerType = "GroupLayer", this.spatialReference = void 0, this.type = "group";
  }
  initialize() {
    this._enforceVisibility(this.visibilityMode, this.visible), this.own(l(() => this.visible, this._onVisibilityChange.bind(this), U));
  }
  _writeLayers(i, e3, t3, r3) {
    const o = [];
    if (!i)
      return o;
    i.forEach((i2) => {
      const e4 = y(i2, r3.webmap ? r3.webmap.getLayerJSONFromResourceInfo(i2) : null, r3);
      r(e4) && e4.layerType && o.push(e4);
    }), e3.layers = o;
  }
  set portalItem(i) {
    this._set("portalItem", i);
  }
  set visibilityMode(i) {
    const e3 = this._get("visibilityMode") !== i;
    this._set("visibilityMode", i), e3 && this._enforceVisibility(i, this.visible);
  }
  load(i) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Feature Service", "Feature Collection", "Scene Service"] }, i)), Promise.resolve(this);
  }
  loadAll() {
    return n2(this, (i) => {
      i(this.layers, this.tables);
    });
  }
  layerAdded(i) {
    i.visible && "exclusive" === this.visibilityMode ? this._turnOffOtherLayers(i) : "inherited" === this.visibilityMode && (i.visible = this.visible), this._visibilityHandles[i.uid] = l(() => i.visible, (e3) => this._onChildVisibilityChange(i, e3), U);
  }
  layerRemoved(i) {
    const e3 = this._visibilityHandles[i.uid];
    e3 && (e3.remove(), delete this._visibilityHandles[i.uid]), this._enforceVisibility(this.visibilityMode, this.visible);
  }
  _turnOffOtherLayers(i) {
    this.layers.forEach((e3) => {
      e3 !== i && (e3.visible = false);
    });
  }
  _enforceVisibility(i, e3) {
    if (!e2(this).initialized)
      return;
    const t3 = this.layers;
    let s = t3.find((i2) => i2.visible);
    switch (i) {
      case "exclusive":
        t3.length && !s && (s = t3.getItemAt(0), s.visible = true), this._turnOffOtherLayers(s);
        break;
      case "inherited":
        t3.forEach((i2) => {
          i2.visible = e3;
        });
    }
  }
  _onVisibilityChange(i) {
    "inherited" === this.visibilityMode && this.layers.forEach((e3) => {
      e3.visible = i;
    });
  }
  _onChildVisibilityChange(i, e3) {
    switch (this.visibilityMode) {
      case "exclusive":
        e3 ? this._turnOffOtherLayers(i) : this._isAnyLayerVisible() || (i.visible = true);
        break;
      case "inherited":
        i.visible = this.visible;
    }
  }
  _isAnyLayerVisible() {
    return this.layers.some((i) => i.visible);
  }
};
e([d({ readOnly: true, dependsOn: [] })], _.prototype, "allLayers", void 0), e([d({ readOnly: true })], _.prototype, "allTables", void 0), e([d()], _.prototype, "fullExtent", void 0), e([d({ json: { read: false, write: { ignoreOrigin: true } } })], _.prototype, "layers", void 0), e([r2("layers")], _.prototype, "_writeLayers", null), e([d({ type: ["GroupLayer"] })], _.prototype, "operationalLayerType", void 0), e([d({ json: { origins: { "web-document": { read: false, write: false } } } })], _.prototype, "portalItem", null), e([d()], _.prototype, "spatialReference", void 0), e([d({ json: { read: false }, readOnly: true, value: "group" })], _.prototype, "type", void 0), e([d({ type: ["independent", "inherited", "exclusive"], value: "independent", json: { write: true, origins: { "web-map": { read: false, write: false } } } })], _.prototype, "visibilityMode", null), _ = e([n("esri.layers.GroupLayer")], _);
var L = _;
export {
  L as default
};
//# sourceMappingURL=@arcgis_core_layers_GroupLayer.js.map
