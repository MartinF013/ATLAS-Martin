import {
  e as e2
} from "./chunk-ZUEYZA7M.js";
import {
  O
} from "./chunk-25QHXOZB.js";
import {
  n as n3
} from "./chunk-UHJVTABQ.js";
import {
  o
} from "./chunk-T7SYNS2R.js";
import {
  a
} from "./chunk-JJRJ6TV3.js";
import {
  u
} from "./chunk-G4IZ2HTT.js";
import {
  h,
  l
} from "./chunk-T7BEWVV3.js";
import {
  a as a2,
  a2 as a3,
  c
} from "./chunk-4SBWV5M2.js";
import {
  s as s2
} from "./chunk-H7JF6Q7A.js";
import {
  j
} from "./chunk-TT2HIXWQ.js";
import {
  n as n2
} from "./chunk-OIPX3EDD.js";
import {
  s
} from "./chunk-XRL56EGK.js";
import {
  d,
  n8 as n,
  y3 as y
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";

// node_modules/@arcgis/core/widgets/LayerList/support/layerListUtils.js
var e3 = { hide: "hide", hideChildren: "hide-children" };
function n4(e4) {
  if (e4)
    return null != e4.listMode ? e4.listMode : void 0;
}
function i(e4) {
  if (e4)
    return null != e4.minScale ? e4.minScale : void 0;
}
function t(e4) {
  if (e4)
    return null != e4.maxScale ? e4.maxScale : void 0;
}
function r(e4) {
  if (!e4)
    return "inherited";
  const n5 = e4.get("layer.capabilities.exportMap.supportsSublayerVisibility");
  if ("boolean" == typeof n5)
    return n5 ? "independent" : "inherited";
  const i2 = e4.get("capabilities.exportMap.supportsSublayerVisibility");
  return "boolean" == typeof i2 ? i2 ? "independent" : "inherited" : null != e4.visibilityMode ? e4.visibilityMode : "independent";
}
function u2(n5) {
  if (!n5)
    return;
  if (!("type" in n5)) {
    return "sublayers";
  }
  if (!(n5.listMode === e3.hideChildren || "wmts" === n5.type)) {
    if ("group" === n5.type) {
      return "layers";
    }
    return "sublayers";
  }
}
function o2(e4) {
  const n5 = e4 && (e4.get("layer.layer") || e4.layer);
  if (!n5)
    return false;
  const i2 = n5.get("capabilities.exportMap.supportsDynamicLayers");
  return "boolean" != typeof i2 || i2;
}
function l2(i2) {
  return n4(i2) !== e3.hide;
}
function a4(e4, n5) {
  if (!e4 || isNaN(n5))
    return false;
  const r3 = i(e4), u3 = t(e4), o4 = !isNaN(r3) && r3 > 0 && n5 > r3, l3 = !isNaN(u3) && u3 > 0 && n5 < u3;
  return o4 || l3;
}
function s3(e4, n5) {
  e4 && e4.sort((e5, i2) => {
    const t2 = n5.indexOf(e5.uid), r3 = n5.indexOf(i2.uid);
    return t2 > r3 ? -1 : t2 < r3 ? 1 : 0;
  });
}
function c2(e4, n5) {
  const i2 = e4 == null ? void 0 : e4.layer;
  if (!i2)
    return;
  const t2 = u2(i2);
  if (!t2)
    return;
  s3(i2.get(t2), n5);
}
function d2(e4) {
  const n5 = e4 == null ? void 0 : e4.layer;
  return n5 && "group" === n5.type ? n5.layers : null;
}
function f(e4, n5) {
  var _a;
  const i2 = (_a = e4.layer) == null ? void 0 : _a.uid;
  return i2 && n5.find((e5) => {
    var _a2;
    return ((_a2 = e5.layer) == null ? void 0 : _a2.uid) === i2;
  });
}
function y2(e4) {
  const n5 = p(e4) ? e4 : null, i2 = e4 == null ? void 0 : e4.parent, t2 = "map-image" === (i2 == null ? void 0 : i2.type) && n5.source, r3 = "";
  return t2 && i2 ? { layer: i2, title: r3, sublayerIds: [t2.mapLayerId] } : { layer: e4, title: r3 };
}
function p(e4) {
  return !!(e4 == null ? void 0 : e4.layer);
}

// node_modules/@arcgis/core/support/actions/ActionSlider.js
var o3;
var r2 = o3 = class extends c {
  constructor(s4) {
    super(s4), this.displayValueEnabled = false, this.max = 1, this.min = 0, this.step = 0.1, this.type = "slider", this.value = null;
  }
  clone() {
    return new o3({ active: this.active, className: this.className, disabled: this.disabled, id: this.id, indicator: this.indicator, title: this.title, visible: this.visible, displayValueEnabled: this.displayValueEnabled, max: this.max, min: this.min, step: this.step, value: this.value });
  }
};
e([d()], r2.prototype, "displayValueEnabled", void 0), e([d()], r2.prototype, "max", void 0), e([d()], r2.prototype, "min", void 0), e([d()], r2.prototype, "step", void 0), e([d()], r2.prototype, "value", void 0), r2 = o3 = e([n("esri.support.Action.ActionSlider")], r2);
var a5 = r2;

// node_modules/@arcgis/core/widgets/LayerList/ListItemPanel.js
var h2 = { base: "esri-layer-list-panel", content: "esri-layer-list-panel__content", contentLegend: "esri-layer-list-panel__content--legend", contentString: "esri-layer-list-panel__content--string", contentElement: "esri-layer-list-panel__content--html-element", contentWidget: "esri-layer-list-panel__content--widget" };
var p2 = "legends";
var g = class extends s2(O) {
  constructor(e4, s4) {
    super(e4, s4), this._legend = null, this._handles = new u(), this.content = null, this.image = null, this.listItem = null, this.open = false, this.visible = true;
  }
  initialize() {
    this.own([l(() => this.content, (e4) => this._createLegend(e4), h)]);
  }
  destroy() {
    const { _legend: e4 } = this;
    e4 && e4.destroy(), this._legend = null;
  }
  get className() {
    const { image: e4 } = this, t2 = this._getFirstWidget();
    return this._get("className") || !e4 && t2 ? t2.iconClass : "";
  }
  set className(e4) {
    void 0 !== e4 ? this._override("className", e4) : this._clearOverride("className");
  }
  get title() {
    const e4 = this._getFirstWidget();
    return this._get("title") || e4 ? e4.label : "";
  }
  set title(e4) {
    void 0 !== e4 ? this._override("title", e4) : this._clearOverride("title");
  }
  render() {
    return n3("div", { class: h2.base }, this._renderContents());
  }
  _renderContent(e4) {
    const { _legend: t2, listItem: s4 } = this;
    if (!e4)
      return null;
    if ("legend" === e4) {
      return s4 && s4.view && s4.layer && t2 ? n3("div", { class: this.classes(h2.content, h2.contentLegend), key: t2 }, t2.render()) : null;
    }
    return "string" == typeof e4 ? n3("div", { class: this.classes(h2.content, h2.contentString), key: e4, innerHTML: e4 }) : e2(e4) ? n3("div", { class: this.classes(h2.content, h2.contentWidget), key: e4 }, e4.render()) : e4 instanceof HTMLElement ? n3("div", { class: this.classes(h2.content, h2.contentElement), key: e4, bind: e4, afterCreate: this._attachToNode }) : null;
  }
  _renderContents() {
    const { content: e4 } = this;
    return Array.isArray(e4) ? e4.map((e5) => this._renderContent(e5)) : this._renderContent(e4);
  }
  _getLegendOptions() {
    const { listItem: e4 } = this;
    if (!e4)
      return {};
    const { layer: t2, view: s4 } = e4;
    return t2 && s4 ? { view: s4, layerInfos: [y2(t2)] } : {};
  }
  _createLegend(e4) {
    this._hasLegend(e4) && !this._legend && import("./@arcgis_core_widgets_Legend.js").then(({ default: e5 }) => {
      const { _handles: t2, listItem: s4 } = this, i2 = new e5(this._getLegendOptions());
      this._legend = i2, this.notifyChange("className"), this.notifyChange("title");
      const o4 = l(() => {
        var _a, _b;
        return [s4 == null ? void 0 : s4.view, s4 == null ? void 0 : s4.layer, (_a = s4 == null ? void 0 : s4.layer) == null ? void 0 : _a.source, (_b = s4 == null ? void 0 : s4.layer) == null ? void 0 : _b.parent];
      }, () => this._updateLegend(i2), h);
      t2.add(o4, p2), this.scheduleRender();
    });
  }
  _hasLegend(e4) {
    const t2 = "legend";
    return e4 === t2 || !!Array.isArray(e4) && e4.includes(t2);
  }
  _attachToNode(e4) {
    e4.appendChild(this);
  }
  _updateLegend(e4) {
    e4.set(this._getLegendOptions()), this.scheduleRender();
  }
  _getWidget(e4) {
    return "legend" === e4 ? this._legend : e2(e4) ? e4 : null;
  }
  _getFirstWidget() {
    const { content: e4 } = this;
    if (Array.isArray(e4)) {
      let t2 = null;
      return e4.some((e5) => {
        const s4 = this._getWidget(e5);
        return s4 && (t2 = s4), !!s4;
      }), t2;
    }
    return this._getWidget(e4);
  }
};
e([d()], g.prototype, "className", null), e([d()], g.prototype, "content", void 0), e([d()], g.prototype, "image", void 0), e([d()], g.prototype, "listItem", void 0), e([d()], g.prototype, "title", null), e([d()], g.prototype, "open", void 0), e([d()], g.prototype, "visible", void 0), g = e([n("esri.widgets.LayerList.ListItemPanel")], g);
var _ = g;

// node_modules/@arcgis/core/widgets/LayerList/ListItem.js
var b;
var C = j.ofType({ key: "type", defaultKeyValue: "button", base: c, typeMap: { button: a2, toggle: a3, slider: a5 } });
var S = j.ofType(C);
var j2 = "layer";
var L = "child-list-mode";
var O2 = "hide";
var I = "esri.widgets.LayerList.ListItem";
var P = b = class extends s2(a(y)) {
  constructor(t2) {
    super(t2), this.actionsSections = new S(), this.actionsOpen = false, this.children = new (j.ofType(b))(), this.childrenSortable = true, this.error = null, this.hidden = false, this.layer = null, this.layerView = null, this.listItemCreatedFunction = null, this.open = false, this.panel = null, this.parent = null, this.sortable = true, this.view = null, this.visible = null;
  }
  initialize() {
    if (this.handles.add([l(() => this.layer, (t2) => this._watchLayerProperties(t2), h), l(() => this.view, (t2) => this._updateChildren(t2), h), l(() => this.panel, (t2) => this._setListItemOnPanel(t2), h), l(() => [this.layer, this.view], () => this._getLayerView(), h)]), "function" == typeof this.listItemCreatedFunction) {
      const t2 = { item: this };
      this.listItemCreatedFunction.call(null, t2);
    }
  }
  destroy() {
    this.view = null;
  }
  get connectionStatus() {
    const { layerView: t2 } = this;
    if (t2 && "connectionStatus" in t2)
      return t2.connectionStatus;
  }
  get incompatible() {
    const { layerView: t2 } = this;
    return !(!t2 || !("spatialReferenceSupported" in t2)) && !t2.spatialReferenceSupported;
  }
  castPanel(t2) {
    return this.get("panel.open") && !t2.hasOwnProperty("open") && (t2.open = true), t2 ? new _(t2) : null;
  }
  get title() {
    const t2 = this.get("layer.layer");
    return (!t2 || t2 && this.get("layer.layer.loaded")) && this.get("layer.title") || this.get("layer.attributes.title") || "";
  }
  set title(t2) {
    void 0 !== t2 ? this._override("title", t2) : this._clearOverride("title");
  }
  get updating() {
    const { layerView: t2, connectionStatus: e4 } = this;
    return !e4 && (t2 ? t2.updating : this._isLayerUpdating(this.layer));
  }
  get visibleAtCurrentScale() {
    return !a4(this.layer, this.get("view.scale"));
  }
  get visibilityMode() {
    return r(this.layer);
  }
  clone() {
    return new b({ actionsSections: this.actionsSections.clone(), actionsOpen: this.actionsOpen, children: this.children.clone(), layer: this.layer, listItemCreatedFunction: this.listItemCreatedFunction, open: this.open, panel: this.panel, title: this.title, view: this.view, visible: this.visible });
  }
  _setListItemOnPanel(t2) {
    t2 && (t2.listItem = this);
  }
  _updateChildren(t2) {
    const e4 = this.children;
    e4 && e4.forEach((e5) => e5.view = t2);
  }
  _addChildren(t2) {
    if (this.handles.remove(L), this.children.removeAll(), !t2)
      return;
    t2.forEach((e5) => {
      this.handles.add(l(() => e5.listMode, () => this._addChildren(t2)), L);
    });
    const e4 = t2.filter((t3) => n4(t3) !== O2);
    this.children.addMany(this._makeChildren(e4));
  }
  _watchSublayerChanges(t2) {
    t2 && this.handles.add(t2.on("change", () => {
      this._addChildren(t2);
    }), j2);
  }
  _initializeChildLayers(t2) {
    this._addChildren(t2), this._watchSublayerChanges(t2);
  }
  _makeChildren(t2) {
    return t2.map((t3) => l2(t3) ? new b({ layer: t3, listItemCreatedFunction: this.listItemCreatedFunction, parent: this, view: this.view }) : null).reverse();
  }
  _watchLayerProperties(t2) {
    if (!this.handles)
      return;
    if (this.handles.remove(j2), this.handles.remove(L), !t2)
      return;
    this.handles.add(l(() => t2.listMode, () => this._watchLayerProperties(t2)), j2);
    if ("hide-children" === n4(t2))
      return void this.children.removeAll();
    const e4 = u2(t2);
    e4 && this.handles.add(l(() => t2[e4], () => {
      t2.hasOwnProperty(e4) && this._initializeChildLayers(t2[e4]);
    }, h), j2);
  }
  async _getLayerView() {
    const { layer: t2, view: e4 } = this;
    if (t2 && e4)
      try {
        const i2 = await e4.whenLayerView(t2);
        if (i2.layer !== this.layer)
          return;
        this._set("layerView", i2);
      } catch {
      }
  }
  _isLayerUpdating(t2) {
    return t2 && "loading" === t2.loadStatus;
  }
};
e([d({ type: S })], P.prototype, "actionsSections", void 0), e([d()], P.prototype, "actionsOpen", void 0), e([d({ type: j })], P.prototype, "children", void 0), e([d()], P.prototype, "childrenSortable", void 0), e([d({ readOnly: true })], P.prototype, "connectionStatus", null), e([o("layer.loadError?")], P.prototype, "error", void 0), e([d()], P.prototype, "hidden", void 0), e([d({ readOnly: true })], P.prototype, "incompatible", null), e([d()], P.prototype, "layer", void 0), e([d({ readOnly: true })], P.prototype, "layerView", void 0), e([d()], P.prototype, "listItemCreatedFunction", void 0), e([d()], P.prototype, "open", void 0), e([d({ type: _ })], P.prototype, "panel", void 0), e([s("panel")], P.prototype, "castPanel", null), e([d()], P.prototype, "parent", void 0), e([d()], P.prototype, "sortable", void 0), e([d()], P.prototype, "title", null), e([d({ readOnly: true })], P.prototype, "updating", null), e([d({ value: null })], P.prototype, "view", void 0), e([o("layer.visible")], P.prototype, "visible", void 0), e([d({ readOnly: true })], P.prototype, "visibleAtCurrentScale", null), e([d({ readOnly: true })], P.prototype, "visibilityMode", null), P = b = e([n(I)], P);
var V = P;

// node_modules/@arcgis/core/widgets/LayerList/LayerListViewModel.js
var m = { view: "view", viewLayers: "view-layers", mapLayers: "map-layers", layerViews: "layer-views", layerListMode: "layer-list-mode", children: "children" };
var h3 = "hide";
var p3 = j.ofType(V);
var y3 = class extends n2.EventedAccessor {
  constructor(e4) {
    super(e4), this._handles = new u(), this.listItemCreatedFunction = null, this.operationalItems = new p3(), this.view = null;
  }
  initialize() {
    this._handles.add([l(() => {
      var _a;
      return [this.view, (_a = this.view) == null ? void 0 : _a.ready];
    }, () => this._viewHandles(), h), l(() => this.listItemCreatedFunction, () => this._listItemCreatedFunctionChanged())], m.view);
  }
  destroy() {
    this._handles.destroy(), this._handles = null, this.view = null, this.operationalItems.removeAll();
  }
  get state() {
    const e4 = this.get("view");
    return this.get("view.ready") ? "ready" : e4 ? "loading" : "disabled";
  }
  triggerAction(e4, t2) {
    e4 && !e4.disabled && this.emit("trigger-action", { action: e4, item: t2 });
  }
  moveListItem(e4, t2, s4, i2) {
    var _a, _b;
    const r3 = e4 == null ? void 0 : e4.layer;
    if (!r3)
      return;
    const o4 = (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.layers, a6 = t2 ? d2(t2) : o4, l3 = s4 ? d2(s4) : o4;
    if (!a6 || !l3)
      return;
    const { operationalItems: n5 } = this, c3 = (t2 == null ? void 0 : t2.children) || n5, m2 = (s4 == null ? void 0 : s4.children) || n5, h4 = l3.length - i2;
    e4.parent = s4 || null, c3.includes(e4) && c3.remove(e4), a6.includes(r3) && a6.remove(r3), m2.includes(e4) || m2.add(e4, h4), l3.includes(r3) || l3.add(r3, h4);
  }
  _createLayerViewHandles(e4) {
    const { _handles: t2 } = this;
    t2.remove(m.layerViews), this._compileList(), e4 && t2.add(e4.on("change", () => this._compileList()), m.layerViews);
  }
  _createMapLayerHandles(e4) {
    const { _handles: t2 } = this;
    t2.remove(m.mapLayers), this._compileList(), e4 && t2.add(e4.on("change", () => this._compileList()), m.mapLayers);
  }
  _createListItem(e4) {
    const { view: t2, listItemCreatedFunction: s4 } = this;
    return new V({ layer: e4, listItemCreatedFunction: s4, view: t2 });
  }
  _removeAllItems() {
    const { _handles: e4, operationalItems: t2 } = this;
    t2.forEach((t3) => {
      e4.remove(`${m.children}-${t3.uid}`);
    }), t2.removeAll();
  }
  _getViewableLayers(e4) {
    if (e4)
      return e4.filter((e5) => n4(e5) !== h3);
  }
  _watchLayersListMode(e4) {
    const { _handles: t2 } = this;
    t2.remove(m.layerListMode), e4 && e4.forEach((e5) => {
      "listMode" in e5 && t2.add(l(() => e5.listMode, () => this._compileList()), m.layerListMode);
    });
  }
  _compileList() {
    const e4 = this.get("view.map.layers");
    this._watchLayersListMode(e4);
    const t2 = this._getViewableLayers(e4);
    t2 && t2.length ? (this._createNewItems(t2), this._removeItems(t2), this._sortItems(t2)) : this._removeAllItems();
  }
  _createNewItems(e4) {
    const { operationalItems: t2 } = this;
    e4.forEach((e5) => {
      t2.find((t3) => t3.layer === e5) || t2.add(this._createListItem(e5));
    });
  }
  _removeItems(e4) {
    const { _handles: t2, operationalItems: s4 } = this, i2 = [];
    s4.forEach((s5) => {
      s5 && e4 && e4.includes(s5.layer) || (t2.remove(`${m.children}-${s5.uid}`), i2.push(s5));
    }), s4.removeMany(i2);
  }
  _sortItems(e4) {
    const { operationalItems: t2 } = this;
    t2.sort((t3, s4) => {
      const i2 = e4.indexOf(t3.layer), r3 = e4.indexOf(s4.layer);
      return i2 > r3 ? -1 : i2 < r3 ? 1 : 0;
    });
  }
  _listItemCreatedFunctionChanged() {
    this._removeAllItems(), this._compileList();
  }
  _viewHandles() {
    const { _handles: e4, view: t2 } = this;
    e4.remove([m.mapLayers, m.layerViews, m.viewLayers]), this._compileList(), t2 && t2.ready && e4.add([l(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.map) == null ? void 0 : _b.allLayers;
    }, (e5) => this._createMapLayerHandles(e5), h), l(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.allLayerViews;
    }, (e5) => this._createLayerViewHandles(e5), h)], m.viewLayers);
  }
};
e([d()], y3.prototype, "listItemCreatedFunction", void 0), e([d({ type: p3 })], y3.prototype, "operationalItems", void 0), e([d({ readOnly: true })], y3.prototype, "state", null), e([d()], y3.prototype, "view", void 0), y3 = e([n("esri.widgets.LayerList.LayerListViewModel")], y3);
var v = y3;

export {
  u2 as u,
  o2 as o,
  l2 as l,
  s3 as s,
  c2 as c,
  f,
  V,
  v
};
//# sourceMappingURL=chunk-NJ44JOOO.js.map
