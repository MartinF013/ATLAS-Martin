import {
  o as o2,
  v
} from "./chunk-YZNDHJDJ.js";
import {
  z
} from "./chunk-RN2KRYDN.js";
import {
  x
} from "./chunk-NWRK6QLX.js";
import {
  o,
  q,
  u
} from "./chunk-PKZEO23A.js";

// node_modules/@arcgis/core/views/3d/analysis/support/viewUtils.js
function c(e, o3) {
  if (o(o3, 0, 0, 0), e.length > 0) {
    for (let r = 0; r < e.length; ++r)
      u(o3, o3, e[r]);
    q(o3, o3, 1 / e.length);
  }
}
function i(e, n, s, t2) {
  t2.projectToRenderScreen(e, f), t2.projectToRenderScreen(n, m), o2(s, p, a), v(s, s);
}
var f = x();
var a = f;
var m = x();
var p = m;

// node_modules/@arcgis/core/views/3d/analysis/support/UnitNormalizer.js
var t = class {
  constructor(e = null) {
    this.spatialReference = e;
  }
  get spatialReference() {
    return this._spatialReference;
  }
  set spatialReference(e) {
    e !== this._spatialReference && (this._spatialReference = e, this._updateNormalizationFactors());
  }
  normalizeDistance(e) {
    return e * this._metersPerDistanceUnit;
  }
  normalizeElevation(e) {
    return e * this._metersPerElevationUnit;
  }
  normalizeArea(e) {
    return e * this._squareMetersPerAreaUnit;
  }
  _updateNormalizationFactors() {
    this._metersPerDistanceUnit = z(this._spatialReference, 1), this._metersPerElevationUnit = z(this._spatialReference, 1), this._squareMetersPerAreaUnit = this._metersPerDistanceUnit * this._metersPerDistanceUnit;
  }
};

export {
  c,
  i,
  t
};
//# sourceMappingURL=chunk-HXWHE6NR.js.map
