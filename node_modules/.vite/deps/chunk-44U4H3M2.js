import {
  c,
  o
} from "./chunk-RC6OMMF6.js";
import {
  c as c2
} from "./chunk-DMGVDNFD.js";
import {
  i2 as i
} from "./chunk-I5UNY2WQ.js";
import {
  n as n2,
  t
} from "./chunk-NAB3NF54.js";
import {
  O
} from "./chunk-VMF4NMEB.js";
import {
  n
} from "./chunk-RTHP2LNT.js";

// node_modules/@arcgis/core/chunks/HighlightBlur.glsl.js
var a = class extends t {
  constructor() {
    super(...arguments), this.blurSize = n();
  }
};
function d() {
  const e = new i(), { vertex: o2, fragment: a2 } = e, d2 = o2.code, l2 = a2.code;
  return e.attributes.add(O.POSITION, "vec2"), e.attributes.add(O.UV0, "vec2"), e.varyings.add("blurCoordinate", "vec3"), o2.uniforms.add(new c2("coverageTex", (e2) => e2.coverageTexture)), a2.uniforms.add(new o("blurSize", (e2) => e2.blurSize)), d2.add(n2`void main() {
gl_Position = vec4(position, 0.0, 1.0);
vec4 cov = texture2D(coverageTex, uv0);
if (cov.r == 0.0) {
gl_Position = vec4(0.0);
}
blurCoordinate = vec3(gl_Position.xy * 0.5 + vec2(0.5), max(cov.g, cov.b));
}`), a2.uniforms.add(new c("tex", (e2) => e2.blurInputTexture)), l2.add(n2`void main() {
vec2 uv = blurCoordinate.xy;
vec4 center = texture2D(tex, uv);
if (blurCoordinate.z == 1.0) {
gl_FragColor = center;
} else {
vec4 sum = vec4(0.0);
sum += center * 0.204164;
sum += texture2D(tex, uv + blurSize * 1.407333) * 0.304005;
sum += texture2D(tex, uv - blurSize * 1.407333) * 0.304005;
sum += texture2D(tex, uv + blurSize * 3.294215) * 0.093913;
sum += texture2D(tex, uv - blurSize * 3.294215) * 0.093913;
gl_FragColor = sum;
}
}`), e;
}
var l = Object.freeze(Object.defineProperty({ __proto__: null, HighlightBlurDrawParameters: a, build: d }, Symbol.toStringTag, { value: "Module" }));

export {
  a,
  d,
  l
};
//# sourceMappingURL=chunk-44U4H3M2.js.map
