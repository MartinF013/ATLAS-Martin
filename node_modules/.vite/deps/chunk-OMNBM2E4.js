import {
  b
} from "./chunk-GSFXXEAM.js";
import {
  y
} from "./chunk-TBT57L4K.js";
import {
  i
} from "./chunk-C4LU7RDX.js";
import {
  s
} from "./chunk-DMJWTK32.js";
import {
  l
} from "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  m
} from "./chunk-G5JBUC5N.js";
import {
  r
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/layers/support/FeatureFilter.js
var c;
var m2 = new s({ esriSpatialRelIntersects: "intersects", esriSpatialRelContains: "contains", esriSpatialRelCrosses: "crosses", esriSpatialRelDisjoint: "disjoint", esriSpatialRelEnvelopeIntersects: "envelope-intersects", esriSpatialRelIndexIntersects: "index-intersects", esriSpatialRelOverlaps: "overlaps", esriSpatialRelTouches: "touches", esriSpatialRelWithin: "within", esriSpatialRelRelation: "relation" });
var u = new s({ esriSRUnit_Meter: "meters", esriSRUnit_Kilometer: "kilometers", esriSRUnit_Foot: "feet", esriSRUnit_StatuteMile: "miles", esriSRUnit_NauticalMile: "nautical-miles", esriSRUnit_USNauticalMile: "us-nautical-miles" });
var d2 = c = class extends l {
  constructor(e2) {
    super(e2), this.where = null, this.geometry = null, this.spatialRelationship = "intersects", this.distance = void 0, this.objectIds = null, this.units = null, this.timeExtent = null;
  }
  createQuery(e2 = {}) {
    const { where: t, geometry: i2, spatialRelationship: r2, timeExtent: s2, objectIds: n2, units: a, distance: l2 } = this;
    return new b({ geometry: m(i2), objectIds: m(n2), spatialRelationship: r2, timeExtent: m(s2), where: t, units: a, distance: l2, ...e2 });
  }
  clone() {
    const { where: e2, geometry: t, spatialRelationship: i2, timeExtent: r2, objectIds: s2, units: n2, distance: a } = this;
    return new c({ geometry: m(t), objectIds: m(s2), spatialRelationship: i2, timeExtent: m(r2), where: e2, units: n2, distance: a });
  }
};
e([d({ type: String, json: { write: true } })], d2.prototype, "where", void 0), e([d({ types: i, json: { write: true } })], d2.prototype, "geometry", void 0), e([d({ type: m2.apiValues, json: { name: "spatialRel", read: { reader: m2.read }, write: { allowNull: false, writer: m2.write, overridePolicy() {
  return { enabled: r(this.geometry) };
} } } })], d2.prototype, "spatialRelationship", void 0), e([d({ type: Number, json: { write: { overridePolicy(e2) {
  return { enabled: null != e2 && null != this.geometry };
} } } })], d2.prototype, "distance", void 0), e([d({ type: [Number], json: { write: true } })], d2.prototype, "objectIds", void 0), e([d({ type: u.apiValues, json: { read: u.read, write: { writer: u.write, overridePolicy(e2) {
  return { enabled: null != e2 && null != this.geometry };
} } } })], d2.prototype, "units", void 0), e([d({ type: y, json: { write: true } })], d2.prototype, "timeExtent", void 0), d2 = c = e([n("esri.layers.support.FeatureFilter")], d2);
var y2 = d2;

export {
  y2 as y
};
//# sourceMappingURL=chunk-OMNBM2E4.js.map
