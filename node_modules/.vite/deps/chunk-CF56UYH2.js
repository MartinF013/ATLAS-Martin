import {
  e as e2,
  n8 as n,
  r2 as r,
  y3 as y
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  s
} from "./chunk-CVWDM4C7.js";
import {
  b
} from "./chunk-G5JBUC5N.js";
import {
  f
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/core/Clonable.js
s.getLogger("esri.core.Clonable");
var l = (s2) => {
  let r2 = class extends s2 {
    clone() {
      var _a;
      const o = f(e2(this), "unable to clone instance of non-accessor class"), s3 = o.metadatas, r3 = o.store, i = {}, l2 = /* @__PURE__ */ new Map();
      for (const t in s3) {
        const o2 = s3[t], c = r3 == null ? void 0 : r3.originOf(t), a3 = o2.clonable;
        if (o2.readOnly || false === a3 || c !== r.USER && c !== r.DEFAULTS && c !== r.WEB_MAP && c !== r.WEB_SCENE)
          continue;
        const f2 = this[t];
        let p = null;
        p = "function" == typeof a3 ? a3(f2) : "reference" === a3 ? f2 : b(f2), null != f2 && null == p || (c === r.DEFAULTS ? l2.set(t, p) : i[t] = p);
      }
      const a2 = new (0, Object.getPrototypeOf(this).constructor)(i);
      if (l2.size) {
        const o2 = (_a = e2(a2)) == null ? void 0 : _a.store;
        if (o2)
          for (const [s4, e3] of l2)
            o2.set(s4, e3, r.DEFAULTS);
      }
      return a2;
    }
  };
  return r2 = e([n("esri.core.Clonable")], r2), r2;
};
var a = class extends l(y) {
};
a = e([n("esri.core.Clonable")], a);

export {
  l,
  a
};
//# sourceMappingURL=chunk-CF56UYH2.js.map
