import {
  t
} from "./chunk-E452MYWA.js";
import {
  i as i4
} from "./chunk-WRJQ7542.js";
import "./chunk-QFYBIFWB.js";
import {
  c,
  f,
  i as i3,
  s as s5
} from "./chunk-7USXBUJ4.js";
import {
  g as g2
} from "./chunk-UKL5ZIG7.js";
import {
  m as m5
} from "./chunk-LPRAS3HG.js";
import {
  a as a2,
  n as n3
} from "./chunk-TMLBWFXL.js";
import {
  L
} from "./chunk-6S5B4VLQ.js";
import {
  S as S3,
  h,
  v
} from "./chunk-24OMPNTT.js";
import "./chunk-DLW46BXD.js";
import "./chunk-KBILTFOD.js";
import {
  u as u2
} from "./chunk-QNKOXOOY.js";
import "./chunk-FUQI3AAI.js";
import "./chunk-6FKG7JUE.js";
import "./chunk-PZWU5EHT.js";
import "./chunk-45UEUCUL.js";
import {
  y as y3
} from "./chunk-4AZE5OWC.js";
import {
  a,
  l as l3
} from "./chunk-CQSGZXR7.js";
import {
  n as n2
} from "./chunk-POPR7XUB.js";
import {
  Ke
} from "./chunk-7LOJJ46D.js";
import "./chunk-VNR743PA.js";
import "./chunk-JJ7VMWJT.js";
import "./chunk-SWCA522B.js";
import "./chunk-YPIBZ3CH.js";
import "./chunk-XLCZFN6R.js";
import "./chunk-OMNBM2E4.js";
import "./chunk-WKHS6QIX.js";
import "./chunk-6O7ZZEV7.js";
import "./chunk-M2WA2LMI.js";
import "./chunk-UQDLDM54.js";
import "./chunk-YL26MZEL.js";
import "./chunk-OBCAVCXI.js";
import "./chunk-RFOZTYJH.js";
import {
  l as l2
} from "./chunk-J6DXGG2A.js";
import "./chunk-L2YBXQTH.js";
import "./chunk-S4ZKPFDU.js";
import "./chunk-YG6VFATO.js";
import "./chunk-WBX2MY5R.js";
import "./chunk-3DZ4BNVJ.js";
import "./chunk-4XBERLPX.js";
import {
  r as r4
} from "./chunk-D7AOY7GH.js";
import "./chunk-SZPDY7KN.js";
import "./chunk-Y6YGVGFR.js";
import "./chunk-GKRQ3NBT.js";
import "./chunk-OXEYQYNR.js";
import "./chunk-OXRBYKVX.js";
import "./chunk-6O2ARNGD.js";
import "./chunk-YLU2PLJS.js";
import "./chunk-MZX3HN4G.js";
import "./chunk-T47JAOQZ.js";
import {
  j as j5,
  m as m3
} from "./chunk-6GPADSSO.js";
import "./chunk-CQ47VEUP.js";
import "./chunk-FU5UMT3R.js";
import "./chunk-ODX6X222.js";
import {
  b
} from "./chunk-GSFXXEAM.js";
import "./chunk-QZTJM4HG.js";
import "./chunk-TMSBC6BS.js";
import "./chunk-RIWDMEW4.js";
import "./chunk-C7S44TP4.js";
import "./chunk-KUWW4YJ7.js";
import "./chunk-P6I5J7W6.js";
import "./chunk-ORGMKDYR.js";
import "./chunk-F2DXUUYL.js";
import "./chunk-EGR3VVZG.js";
import "./chunk-F5A4XAOJ.js";
import "./chunk-4TDLPK3D.js";
import "./chunk-U7B2WKBH.js";
import "./chunk-T7SYNS2R.js";
import "./chunk-WODSLTZT.js";
import {
  i as i2
} from "./chunk-JMZLJZMP.js";
import "./chunk-OG6CQEZJ.js";
import "./chunk-X5Z3DJQ4.js";
import {
  O,
  S as S2
} from "./chunk-BUWXVMJU.js";
import "./chunk-JT3LXQ47.js";
import {
  b as b2
} from "./chunk-P3QN5DXX.js";
import "./chunk-QKRZMDWG.js";
import {
  y as y2
} from "./chunk-TBT57L4K.js";
import "./chunk-D3XXPCBB.js";
import "./chunk-OWBMOIIV.js";
import "./chunk-SIH2IMSA.js";
import "./chunk-2AGPHSDM.js";
import "./chunk-JGSSQ5FR.js";
import "./chunk-5OEHY3VV.js";
import "./chunk-LJLQIETB.js";
import "./chunk-WKRVG5MO.js";
import "./chunk-GRILTTJT.js";
import "./chunk-JJRJ6TV3.js";
import "./chunk-K2FQEYBG.js";
import "./chunk-G4IZ2HTT.js";
import {
  j as j4
} from "./chunk-T7BEWVV3.js";
import "./chunk-ASC3X65B.js";
import "./chunk-KVF4M6PZ.js";
import "./chunk-IZCP5QP4.js";
import "./chunk-QFTOW2ST.js";
import "./chunk-I4USSDLI.js";
import "./chunk-VI3TTBSC.js";
import "./chunk-B42HXLDM.js";
import "./chunk-TVXPO7T5.js";
import "./chunk-2EZYA7VW.js";
import "./chunk-OEQ3EDRD.js";
import "./chunk-Z6EP2GTZ.js";
import "./chunk-P6G64ARX.js";
import "./chunk-GD6ALUPQ.js";
import "./chunk-CLGCKZUR.js";
import "./chunk-RN2KRYDN.js";
import "./chunk-BLINZ65M.js";
import "./chunk-TADZYUVR.js";
import "./chunk-C5ULLWJ7.js";
import "./chunk-HFDYAQZS.js";
import "./chunk-HJHWUUQQ.js";
import "./chunk-TMBOFNWA.js";
import "./chunk-ZNEGSJWK.js";
import "./chunk-EI4MOLML.js";
import "./chunk-4SBWV5M2.js";
import {
  l as l4
} from "./chunk-CF56UYH2.js";
import "./chunk-5TRUGQDM.js";
import "./chunk-PZG7CR4Y.js";
import {
  r as r3
} from "./chunk-2HDG7SIE.js";
import "./chunk-56RHM4A6.js";
import "./chunk-ACJD5XFJ.js";
import "./chunk-OO2JXX7L.js";
import "./chunk-6DWU2ZQF.js";
import {
  B
} from "./chunk-Q3R7XFM5.js";
import "./chunk-JCPK2OXG.js";
import {
  m as m4
} from "./chunk-HVM5D6S5.js";
import "./chunk-JYHTO6QC.js";
import {
  m as m2
} from "./chunk-FTLBKDGL.js";
import "./chunk-5Z5455ZY.js";
import "./chunk-D7DLEBS2.js";
import "./chunk-H7JF6Q7A.js";
import {
  j as j2
} from "./chunk-TT2HIXWQ.js";
import "./chunk-OIPX3EDD.js";
import "./chunk-NWRK6QLX.js";
import "./chunk-HPH3FMVB.js";
import "./chunk-OOZMA7DN.js";
import "./chunk-Y7FSCP47.js";
import {
  U
} from "./chunk-65A2N4LL.js";
import {
  s as s4
} from "./chunk-GVELBHGI.js";
import {
  St,
  X,
  j as j3,
  nt
} from "./chunk-5N3FSR63.js";
import {
  i
} from "./chunk-C4LU7RDX.js";
import "./chunk-EPCCNF3D.js";
import {
  d as d3
} from "./chunk-4PRVTUEZ.js";
import {
  s
} from "./chunk-DMJWTK32.js";
import "./chunk-FVPTCNCX.js";
import "./chunk-BPZGJQOB.js";
import "./chunk-ZOKX6UGH.js";
import "./chunk-PKZEO23A.js";
import "./chunk-43S7PUMG.js";
import "./chunk-AIRC226G.js";
import "./chunk-BNPOKP6A.js";
import "./chunk-CHNDTVQJ.js";
import "./chunk-VLCG72SW.js";
import {
  M
} from "./chunk-Q72YFZUL.js";
import {
  R,
  j
} from "./chunk-YPZEGNLG.js";
import {
  E as E2,
  k2 as k
} from "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import "./chunk-XRL56EGK.js";
import {
  r as r2
} from "./chunk-ZIHDQYKE.js";
import {
  o as o2
} from "./chunk-GSRNZQFV.js";
import {
  d as d2,
  l,
  u2 as u
} from "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n,
  y3 as y
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import {
  E,
  g
} from "./chunk-U3PSONS6.js";
import {
  s2 as s3
} from "./chunk-HFTNOKM2.js";
import {
  S
} from "./chunk-23NWA6WL.js";
import {
  s as s2
} from "./chunk-CVWDM4C7.js";
import {
  m,
  o
} from "./chunk-G5JBUC5N.js";
import {
  e as e2,
  r,
  x
} from "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/networks/Network.js
var y4 = s2.getLogger("esri.networks.Network");
var m6 = class extends O(m4) {
  constructor(e5) {
    super(e5), this.id = null, this.title = null, this.layerUrl = null, this.dataElement = null, this.fullExtent = null, this.spatialReference = null, this.type = null, this.sourceJSON = null;
  }
  initialize() {
    this.when().catch((e5) => {
      g(e5) || y4.error("#load()", `Failed to load layer (title: '${this.title ?? "no title"}', id: '${this.id ?? "no id"}')`, { error: e5 });
    });
  }
  get datasetName() {
    var _a;
    return (_a = this.dataElement) == null ? void 0 : _a.name;
  }
  get owner() {
    var _a;
    return (_a = this.dataElement) == null ? void 0 : _a.userIdentity;
  }
  get schemaGeneration() {
    var _a;
    return (_a = this.dataElement) == null ? void 0 : _a.schemaGeneration;
  }
  get parsedUrl() {
    const e5 = this.layerUrl;
    return e5 ? j3(e5) : null;
  }
  get featureServiceUrl() {
    const e5 = this.parsedUrl && m3(this.parsedUrl.path);
    return r(e5) ? e5.url.path : null;
  }
  get networkServiceUrl() {
    return this.featureServiceUrl ? this.featureServiceUrl.replace(/\/FeatureServer/i, "/UtilityNetworkServer") : null;
  }
  get layerId() {
    const e5 = this.parsedUrl && m3(this.parsedUrl.path);
    return r(e5) ? e5.sublayer : null;
  }
  async load(e5) {
    return this.addResolvingPromise(this._fetchDataElement(this.featureServiceUrl, this.layerId.toString(), e5)), this.addResolvingPromise(this._fetchLayerMetaData(this.layerUrl, e5)), this;
  }
  getLayerIdBySourceId(e5) {
    if (this.dataElement) {
      const r5 = this.dataElement.domainNetworks;
      for (const t5 of r5) {
        for (const r6 of t5.edgeSources ? t5.edgeSources : [])
          if (r6.sourceId === e5)
            return r6.layerId;
        for (const r6 of t5.junctionSources ? t5.junctionSources : [])
          if (r6.sourceId === e5)
            return r6.layerId;
      }
      return null;
    }
    return null;
  }
  async _fetchLayerMetaData(e5, t5) {
    const o6 = await U(e5, { responseType: "json", query: { f: "json" }, ...t5 });
    this.sourceJSON = o6.data, this.read(o6.data, { origin: "service" });
  }
  async _fetchDataElement(e5, t5, o6) {
    if (this.dataElement)
      return;
    const s15 = await U(`${e5}/queryDataElements`, { responseType: "json", query: { layers: JSON.stringify([t5]), f: "json" }, ...o6 }).then((e6) => {
      var _a;
      return (_a = e6.data.layerDataElements) == null ? void 0 : _a[0];
    });
    s15 && this.read(s15, { origin: "service" });
  }
};
e([d({ type: String, nonNullable: true, json: { origins: { "web-map": { read: true, write: { isRequired: true } } }, read: false } })], m6.prototype, "id", void 0), e([d({ type: String, nonNullable: true, json: { origins: { "web-map": { read: true, write: { isRequired: true } } }, read: false } })], m6.prototype, "title", void 0), e([d({ type: String, nonNullable: true, json: { origins: { "web-map": { read: { source: "url" }, write: { target: "url", isRequired: true } } }, read: false } })], m6.prototype, "layerUrl", void 0), e([d({ type: Object, json: { origins: { service: { read: true } }, read: false } })], m6.prototype, "dataElement", void 0), e([d({ type: M, json: { origins: { service: { read: { source: "extent" } } }, read: false } })], m6.prototype, "fullExtent", void 0), e([d({ type: k, json: { origins: { service: { read: { source: "extent.spatialReference" } } }, read: false } })], m6.prototype, "spatialReference", void 0), e([d({ type: ["utility", "trace"], readOnly: true, json: { read: false, write: false } })], m6.prototype, "type", void 0), e([d({ readOnly: true })], m6.prototype, "datasetName", null), e([d({ readOnly: true })], m6.prototype, "owner", null), e([d({ readOnly: true })], m6.prototype, "schemaGeneration", null), e([d({ readOnly: true })], m6.prototype, "parsedUrl", null), e([d({ readOnly: true })], m6.prototype, "featureServiceUrl", null), e([d({ readOnly: true })], m6.prototype, "networkServiceUrl", null), e([d({ readOnly: true })], m6.prototype, "layerId", null), e([d()], m6.prototype, "sourceJSON", void 0), m6 = e([n("esri.networks.Network")], m6);
var h2 = m6;

// node_modules/@arcgis/core/networks/support/typeUtils.js
var t2;
!function(n11) {
  n11[n11.RTJunctionJunctionConnectivity = 1] = "RTJunctionJunctionConnectivity", n11[n11.RTContainment = 2] = "RTContainment", n11[n11.RTAttachment = 3] = "RTAttachment", n11[n11.RTJunctionEdgeConnectivity = 4] = "RTJunctionEdgeConnectivity", n11[n11.RTEdgeJunctionEdgeConnectivity = 5] = "RTEdgeJunctionEdgeConnectivity";
}(t2 || (t2 = {}));
var o3 = new s({ connected: "connected", upstream: "upstream", downstream: "downstream", shortestPath: "shortest-path", subnetwork: "subnetwork", subnetworkController: "subnetwork-controller", loops: "loops", isolation: "isolation" });
var e3 = new s({ connectivity: "connectivity", attachment: "attachment", containment: "containment", junctionEdgeFromConnectivity: "junction-edge-from-connectivity", junctionMidspanConnectivity: "junction-midspan-connectivity", junctionEdgeToConnectivity: "junction-edge-to-connectivity" });

// node_modules/@arcgis/core/networks/RulesTable.js
var a3 = class extends u(m4) {
  constructor(e5) {
    super(e5), this.request = U;
  }
  initialize() {
  }
  async load(e5) {
    const t5 = this.layer.load(e5).then(() => this._initializeRulesTable());
    return this.addResolvingPromise(t5), this;
  }
  getFeatureSQL(e5, t5) {
    const s15 = e5.layerId.toString(), o6 = e5.fieldsIndex.normalizeFieldName("assetGroup"), r5 = e5.fieldsIndex.normalizeFieldName("assetType"), n11 = t5.attributes[o6], i18 = t5.attributes[r5], a16 = this.rulesHash[s15];
    if (a16) {
      const e6 = a16.assetGroupHash[n11];
      if (e6) {
        const t6 = e6.assetTypeHash[i18];
        return t6 || null;
      }
    }
    return null;
  }
  async _initializeRulesTable() {
    var _a, _b, _c, _d, _e2, _f, _g, _h, _i, _j;
    const e5 = {};
    let t5;
    !function(e6) {
      e6[e6.from = 0] = "from", e6[e6.to = 1] = "to", e6[e6.via = 2] = "via";
    }(t5 || (t5 = {}));
    const s15 = [{ networkSourceId: "fromNetworkSource", assetGroupId: "fromAssetGroup", assetTypeId: "fromAssetType" }, { networkSourceId: "toNetworkSource", assetGroupId: "toAssetGroup", assetTypeId: "toAssetType" }, { networkSourceId: "viaNetworkSource", assetGroupId: "viaAssetGroup", assetTypeId: "viaAssetType" }];
    for (const o6 of this.rules) {
      if (o6.ruleType !== t2.RTJunctionJunctionConnectivity && o6.ruleType !== t2.RTJunctionEdgeConnectivity && o6.ruleType !== t2.RTEdgeJunctionEdgeConnectivity)
        continue;
      let r5 = [[t5.from, t5.to], [t5.to, t5.from]];
      o6.ruleType === t2.RTEdgeJunctionEdgeConnectivity && (r5 = [[t5.from, t5.via], [t5.via, t5.from], [t5.to, t5.via], [t5.via, t5.to]]);
      for (const n11 of r5) {
        const r6 = n11.shift(), a16 = n11.shift();
        let c19 = false;
        switch (o6.ruleType) {
          case t2.RTEdgeJunctionEdgeConnectivity:
            c19 = r6 === t5.from || r6 === t5.to;
            break;
          case t2.RTJunctionEdgeConnectivity:
            c19 = r6 === t5.to;
        }
        const p12 = s15[r6], u6 = o6[p12.networkSourceId].layerId.toString(), d6 = (_b = (_a = o6[p12.assetGroupId]) == null ? void 0 : _a.assetGroupCode) == null ? void 0 : _b.toString(), y6 = (_d = (_c = o6[p12.assetTypeId]) == null ? void 0 : _c.assetTypeCode) == null ? void 0 : _d.toString(), l9 = s15[a16], f3 = o6[l9.networkSourceId].layerId.toString(), m11 = (_f = (_e2 = o6[l9.assetGroupId]) == null ? void 0 : _e2.assetGroupCode) == null ? void 0 : _f.toString(), T = o6[l9.assetTypeId], h5 = (_g = T == null ? void 0 : T.assetTypeCode) == null ? void 0 : _g.toString(), v2 = e5[u6] ? e5[u6] : { assetGroupHash: {} };
        if (!(d6 && y6 && m11 && h5))
          continue;
        const S4 = v2.assetGroupHash[d6] ? v2.assetGroupHash[d6] : { assetTypeHash: {} }, I = S4.assetTypeHash[y6] ? S4.assetTypeHash[y6] : {};
        if (I[f3] = I[f3] ? I[f3] : {}, c19) {
          I[u6] = I[u6] ? I[u6] : {};
          const e6 = `(assetgroup = ${d6} AND assettype = ${y6})`;
          I[u6].anyVertex = I[u6].anyVertex ? `${I[u6].anyVertex}` : `${e6}`, "esriNECPEndVertex" === T.connectivityPolicy && (I[u6].endVertex = ((_h = I[u6]) == null ? void 0 : _h.endVertex) ? `${I[u6].endVertex}` : `${e6}`);
        }
        const g3 = `(assetgroup = ${m11} AND assettype = ${h5})`;
        I[f3].anyVertex = ((_i = I[f3]) == null ? void 0 : _i.anyVertex) ? `${I[f3].anyVertex} OR ${g3}` : `${g3}`, "esriNECPEndVertex" === T.connectivityPolicy && (I[f3].endVertex = ((_j = I[f3]) == null ? void 0 : _j.endVertex) ? `${I[f3].endVertex} OR ${g3}` : `${g3}`), S4.assetTypeHash[y6] = I, v2.assetGroupHash[d6] = S4, e5[u6] = v2;
      }
    }
    this.rulesHash = e5;
  }
};
e([d({ constructOnly: true })], a3.prototype, "layer", void 0), e([d({ constructOnly: true })], a3.prototype, "rules", void 0), e([d()], a3.prototype, "rulesHash", void 0), e([d({ constructOnly: true })], a3.prototype, "request", void 0), a3 = e([n("esri.networks.RulesTable")], a3);
var c2 = a3;

// node_modules/@arcgis/core/networks/support/TraceConfiguration.js
var s6 = class extends l {
  constructor(t5) {
    super(t5), this.conditionBarriers = [], this.outputConditions = [], this.functions = [], this.functionBarriers = [], this.traversabilityScope = null, this.shortestPathNetworkAttributeName = null, this.includeBarriers = null, this.validateConsistency = null, this.ignoreBarriersAtStartingPoints = null;
  }
};
e([d({ type: [Object], json: { write: true } })], s6.prototype, "conditionBarriers", void 0), e([d({ type: [Object], json: { write: true } })], s6.prototype, "outputConditions", void 0), e([d({ type: [Object], json: { write: true } })], s6.prototype, "functions", void 0), e([d({ type: [Object], json: { write: true } })], s6.prototype, "functionBarriers", void 0), e([d({ type: ["junctions", "edges", "junctionsAndEdges"], json: { write: true } })], s6.prototype, "traversabilityScope", void 0), e([d({ type: String, json: { write: true } })], s6.prototype, "shortestPathNetworkAttributeName", void 0), e([d({ type: Boolean, json: { write: true } })], s6.prototype, "includeBarriers", void 0), e([d({ type: Boolean, json: { write: true } })], s6.prototype, "validateConsistency", void 0), e([d({ type: Boolean, json: { write: true } })], s6.prototype, "ignoreBarriersAtStartingPoints", void 0), s6 = e([n("esri.networks.support.TraceConfiguration")], s6);
var i5 = s6;

// node_modules/@arcgis/core/networks/support/UNTraceConfiguration.js
var i6 = class extends i5 {
  constructor(t5) {
    super(t5), this.filterBarriers = [], this.domainNetworkName = null, this.filterBitsetNetworkAttributeName = null, this.filterFunctionBarriers = [], this.filterScope = null, this.includeContainers = null, this.includeContent = null, this.includeIsolated = null, this.includeStructures = null, this.includeUpToFirstSpatialContainer = null, this.nearestNeighbor = null, this.outputFilterCategories = [], this.outputFilters = [], this.propagators = [], this.subnetworkName = null, this.targetTierName = null, this.tierName = null, this.validateLocatability = null;
  }
};
e([d({ type: [Object], json: { write: true } })], i6.prototype, "filterBarriers", void 0), e([d({ type: String, json: { write: true } })], i6.prototype, "domainNetworkName", void 0), e([d({ type: String, json: { write: true } })], i6.prototype, "filterBitsetNetworkAttributeName", void 0), e([d({ type: [Object], json: { write: true } })], i6.prototype, "filterFunctionBarriers", void 0), e([d({ type: ["junctions", "edges", "junctionsAndEdges"], json: { write: true } })], i6.prototype, "filterScope", void 0), e([d({ type: Boolean, json: { write: true } })], i6.prototype, "includeContainers", void 0), e([d({ type: Boolean, json: { write: true } })], i6.prototype, "includeContent", void 0), e([d({ type: Boolean, json: { write: true } })], i6.prototype, "includeIsolated", void 0), e([d({ type: Boolean, json: { write: true } })], i6.prototype, "includeStructures", void 0), e([d({ type: Boolean, json: { write: true } })], i6.prototype, "includeUpToFirstSpatialContainer", void 0), e([d({ type: Object, json: { write: true } })], i6.prototype, "nearestNeighbor", void 0), e([d({ type: [Object], json: { write: true } })], i6.prototype, "outputFilterCategories", void 0), e([d({ type: [Object], json: { write: true } })], i6.prototype, "outputFilters", void 0), e([d({ type: [Object], json: { write: true } })], i6.prototype, "propagators", void 0), e([d({ type: String, json: { write: true } })], i6.prototype, "subnetworkName", void 0), e([d({ type: String, json: { write: true } })], i6.prototype, "targetTierName", void 0), e([d({ type: String, json: { write: true } })], i6.prototype, "tierName", void 0), e([d({ type: Boolean, json: { write: true } })], i6.prototype, "validateLocatability", void 0), i6 = e([n("esri.networks.support.UNTraceConfiguration")], i6);
var s7 = i6;

// node_modules/@arcgis/core/networks/support/NamedTraceConfiguration.js
var p = class extends S2 {
  constructor(r5) {
    super(r5), this.globalId = null, this.title = null, this.traceConfiguration = null, this.creationDate = null, this.creator = null, this.description = null, this.minStartingPoints = null, this.resultTypes = [], this.tags = [], this.traceType = null;
  }
  readTraceConfiguration(r5, e5) {
    return void 0 !== r5.tierName ? s7.fromJSON(r5) : i5.fromJSON(r5);
  }
};
e([d({ type: String, nonNullable: true, json: { origins: { "web-map": { read: { source: "id" }, write: { target: "id", isRequired: true } }, service: { read: { source: "globalId" } } }, read: false } })], p.prototype, "globalId", void 0), e([d({ type: String, nonNullable: true, json: { origins: { "web-map": { read: { source: "title" }, write: { target: "title", isRequired: true } }, service: { read: { source: "name" } } }, read: false } })], p.prototype, "title", void 0), e([d({ type: i5, json: { origins: { service: { read: true } }, read: false } })], p.prototype, "traceConfiguration", void 0), e([o2("service", "traceConfiguration")], p.prototype, "readTraceConfiguration", null), e([d({ type: Date, json: { origins: { service: { read: true } }, read: false } })], p.prototype, "creationDate", void 0), e([d({ type: String, json: { origins: { service: { read: true } }, read: false } })], p.prototype, "creator", void 0), e([d({ type: String, json: { origins: { service: { read: true } }, read: false } })], p.prototype, "description", void 0), e([d({ type: ["none", "one", "many"], json: { origins: { service: { read: { source: "minNumStartingPoints" } } }, read: false } })], p.prototype, "minStartingPoints", void 0), e([d({ type: [Object], json: { origins: { service: { read: true } }, read: false } })], p.prototype, "resultTypes", void 0), e([d({ type: [String], json: { origins: { service: { read: true } }, read: false } })], p.prototype, "tags", void 0), e([d({ type: o3.apiValues, json: { type: o3.jsonValues, origins: { service: { read: o3.read } }, read: false } })], p.prototype, "traceType", void 0), p = e([n("esri.networks.support.NamedTraceConfiguration")], p);
var c3 = p;

// node_modules/@arcgis/core/networks/support/Terminal.js
var s8 = class extends l {
  constructor(r5) {
    super(r5), this.id = null, this.name = null;
  }
};
e([d({ type: Number, json: { read: { source: "terminalId" }, write: { target: "terminalId" } } })], s8.prototype, "id", void 0), e([d({ type: String, json: { read: { source: "terminalName" }, write: { target: "terminalName" } } })], s8.prototype, "name", void 0), e([d({ type: Boolean, json: { write: true } })], s8.prototype, "isUpstreamTerminal", void 0), s8 = e([n("esri.networks.support.Terminal")], s8);
var p2 = s8;

// node_modules/@arcgis/core/networks/support/TerminalConfiguration.js
var a4 = new s({ esriUNTMBidirectional: "bidirectional", esriUNTMDirectional: "directional" });
var n4 = class extends l {
  constructor(r5) {
    super(r5), this.defaultConfiguration = null, this.id = null, this.name = null, this.terminals = [], this.traversabilityModel = null;
  }
};
e([d({ type: String, json: { write: true } })], n4.prototype, "defaultConfiguration", void 0), e([d({ type: Number, json: { read: { source: "terminalConfigurationId" }, write: { target: "terminalConfigurationId" } } })], n4.prototype, "id", void 0), e([d({ type: String, json: { read: { source: "terminalConfigurationName" }, write: { target: "terminalConfigurationName" } } })], n4.prototype, "name", void 0), e([d({ type: [p2], json: { write: true } })], n4.prototype, "terminals", void 0), e([d({ type: a4.apiValues, json: { type: a4.jsonValues, read: a4.read, write: a4.write } })], n4.prototype, "traversabilityModel", void 0), n4 = e([n("esri.networks.support.TerminalConfiguration")], n4);
var p3 = n4;

// node_modules/@arcgis/core/networks/UtilityNetwork.js
var c4 = class extends h2 {
  constructor(e5) {
    super(e5), this.sharedNamedTraceConfigurations = [], this.type = "utility";
  }
  get serviceTerritoryFeatureLayerId() {
    var _a;
    return (_a = this.dataElement) == null ? void 0 : _a.serviceTerritoryFeatureLayerId;
  }
  get systemLayers() {
    var _a, _b;
    return { rulesTableId: (_a = this.sourceJSON) == null ? void 0 : _a.systemLayers.rulesTableId, rulesTableUrl: this.sourceJSON ? `${this.featureServiceUrl}/${this.rulesTableId}` : null, subnetworksTableId: (_b = this.sourceJSON) == null ? void 0 : _b.systemLayers.subnetworksTableId, subnetworksTableUrl: this.sourceJSON ? `${this.featureServiceUrl}/${this.subnetworksTableId}` : null };
  }
  get rulesTableId() {
    var _a;
    return (_a = this.sourceJSON) == null ? void 0 : _a.systemLayers.rulesTableId;
  }
  get rulesTableUrl() {
    return this.sourceJSON ? `${this.featureServiceUrl}/${this.rulesTableId}` : null;
  }
  get subnetworksTableId() {
    var _a;
    return (_a = this.sourceJSON) == null ? void 0 : _a.systemLayers.subnetworksTableId;
  }
  get subnetworksTableUrl() {
    return this.sourceJSON ? `${this.featureServiceUrl}/${this.subnetworksTableId}` : null;
  }
  get terminalConfigurations() {
    var _a;
    return ((_a = this.dataElement) == null ? void 0 : _a.terminalConfigurations.map((e5) => p3.fromJSON(e5))) || [];
  }
  get domainNetworkNames() {
    var _a;
    return ((_a = this.dataElement) == null ? void 0 : _a.domainNetworks.map((e5) => e5.domainNetworkName)) || [];
  }
  get _utilityLayerList() {
    const e5 = /* @__PURE__ */ new Set();
    return this.dataElement.domainNetworks.map((t5) => {
      t5.edgeSources.map((t6) => {
        e5.add(t6.layerId);
      }), t5.junctionSources.map((t6) => {
        e5.add(t6.layerId);
      });
    }), e5;
  }
  async load(e5) {
    return this.addResolvingPromise(super.load(e5)), this.addResolvingPromise(this._loadNamedTraceConfigurationsFromNetwork(e5)), this;
  }
  getTerminalConfiguration(e5) {
    var _a, _b, _c, _d;
    let t5 = null, r5 = null;
    const s15 = e5.layer;
    let a16 = null;
    if ("feature" !== (s15 == null ? void 0 : s15.type))
      return null;
    if (a16 = s15.layerId, null === a16)
      return null;
    const n11 = e5.attributes;
    if (null == n11)
      return null;
    for (const l9 of Object.keys(n11))
      "ASSETGROUP" === l9.toUpperCase() && (t5 = e5.getAttribute(l9)), "ASSETTYPE" === l9.toUpperCase() && (r5 = e5.getAttribute(l9));
    if (!this.dataElement)
      return null;
    let o6 = null;
    const i18 = this.dataElement.domainNetworks;
    for (const l9 of i18) {
      const e6 = (_a = l9.junctionSources) == null ? void 0 : _a.find((e7) => e7.layerId === a16);
      if (e6) {
        const s16 = (_b = e6.assetGroups) == null ? void 0 : _b.find((e7) => e7.assetGroupCode === t5);
        if (s16) {
          const e7 = (_c = s16.assetTypes) == null ? void 0 : _c.find((e8) => e8.assetTypeCode === r5);
          if (e7) {
            o6 = e7.terminalConfigurationId;
            break;
          }
        }
      }
    }
    if (null != o6) {
      const e6 = (_d = this.dataElement.terminalConfigurations) == null ? void 0 : _d.find((e7) => e7.terminalConfigurationId === o6);
      return e6 ? p3.fromJSON(e6) : null;
    }
    return null;
  }
  getTierNames(e5) {
    var _a;
    const t5 = (_a = this.dataElement) == null ? void 0 : _a.domainNetworks.find((t6) => t6.domainNetworkName === e5);
    return (t5 == null ? void 0 : t5.tiers.map((e6) => e6.name)) || [];
  }
  async getRulesTable() {
    return this._createRulesTable();
  }
  isUtilityLayer(e5) {
    return this._utilityLayerList.has(e5.layerId);
  }
  async _loadNamedTraceConfigurationsFromNetwork(e5) {
    var _a;
    if (0 === ((_a = this.sharedNamedTraceConfigurations) == null ? void 0 : _a.length))
      return;
    const t5 = this.sharedNamedTraceConfigurations.map((e6) => e6.globalId), r5 = await this._fetchTraceConfigData(this.networkServiceUrl, t5, e5);
    for (const s15 of this.sharedNamedTraceConfigurations) {
      const e6 = r5 == null ? void 0 : r5.find((e7) => e7.globalId === s15.globalId);
      e6 && s15.read(e6, { origin: "service" });
    }
  }
  async _createRulesTable() {
    var _a;
    const e5 = new Ke({ url: this.rulesTableUrl });
    await e5.load();
    const t5 = (_a = this.dataElement) == null ? void 0 : _a.domainNetworks;
    if (!t5)
      return null;
    const r5 = t5.flatMap((e6) => [...e6.edgeSources, ...e6.junctionSources]), s15 = (await this._queryRulesTable(e5)).map((t6) => this._hydrateRuleInfo(e5, r5, t6));
    return new c2({ layer: e5, rules: s15 });
  }
  async _queryRulesTable(e5) {
    const t5 = new b({ where: "1=1", outFields: ["*"] });
    return (await t(e5, t5)).features;
  }
  _hydrateRuleInfo(e5, t5, r5) {
    const s15 = e5.fieldsIndex.get("RULETYPE"), a16 = e5.fieldsIndex.get("CREATIONDATE"), n11 = e5.fieldsIndex.get("FROMNETWORKSOURCEID"), o6 = e5.fieldsIndex.get("FROMASSETGROUP"), i18 = e5.fieldsIndex.get("FROMASSETTYPE"), l9 = e5.fieldsIndex.get("FROMTERMINALID"), u6 = e5.fieldsIndex.get("TONETWORKSOURCEID"), m11 = e5.fieldsIndex.get("TOASSETGROUP"), c19 = e5.fieldsIndex.get("TOASSETTYPE"), f3 = e5.fieldsIndex.get("TOTERMINALID"), p12 = e5.fieldsIndex.get("VIANETWORKSOURCEID"), y6 = e5.fieldsIndex.get("VIAASSETGROUP"), T = e5.fieldsIndex.get("VIAASSETTYPE"), I = e5.fieldsIndex.get("VIATERMINALID"), g3 = r5.attributes[s15.name], b4 = new Date(r5.attributes[a16.name]), h5 = [{ networkSourceId: r5.attributes[n11.name], assetGroupId: r5.attributes[o6.name], assetTypeId: r5.attributes[i18.name], terminalId: r5.attributes[l9.name] }, { networkSourceId: r5.attributes[u6.name], assetGroupId: r5.attributes[m11.name], assetTypeId: r5.attributes[c19.name], terminalId: r5.attributes[f3.name] }, { networkSourceId: r5.attributes[p12.name], assetGroupId: r5.attributes[y6.name], assetTypeId: r5.attributes[T.name], terminalId: r5.attributes[I.name] }];
    let S4;
    !function(e6) {
      e6[e6.from = 0] = "from", e6[e6.to = 1] = "to", e6[e6.via = 2] = "via";
    }(S4 || (S4 = {}));
    const N = { ruleType: g3, creationDate: b4 };
    for (const w of [S4.from, S4.to, S4.via]) {
      if (g3 !== t2.RTEdgeJunctionEdgeConnectivity && w === S4.via)
        continue;
      const e6 = h5[w], r6 = t5.find((t6) => t6.sourceId === e6.networkSourceId), s16 = r6 == null ? void 0 : r6.assetGroups.find((t6) => t6.assetGroupCode === e6.assetGroupId), a17 = s16 == null ? void 0 : s16.assetTypes.find((t6) => t6.assetTypeCode === e6.assetTypeId);
      let n12 = this._getTerminal(g3, a17, e6);
      g3 !== t2.RTContainment && g3 !== t2.RTAttachment || (n12 = null);
      let o7 = "";
      switch (w) {
        case S4.from:
          o7 = "from";
          break;
        case S4.to:
          o7 = "to";
          break;
        case S4.via:
          o7 = "via";
      }
      N[`${o7}NetworkSource`] = r6, N[`${o7}AssetGroup`] = s16, N[`${o7}AssetType`] = a17, N[`${o7}Terminal`] = n12;
    }
    return N;
  }
  _getTerminal(e5, t5, r5) {
    var _a, _b;
    if (e5 === t2.RTAttachment || e5 === t2.RTContainment)
      return null;
    const s15 = t5 == null ? void 0 : t5.terminalConfigurationId, a16 = (_a = this.terminalConfigurations) == null ? void 0 : _a.find((e6) => e6.id === s15);
    return (_b = a16 == null ? void 0 : a16.terminals) == null ? void 0 : _b.find((e6) => e6.id === r5.terminalId);
  }
  _fetchTraceConfigData(e5, r5, s15) {
    return U(`${e5}/traceConfigurations/query`, { responseType: "json", query: { globalIds: JSON.stringify(r5), f: "json" }, ...s15 }).then((e6) => e6.data.traceConfigurations);
  }
};
e([d({ type: [c3], json: { origins: { "web-map": { read: { source: "traceConfigurations" }, write: { target: "traceConfigurations" } }, service: { read: { source: "traceConfigurations" } } }, read: false } })], c4.prototype, "sharedNamedTraceConfigurations", void 0), e([d({ type: ["utility"], readOnly: true, json: { read: false, write: false } })], c4.prototype, "type", void 0), e([d({ readOnly: true })], c4.prototype, "serviceTerritoryFeatureLayerId", null), e([d({ readOnly: true })], c4.prototype, "systemLayers", null), e([d({ readOnly: true })], c4.prototype, "rulesTableId", null), e([d({ readOnly: true })], c4.prototype, "rulesTableUrl", null), e([d({ readOnly: true })], c4.prototype, "subnetworksTableId", null), e([d({ readOnly: true })], c4.prototype, "subnetworksTableUrl", null), e([d({ readOnly: true })], c4.prototype, "terminalConfigurations", null), e([d({ readOnly: true })], c4.prototype, "domainNetworkNames", null), c4 = e([n("esri.networks.UtilityNetwork")], c4);
var f2 = c4;

// node_modules/@arcgis/core/layers/support/FacilityLayerInfo.js
var s9 = class extends l {
  constructor(r5) {
    super(r5), this.facilityIdField = null, this.layerId = null, this.nameField = null, this.siteIdField = null, this.sublayerId = null;
  }
};
e([d({ type: String, json: { write: true } })], s9.prototype, "facilityIdField", void 0), e([d({ type: String, json: { write: true } })], s9.prototype, "layerId", void 0), e([d({ type: String, json: { write: true } })], s9.prototype, "nameField", void 0), e([d({ type: String, json: { write: true } })], s9.prototype, "siteIdField", void 0), e([d({ type: Number, json: { read: { source: "subLayerId" }, write: { target: "subLayerId" }, origins: { "web-scene": { read: false, write: false } } } })], s9.prototype, "sublayerId", void 0), s9 = e([n("esri.layers.support.FacilityLayerInfo")], s9);
var i7 = s9;

// node_modules/@arcgis/core/layers/support/LevelLayerInfo.js
var i8 = class extends l {
  constructor(e5) {
    super(e5), this.facilityIdField = null, this.layerId = null, this.levelIdField = null, this.levelNumberField = null, this.longNameField = null, this.shortNameField = null, this.sublayerId = null, this.verticalOrderField = null;
  }
};
e([d({ type: String, json: { write: true } })], i8.prototype, "facilityIdField", void 0), e([d({ type: String, json: { write: true } })], i8.prototype, "layerId", void 0), e([d({ type: String, json: { write: true } })], i8.prototype, "levelIdField", void 0), e([d({ type: String, json: { write: true } })], i8.prototype, "levelNumberField", void 0), e([d({ type: String, json: { write: true } })], i8.prototype, "longNameField", void 0), e([d({ type: String, json: { write: true } })], i8.prototype, "shortNameField", void 0), e([d({ type: Number, json: { read: { source: "subLayerId" }, write: { target: "subLayerId" }, origins: { "web-scene": { read: false, write: false } } } })], i8.prototype, "sublayerId", void 0), e([d({ type: String, json: { write: true } })], i8.prototype, "verticalOrderField", void 0), i8 = e([n("esri.layers.support.LevelLayerInfo")], i8);
var s10 = i8;

// node_modules/@arcgis/core/layers/support/SiteLayerInfo.js
var s11 = class extends l {
  constructor(r5) {
    super(r5), this.layerId = null, this.nameField = null, this.siteIdField = null, this.sublayerId = null;
  }
};
e([d({ type: String, json: { write: true } })], s11.prototype, "layerId", void 0), e([d({ type: String, json: { write: true } })], s11.prototype, "nameField", void 0), e([d({ type: String, json: { write: true } })], s11.prototype, "siteIdField", void 0), e([d({ type: Number, json: { read: { source: "subLayerId" }, write: { target: "subLayerId" }, origins: { "web-scene": { read: false, write: false } } } })], s11.prototype, "sublayerId", void 0), s11 = e([n("esri.layers.support.SiteLayerInfo")], s11);
var i9 = s11;

// node_modules/@arcgis/core/support/MapFloorInfo.js
var a5 = class extends l {
  constructor(r5) {
    super(r5), this.levelLayer = null, this.facilityLayer = null, this.siteLayer = null;
  }
};
e([d({ type: s10, json: { write: true } })], a5.prototype, "levelLayer", void 0), e([d({ type: i7, json: { write: true } })], a5.prototype, "facilityLayer", void 0), e([d({ type: i9, json: { write: true } })], a5.prototype, "siteLayer", void 0), a5 = e([n("esri.support.MapFloorInfo")], a5);
var l5 = a5;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/ExpressionInfo.js
var p4 = class extends l4(l) {
  constructor(r5) {
    super(r5), this.expression = null, this.returnType = "string", this.title = null;
  }
};
e([d({ type: String, json: { write: { isRequired: true } } })], p4.prototype, "expression", void 0), e([d({ type: ["number", "string"], json: { write: true } })], p4.prototype, "returnType", void 0), e([d({ type: String, json: { write: true } })], p4.prototype, "title", void 0), p4 = e([n("esri.webdoc.geotriggersInfo.ExpressionInfo")], p4);
var i10 = p4;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/DeviceLocationFeed.js
var c5 = new s({ deviceLocation: "device-location" });
var a6 = class extends l4(l) {
  constructor(o6) {
    super(o6), this.filterExpression = null, this.type = "device-location";
  }
};
e([d({ type: i10, json: { write: true } })], a6.prototype, "filterExpression", void 0), e([d({ type: c5.apiValues, readOnly: true, json: { type: c5.jsonValues, read: c5.read, write: c5.write } })], a6.prototype, "type", void 0), a6 = e([n("esri.webdoc.geotriggersInfo.DeviceLocationFeed")], a6);
var n5 = a6;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/FeatureFilter.js
var c6 = class extends l4(l) {
  constructor(r5) {
    super(r5), this.geometry = null, this.where = null;
  }
};
e([d({ types: i, json: { read: d3, write: true } })], c6.prototype, "geometry", void 0), e([d({ type: String, json: { write: true } })], c6.prototype, "where", void 0), c6 = e([n("esri.webdoc.geotriggersInfo.FeatureFilter")], c6);
var m7 = c6;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/FeatureLayerSource.js
var p5 = class extends l4(l) {
  constructor(r5) {
    super(r5), this.layerId = null, this.layerUrl = null, this.type = "feature-layer";
  }
};
e([d({ type: String, json: { write: { overridePolicy() {
  return { isRequired: null === this.layerUrl };
} } } })], p5.prototype, "layerId", void 0), e([d({ type: String, json: { write: { overridePolicy() {
  return { isRequired: null === this.layerId };
} } } })], p5.prototype, "layerUrl", void 0), e([r3({ featureLayer: "feature-layer" }, { readOnly: true })], p5.prototype, "type", void 0), p5 = e([n("esri.webdoc.geotriggersInfo.FeatureLayerSource")], p5);
var a7 = p5;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/FeatureFenceParameters.js
var a8 = class extends l4(l) {
  constructor(r5) {
    super(r5), this.fenceSource = null, this.filter = null, this.bufferDistance = null, this.type = "features";
  }
};
e([d({ type: a7, json: { write: { isRequired: true } } })], a8.prototype, "fenceSource", void 0), e([d({ type: m7, json: { write: true } })], a8.prototype, "filter", void 0), e([d({ type: Number, json: { write: true } })], a8.prototype, "bufferDistance", void 0), e([r3({ features: "features" }, { readOnly: true })], a8.prototype, "type", void 0), a8 = e([n("esri.webdoc.geotriggersInfo.FeatureFenceParameters")], a8);
var u3 = a8;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/Geotrigger.js
var c7 = class extends l4(l) {
  constructor(r5) {
    super(r5), this.type = "fence";
  }
};
e([r3({ fence: "fence" }, { readOnly: true })], c7.prototype, "type", void 0), c7 = e([n("esri.webdoc.geotriggersInfo.Geotrigger")], c7);
var p6 = c7;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/GeotriggerNotificationOptions.js
var i11 = class extends l4(l) {
  constructor(o6) {
    super(o6), this.expressionInfo = null, this.requestedActions = null;
  }
};
e([d({ type: i10, json: { write: true } })], i11.prototype, "expressionInfo", void 0), e([d({ type: [String], json: { write: true } })], i11.prototype, "requestedActions", void 0), i11 = e([n("esri.webdoc.geotriggersInfo.GeotriggerNotificationOptions")], i11);
var c8 = i11;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/support/typeUtils.js
var t3 = new s({ enterContainsAndExitDoesNotContain: "enter-contains-and-exit-does-not-contain", enterContainsAndExitDoesNotIntersect: "enter-contains-and-exit-does-not-intersect", enterIntersectsAndExitDoesNotIntersect: "enter-intersects-and-exit-does-not-intersect" });
var n6 = new s({ useGeometry: "use-geometry", useGeometryWithAccuracy: "use-geometry-with-accuracy" });
var o4 = new s({ enter: "enter", enterOrExit: "enter-or-exit", exit: "exit" });

// node_modules/@arcgis/core/webdoc/geotriggersInfo/FenceGeotrigger.js
var d4 = class extends p6 {
  constructor(e5) {
    super(e5), this.enterExitRule = "enter-contains-and-exit-does-not-intersect", this.feed = null, this.feedAccuracyMode = "use-geometry", this.fenceNotificationRule = null, this.fenceParameters = null, this.name = null, this.notificationOptions = null, this.type = "fence";
  }
};
e([r3(t3)], d4.prototype, "enterExitRule", void 0), e([d({ type: n5, json: { write: { isRequired: true } } })], d4.prototype, "feed", void 0), e([r3(n6)], d4.prototype, "feedAccuracyMode", void 0), e([d({ type: o4.apiValues, json: { type: o4.jsonValues, read: o4.read, write: { writer: o4.write, isRequired: true } } })], d4.prototype, "fenceNotificationRule", void 0), e([d({ type: u3, json: { write: { isRequired: true } } })], d4.prototype, "fenceParameters", void 0), e([d({ type: String, json: { write: true } })], d4.prototype, "name", void 0), e([d({ type: c8, json: { write: true } })], d4.prototype, "notificationOptions", void 0), e([r3({ fence: "fence" }, { readOnly: true })], d4.prototype, "type", void 0), d4 = e([n("esri.webdoc.geotriggersInfo.FenceGeotrigger")], d4);
var m8 = d4;

// node_modules/@arcgis/core/webdoc/geotriggersInfo/support/geotriggerTypes.js
var o5 = { base: p6, key: "type", typeMap: { fence: m8 } };

// node_modules/@arcgis/core/webdoc/GeotriggersInfo.js
var c9 = class extends l4(l) {
  constructor(r5) {
    super(r5), this.geotriggers = null;
  }
};
e([d({ types: [o5], json: { write: { isRequired: true } } })], c9.prototype, "geotriggers", void 0), c9 = e([n("esri.webdoc.GeotriggersInfo")], c9);
var i12 = c9;

// node_modules/@arcgis/core/webdoc/RangeInfo.js
var s12;
var a9 = s12 = class extends l {
  constructor(e5) {
    super(e5), this.activeRange = null, this.currentRangeExtent = null, this.fullRangeExtent = null;
  }
  clone() {
    return new s12(m({ activeRange: this.activeRange, currentRangeExtent: this.currentRangeExtent, fullRangeExtent: this.fullRangeExtent }));
  }
};
e([d({ type: String, nonNullable: true, json: { read: { source: "activeRangeName" }, write: { target: "activeRangeName", isRequired: true } } })], a9.prototype, "activeRange", void 0), e([d({ type: [Number], json: { write: true } })], a9.prototype, "currentRangeExtent", void 0), e([d({ type: [Number], json: { write: true } })], a9.prototype, "fullRangeExtent", void 0), a9 = s12 = e([n("esri.webdoc.RangeInfo")], a9);
var c10 = a9;

// node_modules/@arcgis/core/webdoc/widgets/FloorFilter.js
var s13;
var n7 = s13 = class extends l {
  constructor(e5) {
    super(e5), this.enabled = false, this.longNames = false, this.minimized = false, this.pinnedLevels = false, this.site = null, this.facility = null, this.level = null;
  }
  clone() {
    return new s13(m({ enabled: this.enabled, longNames: this.longNames, minimized: this.minimized, pinnedLevels: this.pinnedLevels, site: this.site, facility: this.facility, level: this.level }));
  }
};
e([d({ type: Boolean, json: { read: { source: "enabled" }, write: { target: "enabled" } } })], n7.prototype, "enabled", void 0), e([d({ type: Boolean, json: { read: { source: "longNames" }, write: { target: "longNames" } } })], n7.prototype, "longNames", void 0), e([d({ type: Boolean, json: { read: { source: "minimized" }, write: { target: "minimized" } } })], n7.prototype, "minimized", void 0), e([d({ type: Boolean, json: { read: { source: "pinnedLevels" }, write: { target: "pinnedLevels" } } })], n7.prototype, "pinnedLevels", void 0), e([d({ type: String, json: { read: { source: "site" }, write: { target: "site" } } })], n7.prototype, "site", void 0), e([d({ type: String, json: { read: { source: "facility" }, write: { target: "facility" } } })], n7.prototype, "facility", void 0), e([d({ type: String, json: { read: { source: "level" }, write: { target: "level" } } })], n7.prototype, "level", void 0), n7 = s13 = e([n("esri.webdoc.widgets.FloorFilter")], n7);
var l6 = n7;

// node_modules/@arcgis/core/webdoc/widgets/Range.js
var i13;
var n8 = new s({ slider: "slider", picker: "picker" });
var p7 = i13 = class extends l {
  constructor(e5) {
    super(e5), this.interactionMode = null, this.numStops = null, this.stopInterval = null;
  }
  clone() {
    return new i13({ interactionMode: this.interactionMode, numStops: this.numStops, stopInterval: this.stopInterval });
  }
};
e([d({ type: n8.apiValues, nonNullable: true, json: { type: n8.jsonValues, default: null, read: { reader: n8.read }, write: { isRequired: true, writer: n8.write } } })], p7.prototype, "interactionMode", void 0), e([d({ type: Number, json: { read: { source: "numberOfStops" }, write: { target: "numberOfStops", overridePolicy() {
  const e5 = null != this.stopInterval;
  return { enabled: !e5, isRequired: !e5 };
} } } })], p7.prototype, "numStops", void 0), e([d({ type: Number, json: { write: { overridePolicy() {
  return { isRequired: null == this.numStops };
} } } })], p7.prototype, "stopInterval", void 0), p7 = i13 = e([n("esri.webdoc.widgets.Range")], p7);
var a10 = p7;

// node_modules/@arcgis/core/webdoc/widgets/TimeSlider.js
var a11;
var c11 = a11 = class extends l {
  constructor(t5) {
    super(t5), this.currentTimeExtent = null, this.fullTimeExtent = null, this.loop = false, this.numStops = null, this.numThumbs = null, this.stopDelay = null, this.stopInterval = null, this.stops = null;
  }
  readCurrentTimeExtent(t5) {
    if (!t5)
      return;
    const r5 = null != t5[0] ? new Date(t5[0]) : null, o6 = null != t5[1] ? new Date(t5[1]) : null;
    return new y2({ start: r5, end: o6 });
  }
  writeCurrentTimeExtent(t5, e5, r5) {
    t5 && o(r5, [r(t5.start) ? t5.start.getTime() : null, r(t5.end) ? t5.end.getTime() : null], e5);
  }
  readFullTimeExtent(t5, r5) {
    const o6 = r5.properties;
    if (!o6)
      return;
    const s15 = null != o6.endTime ? new Date(o6.endTime) : null, n11 = null != o6.startTime ? new Date(o6.startTime) : null;
    return new y2({ start: n11, end: s15 });
  }
  writeFullTimeExtent(t5, e5) {
    if (!t5)
      return;
    const r5 = e5.properties = e5.properties || {}, o6 = t5.end, s15 = t5.start;
    o6 && (r5.endTime = r(o6) ? o6.getTime() : null), s15 && (r5.startTime = r(s15) ? s15.getTime() : null);
  }
  readStopInterval(t5, e5, o6) {
    return t5 ? l2.fromJSON({ value: t5.interval, unit: t5.units }, o6) : null;
  }
  writeStopInterval(t5, e5, r5, o6) {
    if (!t5)
      return;
    const s15 = t5.toJSON(o6);
    o(r5, { interval: s15.value, units: s15.unit }, e5);
  }
  readStops(t5) {
    return t5 && t5.length ? t5.map((t6) => new Date(t6)) : null;
  }
  writeStops(t5, e5, r5) {
    t5 && t5.length && o(r5, t5.map((t6) => t6.getTime()), e5);
  }
  clone() {
    return new a11(m({ currentTimeExtent: this.currentTimeExtent, fullTimeExtent: this.fullTimeExtent, loop: this.loop, numStops: this.numStops, numThumbs: this.numThumbs, stopDelay: this.stopDelay, stopInterval: this.stopInterval, stops: this.stops }));
  }
};
e([d({ type: y2, json: { read: { source: "properties.currentTimeExtent" }, write: { target: "properties.currentTimeExtent" } } })], c11.prototype, "currentTimeExtent", void 0), e([o2("currentTimeExtent")], c11.prototype, "readCurrentTimeExtent", null), e([r2("currentTimeExtent")], c11.prototype, "writeCurrentTimeExtent", null), e([d({ type: y2, json: { read: { source: ["properties.endTime", "properties.startTime"] }, write: { target: { "properties.endTime": { type: Number }, "properties.startTime": { type: Number } } } } })], c11.prototype, "fullTimeExtent", void 0), e([o2("fullTimeExtent")], c11.prototype, "readFullTimeExtent", null), e([r2("fullTimeExtent")], c11.prototype, "writeFullTimeExtent", null), e([d({ type: Boolean, nonNullable: true, json: { default: false, read: { source: "properties.loop" }, write: { target: "properties.loop" } } })], c11.prototype, "loop", void 0), e([d({ type: Number, json: { read: { source: "properties.numberOfStops" }, write: { target: "properties.numberOfStops", overridePolicy() {
  var _a;
  const t5 = !!this.stopInterval, e5 = !!((_a = this.stops) == null ? void 0 : _a.length), r5 = !(t5 || e5);
  return { enabled: r5, isRequired: r5 };
} } } })], c11.prototype, "numStops", void 0), e([d({ type: [1, 2], nonNullable: true, json: { read: { source: "properties.thumbCount" }, write: { target: "properties.thumbCount", isRequired: true } } })], c11.prototype, "numThumbs", void 0), e([d({ type: Number, nonNullable: true, json: { read: { source: "properties.thumbMovingRate" }, write: { target: "properties.thumbMovingRate", isRequired: true } } })], c11.prototype, "stopDelay", void 0), e([d({ type: l2, json: { read: { source: "properties.timeStopInterval" }, write: { target: "properties.timeStopInterval", overridePolicy() {
  var _a;
  const t5 = null != this.numStops, e5 = !!((_a = this.stops) == null ? void 0 : _a.length);
  return { enabled: !e5, isRequired: !(t5 || e5) };
} } } })], c11.prototype, "stopInterval", void 0), e([o2("stopInterval")], c11.prototype, "readStopInterval", null), e([r2("stopInterval")], c11.prototype, "writeStopInterval", null), e([d({ type: [Date], json: { read: { source: "properties.stops" }, write: { target: "properties.stops", overridePolicy() {
  return { isRequired: null == this.numStops && !this.stopInterval };
} } } })], c11.prototype, "stops", void 0), e([o2("stops")], c11.prototype, "readStops", null), e([r2("stops")], c11.prototype, "writeStops", null), c11 = a11 = e([n("esri.webdoc.widgets.TimeSlider")], c11);
var d5 = c11;

// node_modules/@arcgis/core/webdoc/Widgets.js
var m9;
var c12 = m9 = class extends l {
  constructor(r5) {
    super(r5), this.range = null, this.timeSlider = null, this.floorFilter = null;
  }
  clone() {
    return new m9(m({ range: this.range, timeSlider: this.timeSlider, floorFilter: this.floorFilter }));
  }
};
e([d({ type: a10, json: { write: true } })], c12.prototype, "range", void 0), e([d({ type: d5, json: { write: true } })], c12.prototype, "timeSlider", void 0), e([d({ type: l6, json: { write: true } })], c12.prototype, "floorFilter", void 0), c12 = m9 = e([n("esri.webdoc.Widgets")], c12);
var n9 = c12;

// node_modules/@arcgis/core/webdoc/support/thumbnailUtils.js
var h3 = { width: 600, height: 400 };
var t4 = 1.5;
function i14(i18, e5) {
  e5 = e5 || h3;
  let { width: d6, height: n11 } = e5;
  const g3 = d6 / n11;
  return g3 < t4 ? n11 = d6 / t4 : g3 > t4 && (d6 = n11 * t4), d6 > i18.width && (n11 *= i18.width / d6, d6 = i18.width), n11 > i18.height && (d6 *= i18.height / n11, n11 = i18.height), { width: Math.round(d6), height: Math.round(n11) };
}

// node_modules/@arcgis/core/core/accessorSupport/extensions/serializableProperty/writePolicyUtils.js
function e4(e5) {
  return { enabled: !!(e5 == null ? void 0 : e5.length) };
}

// node_modules/@arcgis/core/webdoc/applicationProperties/SearchLayerField.js
var c13;
var a12 = c13 = class extends l {
  constructor(r5) {
    super(r5), this.exactMatch = false, this.name = null, this.type = null;
  }
  clone() {
    return new c13({ exactMatch: this.exactMatch, type: this.type, name: this.name });
  }
};
e([d({ type: Boolean, json: { write: true } })], a12.prototype, "exactMatch", void 0), e([d({ type: String, json: { write: true } })], a12.prototype, "name", void 0), e([r3(i2)], a12.prototype, "type", void 0), a12 = c13 = e([n("esri.webdoc.applicationProperties.SearchLayerField")], a12);
var i15 = a12;

// node_modules/@arcgis/core/webdoc/applicationProperties/SearchLayer.js
var c14;
var a13 = c14 = class extends l {
  constructor(r5) {
    super(r5), this.field = null, this.id = null, this.subLayer = null;
  }
  clone() {
    return new c14(m({ field: this.field, id: this.id, subLayer: this.subLayer }));
  }
};
e([d({ type: i15, json: { write: { isRequired: true } } })], a13.prototype, "field", void 0), e([d({ type: String, json: { write: { isRequired: true } } })], a13.prototype, "id", void 0), e([d({ type: S, json: { write: true } })], a13.prototype, "subLayer", void 0), a13 = c14 = e([n("esri.webdoc.applicationProperties.SearchLayer")], a13);
var u4 = a13;

// node_modules/@arcgis/core/webdoc/applicationProperties/SearchTableField.js
var c15;
var a14 = c15 = class extends l {
  constructor(r5) {
    super(r5), this.exactMatch = false, this.name = null, this.type = null;
  }
  clone() {
    return new c15({ exactMatch: this.exactMatch, type: this.type, name: this.name });
  }
};
e([d({ type: Boolean, json: { write: true } })], a14.prototype, "exactMatch", void 0), e([d({ type: String, json: { write: true } })], a14.prototype, "name", void 0), e([r3(i2)], a14.prototype, "type", void 0), a14 = c15 = e([n("esri.webdoc.applicationProperties.SearchTableField")], a14);
var i16 = a14;

// node_modules/@arcgis/core/webdoc/applicationProperties/SearchTable.js
var p8;
var c16 = p8 = class extends l {
  constructor(r5) {
    super(r5), this.field = null, this.id = null;
  }
  clone() {
    return new p8(m({ field: this.field, id: this.id }));
  }
};
e([d({ type: i16, json: { write: { isRequired: true } } })], c16.prototype, "field", void 0), e([d({ type: String, json: { write: { isRequired: true } } })], c16.prototype, "id", void 0), c16 = p8 = e([n("esri.webdoc.applicationProperties.SearchTable")], c16);
var l7 = c16;

// node_modules/@arcgis/core/webdoc/applicationProperties/Search.js
var p9;
var b3 = j2.ofType(u4);
var h4 = j2.ofType(l7);
var u5 = p9 = class extends l {
  constructor(e5) {
    super(e5), this.addressSearchEnabled = true, this.enabled = true, this.hintText = null, this.layers = new b3(), this.tables = new h4();
  }
  readAddressSearchEnabled(e5) {
    return !e5;
  }
  writeAddressSearchEnabled(e5, r5, o6) {
    r5[o6] = !e5;
  }
  clone() {
    return new p9(m({ addressSearchEnabled: this.addressSearchEnabled, enabled: this.enabled, hintText: this.hintText, layers: this.layers, tables: this.tables }));
  }
};
e([d({ type: Boolean, nonNullable: true, json: { read: { source: "disablePlaceFinder" }, write: { target: "disablePlaceFinder", isRequired: true }, origins: { "web-scene": { read: false, write: false } } } })], u5.prototype, "addressSearchEnabled", void 0), e([o2("addressSearchEnabled")], u5.prototype, "readAddressSearchEnabled", null), e([r2("addressSearchEnabled")], u5.prototype, "writeAddressSearchEnabled", null), e([d({ type: Boolean, nonNullable: true, json: { write: true, origins: { "web-map": { write: { isRequired: true } }, "web-scene": { default: true, write: true } } } })], u5.prototype, "enabled", void 0), e([d({ type: String, json: { write: true } })], u5.prototype, "hintText", void 0), e([d({ type: b3, json: { write: { overridePolicy: e4 }, origins: { "web-scene": { write: { isRequired: true } } } } })], u5.prototype, "layers", void 0), e([d({ type: h4, json: { read: true, write: { overridePolicy: e4 } } })], u5.prototype, "tables", void 0), u5 = p9 = e([n("esri.webdoc.applicationProperties.Search")], u5);
var y5 = u5;

// node_modules/@arcgis/core/webdoc/applicationProperties/Viewing.js
var p10;
var a15 = p10 = class extends l {
  constructor(r5) {
    super(r5), this.search = null;
  }
  clone() {
    return new p10(m({ search: this.search }));
  }
};
e([d({ type: y5, json: { write: true } })], a15.prototype, "search", void 0), a15 = p10 = e([n("esri.webdoc.applicationProperties.Viewing")], a15);
var i17 = a15;

// node_modules/@arcgis/core/webmap/ApplicationProperties.js
var p11;
var n10 = p11 = class extends l {
  constructor(o6) {
    super(o6), this.editing = null, this.offline = null, this.viewing = null;
  }
  clone() {
    return new p11(m({ editing: this.editing, offline: this.offline, viewing: this.viewing }));
  }
};
e([d({ json: { write: true } })], n10.prototype, "editing", void 0), e([d({ json: { write: true } })], n10.prototype, "offline", void 0), e([d({ type: i17, json: { write: true } })], n10.prototype, "viewing", void 0), n10 = p11 = e([n("esri.webmap.ApplicationProperties")], n10);
var c17 = n10;

// node_modules/@arcgis/core/webmap/InitialViewProperties.js
var c18;
var l8 = c18 = class extends y {
  constructor(o6) {
    super(o6), this.background = null, this.rangeInfo = null, this.spatialReference = null, this.viewpoint = null;
  }
  clone() {
    return new c18(m({ background: this.background, rangeInfo: this.rangeInfo, spatialReference: this.spatialReference, viewpoint: this.viewpoint }));
  }
};
e([d({ type: m5 })], l8.prototype, "background", void 0), e([d({ type: c10 })], l8.prototype, "rangeInfo", void 0), e([d({ type: k })], l8.prototype, "spatialReference", void 0), e([d({ type: u2 })], l8.prototype, "viewpoint", void 0), l8 = c18 = e([n("esri.webmap.InitialViewProperties")], l8);
var m10 = l8;

// node_modules/@arcgis/core/webmap/Version.js
var s14 = class extends r4 {
  constructor(r5, s15) {
    super(r5, s15, "webmap");
  }
};

// node_modules/@arcgis/core/WebMap.js
var ie = new s14(2, 25);
var oe = "Web Map";
var ae = j2.ofType(g2);
var se = j2.ofType(f2);
var ne = s2.getLogger("esri.WebMap");
var le = /* @__PURE__ */ new Map();
le.set("image/jpeg", "jpeg"), le.set("image/jpg", "jpg"), le.set("image/png", "png"), le.set("image/gif", "gif");
var pe = "ArcGIS Pro";
var me = f.JSAPI;
var he = "CollectorDisabled";
var ue = "Collector";
var ce = "Data Editing";
var de = "OfflineDisabled";
var ye = "Offline";
var we = "Workforce Project";
var ge = "Workforce Worker";
var fe = "Workforce Dispatcher";
var be = "Offline Map Areas";
var _e = "FieldMapsDisabled";
var ve = f.DEVELOPER_BASEMAP;
var Ie = ["NatGeo_World_Map", "Ocean_Basemap", "USA_Topo_Maps", "World_Imagery", "World_Street_Map", "World_Terrain_Base", "World_Topo_Map", "World_Hillshade", "Canvas/World_Light_Gray_Base", "Canvas/World_Light_Gray_Reference", "Canvas/World_Dark_Gray_Base", "Canvas/World_Dark_Gray_Reference", "Ocean/World_Ocean_Base", "Ocean/World_Ocean_Reference", "Reference/World_Boundaries_and_Places", "Reference/World_Reference_Overlay", "Reference/World_Transportation"].map((e5) => e5.toLowerCase());
var Ae = class extends O(m4.LoadableMixin(m2(L))) {
  constructor(e5) {
    super(e5), this.applicationProperties = null, this.bookmarks = new ae(), this.floorInfo = null, this.geotriggersInfo = null, this.initialViewProperties = new m10(), this.portalItem = null, this.presentation = null, this.sourceVersion = null, this.widgets = null, this.utilityNetworks = null, this.authoringApp = this.authoringAppVersion = null, this._isAuthoringAppSetByUser = this._isAuthoringAppVersionSetByUser = false;
  }
  destroy() {
    const e5 = this.portalItem;
    this.portalItem = null, e5 == null ? void 0 : e5.destroy();
  }
  initialize() {
    if (this.when().catch((e5) => {
      ne.error("#load()", "Failed to load web map", e5);
    }), this.resourceInfo) {
      let t5;
      try {
        t5 = this._validateJSON(this.resourceInfo);
      } catch (e5) {
        return void this.addResolvingPromise(Promise.reject(e5));
      }
      this.read(t5);
    }
  }
  set authoringApp(e5) {
    this._isAuthoringAppSetByUser = true, this._set("authoringApp", e5);
  }
  writeAuthoringApp(e5, t5) {
    e5 && this._isAuthoringAppSetByUser ? t5.authoringApp = e5 : t5.authoringApp = me;
  }
  set authoringAppVersion(e5) {
    this._isAuthoringAppVersionSetByUser = true, this._set("authoringAppVersion", e5);
  }
  writeAuthoringAppVersion(e5, r5) {
    e5 && this._isAuthoringAppVersionSetByUser ? r5.authoringAppVersion = e5 : r5.authoringAppVersion = s4;
  }
  readInitialViewProperties(e5, t5) {
    var _a;
    const r5 = new m10();
    t5.background && (r5.background = m5.fromJSON(t5.background));
    const o6 = (_a = t5.initialState) == null ? void 0 : _a.viewpoint;
    if (o6) {
      if (o6.rotation) {
        s14.parse(t5.version || "", "webmap").lessThan(2, 20) && t5.authoringApp === pe && (o6.rotation *= -1);
      }
      r5.viewpoint = u2.fromJSON(o6);
    }
    return t5.mapRangeInfo && (r5.rangeInfo = c10.fromJSON(t5.mapRangeInfo)), t5.spatialReference && (r5.spatialReference = k.fromJSON(t5.spatialReference)), r5;
  }
  writeInitialViewProperties(e5, t5, r5, i18) {
    if (!e5)
      return;
    const o6 = e5.background;
    o6 && o6.color && (t5.background = o6.write({}, i18)), e5.viewpoint && (t5.initialState = { viewpoint: e5.viewpoint.write({}, i18) }), e5.rangeInfo && (t5.mapRangeInfo = e5.rangeInfo.toJSON(i18)), e5.spatialReference && (t5.spatialReference = e5.spatialReference.write({}, i18));
  }
  writeLayers(e5, t5, r5, i18) {
    t5[r5] = this._writeLayers(e5, i18, "operational-layers");
  }
  readSourceVersion(e5, t5) {
    const [r5, i18] = t5.version.split(".");
    return new s14(parseInt(r5, 10), parseInt(i18, 10));
  }
  writeSourceVersion(e5, t5, r5) {
    t5[r5] = `${ie.major}.${ie.minor}`;
  }
  writeTables(e5, t5, r5, i18) {
    const o6 = this._writeLayers(e5, i18, "tables");
    o6.length && (t5[r5] = o6);
  }
  get thumbnailUrl() {
    return this.portalItem && this.portalItem.thumbnailUrl || null;
  }
  set thumbnailUrl(e5) {
    e5 ? (this._override("thumbnailUrl", e5), this._thumbnailFilename = this._generateCustomThumbnailFilename(e5)) : this._clearThumbnailOverride();
  }
  load(e5) {
    return this.addResolvingPromise(this._loadFromSource()), Promise.resolve(this);
  }
  loadAll() {
    return n2(this, (e5) => {
      e5(this.ground, this.basemap, this.layers, this.tables);
    });
  }
  read(e5, t5) {
    t5 = { ...t5, origin: "web-map" };
    const r5 = this._getAuthoringPropsState();
    d2(this, e5, (t6) => super.read(e5, t6), t5), this._restoreAuthoringPropsFromState(r5);
  }
  write(e5, t5) {
    if ("loaded" !== this.loadStatus) {
      const e6 = new s3("webmap:not-loaded", "Web map must be loaded before it can be serialized");
      throw ne.error("#toJSON()", "Web map must be loaded before it can be serialized", this.loadError || this.loadStatus), e6;
    }
    return this._removeDanglingLayerRefs(), t5 = { ...t5, origin: "web-map", restrictedWebMapWriting: true, webmap: this }, super.write(e5, t5);
  }
  async save(e5) {
    e5 = e5 || {}, this._validateItem(), await this._updateFromPromise, await this.load(), await this._loadLayerContainers(), await this._beforeSave(), await this._validateMap();
    const t5 = this.portalItem, r5 = { origin: "web-map", messages: [], writtenProperties: [], url: t5.itemUrl && j3(t5.itemUrl), portal: t5.portal || B.getDefault() }, i18 = this.write({}, r5);
    return this._validateJSONForWriting(r5, e5), await this._updateItemProperties(t5), await this._updateItem(t5, i18, r5), await this._updateItemThumbnail(), t5;
  }
  async saveAs(e5, t5) {
    t5 = t5 || {};
    const r5 = this._getPortalItem(e5);
    await this._updateFromPromise, await this.load(), await this._loadLayerContainers(), await this._beforeSave(), await this._validateMap();
    const i18 = { origin: "web-map", messages: [], writtenProperties: [], url: null, portal: r5.portal }, o6 = this.write({}, i18);
    this._validateJSONForWriting(i18, t5), await this._updateItemPropertiesForSaveAs(r5);
    const a16 = this._getThumbnailState();
    return await this._createItem(r5, o6, i18, t5), this._restoreThumbnailFromState(a16), await this._updateItemThumbnail(), r5;
  }
  async updateFrom(e5, t5) {
    const r5 = this._updateFromInternal(e5, t5);
    this._updateFromPromise = r5, await r5;
    r5 === this._updateFromPromise && (this._updateFromPromise = null);
  }
  getLayerJSONFromResourceInfo(e5) {
    var _a, _b, _c, _d;
    const t5 = this.resourceInfo;
    return this._collectAllLayersJSON(x([(_a = t5 == null ? void 0 : t5.baseMap) == null ? void 0 : _a.baseMapLayers, t5 == null ? void 0 : t5.operationalLayers, (_d = (_c = (_b = this.basemap) == null ? void 0 : _b.resourceInfo) == null ? void 0 : _c.data) == null ? void 0 : _d.baseMapLayers])).find((t6) => t6.id === e5.id);
  }
  _collectAllLayersJSON(e5) {
    return e5.reduce((e6, t5) => (e6.push(t5), "GroupLayer" === t5.layerType && (e6 = e6.concat(this._collectAllLayersJSON(t5.layers || []))), e6), []);
  }
  _writeLayers(e5, t5, r5) {
    t5 = { ...t5, layerContainerType: r5 };
    return e5.map((e6) => e2(y3(e6, "tables" === r5 ? null : this.getLayerJSONFromResourceInfo(e6), t5))).filter(Boolean).toArray();
  }
  _loadFromSource() {
    return this.resourceInfo ? this._loadFromJSON(this.resourceInfo, { origin: "web-map" }) : this.portalItem && this.portalItem.id ? this._loadFromItem(this.portalItem) : Promise.resolve(null);
  }
  _loadFromItem(e5) {
    return e5.load().catch((e6) => {
      throw new s3("webmap:load-portal-item", "Failed to load portal item", { error: e6 });
    }).then(() => {
      if ("Web Map" !== e5.type)
        throw new s3("webmap:invalid-portal-item", "Invalid portal item type '${type}', expected 'Web Map'", { type: e5.type });
    }).then(() => e5.fetchData()).then((t5) => (this.resourceInfo = t5, this._readAndLoadFromJSON(t5, { origin: "web-map", portal: e5.portal || B.getDefault() }))).then(() => this._computeInitialViewpoint());
  }
  _readAndLoadFromJSON(e5, t5) {
    const r5 = this._validateJSON(e5);
    return this.read(r5, t5), this._loadFromJSON(r5, t5);
  }
  _validateJSON(e5) {
    const t5 = s14.parse(e5.version || "", "webmap");
    return ie.validate(t5), e5.version = `${t5.major}.${t5.minor}`, e5;
  }
  _loadFromJSON(e5, t5) {
    const r5 = { context: { ...t5, layerContainerType: "operational-layers" } };
    return this.portalItem && (r5.context.portal = this.portalItem.portal || B.getDefault()), import("./layersCreator-25L6KWMN.js").then(({ populateOperationalLayers: t6 }) => {
      const i18 = [], o6 = e5.operationalLayers;
      o6 && o6.length && i18.push(t6(this.layers, o6, r5));
      const a16 = { ...r5, context: { ...r5.context, layerContainerType: "tables" }, defaultLayerType: "ArcGISFeatureLayer" }, s15 = e5.tables;
      return s15 && s15.length && i18.push(t6(this.tables, s15, a16)), E(i18).then(() => {
      });
    });
  }
  async _computeInitialViewpoint() {
    var _a;
    let e5 = this.initialViewProperties;
    const t5 = (_a = e5 == null ? void 0 : e5.viewpoint) == null ? void 0 : _a.targetGeometry;
    if (t5)
      return;
    const r5 = await this._getExtentFromItem();
    r5 && (e5 = e5 ? e5.clone() : new m10(), e5.viewpoint = new u2(), e5.viewpoint.targetGeometry = r5, this.initialViewProperties = e5);
  }
  async _getExtentFromItem() {
    var _a, _b;
    const e5 = (_a = this.initialViewProperties) == null ? void 0 : _a.spatialReference, t5 = (_b = this.portalItem) == null ? void 0 : _b.extent;
    if (e5 && t5) {
      if (e5.isWGS84)
        return t5.clone();
      if (e5.isWebMercator)
        return R(t5);
      return (await import("./geometryServiceUtils-62N2A7H4.js")).getGeometryServiceURL(this.portalItem).then((r5) => {
        const i18 = new a2();
        return i18.geometries = [t5], i18.outSpatialReference = e5, n3(r5, i18);
      }).then((e6) => e6[0]).catch((e6) => (ne.error("Error projecting item's extent:", e6), null));
    }
    return null;
  }
  _removeDanglingLayerRefs() {
    const e5 = this.applicationProperties, t5 = e5 && e5.viewing && e5.viewing.search, r5 = (e6) => this.allLayers.some((t6) => t6.id === e6);
    t5 && t5.layers && (t5.layers = t5.layers.filter((e6) => r5(e6.id))), t5 && t5.tables && (t5.tables = t5.tables.filter((e6) => this.tables.some((t6) => t6.id === e6.id)));
    const i18 = e5 && e5.editing && e5.editing.locationTracking;
    i18 && i18.info && !r5(i18.info.layerId) && (e5.editing = null);
    const o6 = this.presentation && this.presentation.slides;
    o6 && o6.forEach((e6) => {
      e6.visibleLayers && (e6.visibleLayers = e6.visibleLayers.filter((e7) => r5(e7.id)));
    });
  }
  async _validateMap() {
    var _a;
    if (!((_a = this.basemap) == null ? void 0 : _a.baseLayers.length))
      throw new s3("webmap:save", "Map does not have a valid basemap with a base layer.");
    let e5 = null;
    if (await j4(() => {
      const t5 = h(this.initialViewProperties, this.basemap);
      return e5 = t5.spatialReference, !t5.updating;
    }), !E2(e5, this.initialViewProperties.spatialReference))
      throw new s3("webmap:save", "The spatial reference of the basemap is not compatible with the one from the map.", { expected: this.initialViewProperties.spatialReference, actual: e5 });
  }
  _validateItem() {
    if (!this.portalItem)
      throw ne.error("save: requires the portalItem property to be set"), new s3("webmap:portal-item-not-set", "Portal item to save to has not been set on the WebMap");
    this._validateItemType(this.portalItem);
  }
  _validateItemType(e5) {
    if (e5.type !== oe)
      throw new s3("webmap:portal-item-wrong-type", `Portal item needs to have type "${oe}"`);
  }
  _loadLayerContainers() {
    const e5 = [];
    return this.basemap && e5.push(this.basemap.load()), this.ground && e5.push(this.ground.load()), E(e5).then(() => {
    });
  }
  async _beforeSave() {
    const e5 = [];
    for (const t5 of this.allLayers)
      if ("beforeSave" in t5 && "function" == typeof t5.beforeSave) {
        const r5 = t5.beforeSave();
        r5 && e5.push(r5);
      }
    await E(e5);
  }
  _loadAllLayers() {
    const e5 = this._getAllLayersAndTables().map((e6) => e6.load());
    return E(e5).then(() => {
    });
  }
  _getAllLayersAndTables() {
    return this.allLayers.concat(this.allTables);
  }
  _validateJSONForWriting(e5, t5) {
    let r5 = e5.messages.filter((e6) => "error" === e6.type).map((e6) => new s3(e6.name, e6.message, e6.details));
    if (t5.ignoreUnsupported && (r5 = r5.filter((e6) => "layer:unsupported" !== e6.name && "symbol:unsupported" !== e6.name && "symbol-layer:unsupported" !== e6.name && "property:unsupported" !== e6.name && "url:unsupported" !== e6.name)), r5.length > 0)
      throw new s3("webmap:save", "Failed to save webmap due to unsupported or invalid content. See 'details.errors' for more detailed information", { errors: r5 });
  }
  async _updateItemProperties(e5) {
    e5.extent = await this._getWGS84Extent(this.initialViewProperties.viewpoint.targetGeometry), await this._updateTypeKeywords(e5);
  }
  async _updateItemPropertiesForSaveAs(e5) {
    c(e5, he), c(e5, _e), c(e5, f.METADATA), c(e5, de), c(e5, be), c(e5, fe), c(e5, we), c(e5, ge), await this._updateItemProperties(e5);
  }
  async _getWGS84Extent(e5) {
    const t5 = e5.clone().normalize();
    let r5;
    if (t5.length > 1)
      for (const i18 of t5)
        r5 ? i18.width > r5.width && (r5 = i18) : r5 = i18;
    else
      r5 = t5[0];
    return this._projectToWGS84(r5);
  }
  async _projectToWGS84(e5) {
    const t5 = e5.spatialReference;
    if (t5.isWGS84)
      return e5.clone();
    if (t5.isWebMercator)
      return j(e5);
    const r5 = await import("./geometryServiceUtils-62N2A7H4.js"), i18 = await r5.getGeometryServiceURL(this.portalItem), o6 = new a2();
    o6.geometries = [e5], o6.outSpatialReference = k.WGS84;
    return (await n3(i18, o6))[0];
  }
  async _updateTypeKeywords(e5) {
    i3(e5, me), await this._loadAllLayers(), this._evalCollectorKeyword(e5), this._evalDataEditingKeyword(e5), this._evalOfflineKeyword(e5), this._evalDeveloperBasemapKeyword(e5), e5.typeKeywords && (e5.typeKeywords = e5.typeKeywords.filter((e6, t5, r5) => r5.indexOf(e6) === t5));
  }
  _evalCollectorKeyword(e5) {
    s5(e5, he) || s5(e5, we) || s5(e5, ge) || s5(e5, fe) || !this._hasEditableFeatureLayer() ? c(e5, ue) : i3(e5, ue);
  }
  _evalDataEditingKeyword(e5) {
    this._hasEditableFeatureLayer() ? i3(e5, ce) : c(e5, ce);
  }
  _evalOfflineKeyword(e5) {
    !s5(e5, de) && this._isOfflineCapableMap() ? i3(e5, ye) : c(e5, ye);
  }
  _evalDeveloperBasemapKeyword(e5) {
    v(this.basemap) ? i3(e5, ve) : c(e5, ve);
  }
  _hasEditableFeatureLayer() {
    return this._getAllLayersAndTables().some((e5) => e5.loaded && l3(e5) && e5.capabilities.operations.supportsEditing && e5.editingEnabled);
  }
  _isOfflineCapableMap() {
    return this._getAllLayersAndTables().filter((e5) => "group" !== e5.type).every((e5) => e5.loaded && this._isOfflineCapableLayer(e5));
  }
  _isFeatureCollectionLike(e5) {
    return a(e5) || "map-notes" === e5.type || "route" === e5.type;
  }
  _isOfflineCapableLayer(e5) {
    return l3(e5) && e5.capabilities.operations.supportsSync || this._isFeatureCollectionLike(e5) && !e5.portalItem || ("tile" === e5.type || "vector-tile" === e5.type) && (e5.capabilities.operations.supportsExportTiles || this._isExportableAGOLTileLayer(e5) || S3(e5)) && e5.spatialReference.equals(this.initialViewProperties.spatialReference);
  }
  _isExportableAGOLTileLayer(e5) {
    return "tile" === e5.type && (j5(e5.url) && Ie.some((t5) => e5.url.toLowerCase().includes("/" + t5 + "/")));
  }
  async _updateItem(e5, t5, r5) {
    await e5.update({ data: t5 }), this._syncUpInstanceWithItem(e5, t5, r5);
  }
  async _createItem(e5, t5, r5, i18) {
    const o6 = this.portalItem, a16 = !!(o6 && o6.id && o6.portal.user), n11 = e5.portal;
    if (await n11._signIn(), !await this._canCopyItem(o6, a16, n11))
      throw new s3("webmap:save-as-copy-not-allowed", "Owner of this map does not allow others to save a copy");
    await n11.user.addItem({ item: e5, folder: i18.folder, data: t5 }), this.portalItem = e5, this._syncUpInstanceWithItem(e5, t5, r5);
  }
  async _canCopyItem(e5, t5, r5) {
    return !(r(e5) && e5.id && e5.typeKeywords && e5.typeKeywords.includes("useOnly")) || e5.portal.portalHostname === r5.portalHostname && (t5 || await e5.reload(), "admin" === e5.itemControl || "update" === e5.itemControl);
  }
  _syncUpInstanceWithItem(e5, t5, r5) {
    S2.prototype.read.call(this, { version: t5.version, authoringApp: t5.authoringApp, authoringAppVersion: t5.authoringAppVersion }, { origin: "web-map", ignoreDefaults: true, url: e5.itemUrl && j3(e5.itemUrl) }), i4(r5), this.resourceInfo = t5;
  }
  async _updateItemThumbnail() {
    this.thumbnailUrl && this._isOverridden("thumbnailUrl") && (await this.portalItem.updateThumbnail({ thumbnail: this.thumbnailUrl, filename: this._thumbnailFilename }), this._clearThumbnailOverride());
  }
  _getPortalItem(e5) {
    let t5 = b2.from(e5);
    return t5.id && (t5 = t5.clone(), t5.id = null), t5.type || (t5.type = oe), t5.portal || (t5.portal = B.getDefault()), this._validateItemType(t5), t5;
  }
  async _updateFromInternal(e5, t5) {
    if (t5 = t5 || {}, await j4(() => e5.ready), this._updateInitialViewProperties(e5, t5), e5.map === this)
      for (const r5 of e5.allLayerViews)
        for (const e6 of ["visible", "featureEffect"])
          e6 in r5 && e6 in r5.layer && r5._isOverridden(e6) && (r5.layer[e6] = r5[e6]);
    await this._updateThumbnailUrl(e5, t5);
  }
  _updateInitialViewProperties(e5, t5) {
    var _a;
    if (t5.backgroundExcluded || (this.initialViewProperties.background = (_a = e5.background) == null ? void 0 : _a.clone()), this.initialViewProperties.spatialReference = e5.spatialReference.clone(), t5.viewpointExcluded || (this.initialViewProperties.viewpoint = new u2({ rotation: e5.rotation, scale: t5.scalePreserved ? e5.scale : null, targetGeometry: this._getViewExtent(e5) })), !t5.widgetsExcluded)
      for (const r5 of e5.persistableViewModels)
        r5.updateWebDocument(this);
  }
  _getViewExtent(e5) {
    const t5 = e5.center.clone().normalize(), r5 = e5.extent.clone(), i18 = r5.width / 2;
    return r5.xmin = t5.x - i18, r5.xmax = t5.x + i18, r5;
  }
  async _updateThumbnailUrl(e5, t5) {
    if (t5.thumbnailExcluded)
      return;
    const r5 = i14(e5, t5.thumbnailSize), i18 = await e5.takeScreenshot({ format: "png", width: r5.width, height: r5.height });
    this._setAutoGeneratedThumbnail(i18.dataUrl);
  }
  _setAutoGeneratedThumbnail(e5) {
    this.thumbnailUrl = e5, this._thumbnailFilename = null;
  }
  _clearThumbnailOverride() {
    this._clearOverride("thumbnailUrl"), this.clear("thumbnailUrl", "user"), this._thumbnailFilename = null;
  }
  _generateCustomThumbnailFilename(e5) {
    if (X(e5)) {
      const t5 = nt(e5), r5 = t5 && t5.mediaType, i18 = r5 && le.get(r5.toLowerCase()) || null, o6 = `thumbnail${Date.now()}`;
      return i18 ? `${o6}.${i18}` : o6;
    }
    return null;
  }
  _getThumbnailState() {
    let e5 = this.thumbnailUrl;
    return e5 && (e5 = this._isOverridden("thumbnailUrl") ? e5 : St(e5, "w", "8192")), { thumbnailUrl: e5, filename: this._thumbnailFilename };
  }
  _restoreThumbnailFromState(e5) {
    this.thumbnailUrl = e5.thumbnailUrl, this._thumbnailFilename = e5.filename;
  }
  _getAuthoringPropsState() {
    return { authoringApp: this.authoringApp, authoringAppVersion: this.authoringAppVersion, isAuthoringAppSetByUser: this._isAuthoringAppSetByUser, isAuthoringAppVersionSetByUser: this._isAuthoringAppVersionSetByUser };
  }
  _restoreAuthoringPropsFromState(e5) {
    e5.isAuthoringAppSetByUser ? this.authoringApp = e5.authoringApp : this._isAuthoringAppSetByUser = false, e5.isAuthoringAppVersionSetByUser ? this.authoringAppVersion = e5.authoringAppVersion : this._isAuthoringAppVersionSetByUser = false;
  }
  static fromJSON(e5) {
    const t5 = e5;
    if (!t5)
      throw new s3("webmap:empty-resource", "Expected a JSON resource but got nothing");
    return new this({ resourceInfo: t5 });
  }
};
Ae.VERSION = ie, e([d({ type: c17, json: { write: true } })], Ae.prototype, "applicationProperties", void 0), e([d({ type: String, json: { write: { allowNull: true, ignoreOrigin: true } } })], Ae.prototype, "authoringApp", null), e([r2("authoringApp")], Ae.prototype, "writeAuthoringApp", null), e([d({ type: String, json: { write: { allowNull: true, ignoreOrigin: true } } })], Ae.prototype, "authoringAppVersion", null), e([r2("authoringAppVersion")], Ae.prototype, "writeAuthoringAppVersion", null), e([d({ json: { read: { source: "baseMap" }, write: { target: "baseMap" } } })], Ae.prototype, "basemap", void 0), e([d({ type: ae, json: { write: { overridePolicy: (e5) => ({ enabled: !!(e5 && e5.length > 0), ignoreOrigin: true }) } } })], Ae.prototype, "bookmarks", void 0), e([d({ type: l5, json: { read: { source: "mapFloorInfo" }, write: { target: "mapFloorInfo" } } })], Ae.prototype, "floorInfo", void 0), e([d({ type: i12, json: { write: true } })], Ae.prototype, "geotriggersInfo", void 0), e([d({ type: m10, nonNullable: true, json: { read: { source: ["background", "initialState.viewpoint", "mapRangeInfo", "spatialReference"] }, write: { ignoreOrigin: true, target: { background: { type: m5 }, "initialState.viewpoint": { type: u2 }, mapRangeInfo: { type: c10 }, spatialReference: { type: k } } } } })], Ae.prototype, "initialViewProperties", void 0), e([o2("initialViewProperties")], Ae.prototype, "readInitialViewProperties", null), e([r2("initialViewProperties")], Ae.prototype, "writeInitialViewProperties", null), e([d({ json: { read: false, write: { target: "operationalLayers", ignoreOrigin: true } } })], Ae.prototype, "layers", void 0), e([r2("layers")], Ae.prototype, "writeLayers", null), e([d({ type: b2 })], Ae.prototype, "portalItem", void 0), e([d({ json: { write: true } })], Ae.prototype, "presentation", void 0), e([d()], Ae.prototype, "resourceInfo", void 0), e([d({ readOnly: true, type: s14, json: { read: { source: "version" }, write: { allowNull: true, ignoreOrigin: true, target: "version", isRequired: true } } })], Ae.prototype, "sourceVersion", void 0), e([o2("sourceVersion")], Ae.prototype, "readSourceVersion", null), e([r2("sourceVersion")], Ae.prototype, "writeSourceVersion", null), e([d({ json: { read: false, write: { ignoreOrigin: true } } })], Ae.prototype, "tables", void 0), e([r2("tables")], Ae.prototype, "writeTables", null), e([d()], Ae.prototype, "thumbnailUrl", null), e([d({ type: n9, json: { write: true } })], Ae.prototype, "widgets", void 0), e([d({ type: se, json: { read: true, write: true } })], Ae.prototype, "utilityNetworks", void 0), Ae = e([n("esri.WebMap")], Ae);
var Se = Ae;
export {
  Se as default
};
//# sourceMappingURL=@arcgis_core_WebMap.js.map
