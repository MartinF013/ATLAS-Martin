{
  "version": 3,
  "sources": ["../../@arcgis/core/layers/support/RasterWorker.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport\"../../geometry.js\";import{isSome as r,unwrap as e}from\"../../core/maybe.js\";import t from\"../../geometry/support/GeographicTransformation.js\";import s from\"./PixelBlock.js\";import{decode as o}from\"./rasterFormats/RasterCodec.js\";import{split as i,mosaic as a,approximateTransform as n,getLocalArithmeticNorthRotations as m}from\"./rasterFunctions/pixelUtils.js\";import{requirePE as l,load as c,getProjectionOffsetGrid as f}from\"./rasterFunctions/rasterProjectionHelper.js\";import{estimateStatisticsHistograms as p}from\"./rasterFunctions/stretchUtils.js\";import{convertVectorFieldData as u,convertToLocalDirections as d}from\"./rasterFunctions/vectorFieldUtils.js\";import{readTransform as S}from\"./rasterTransforms/utils.js\";import h from\"../../renderers/support/RasterSymbolizer.js\";import{createFlowMesh as y}from\"../../views/2d/engine/flow/dataUtils.js\";import x from\"../../geometry/Extent.js\";class O{convertVectorFieldData(e){const t=s.fromJSON(e.pixelBlock),o=u(t,e.type);return Promise.resolve(r(o)&&o.toJSON())}async decode(r){const e=await o(r.data,r.options);return e&&e.toJSON()}symbolize(e){e.pixelBlock=s.fromJSON(e.pixelBlock),e.extent=e.extent?x.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(r(t)&&t.toJSON())}async updateSymbolizer(r){this.symbolizer=h.fromJSON(r.symbolizerJSON),r.histograms&&\"rasterStretch\"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=r.histograms)}stretch(e){const t=this.symbolizer.simpleStretch(s.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(r(t)&&t.toJSON())}estimateStatisticsHistograms(r){const e=p(s.fromJSON(r.srcPixelBlock));return Promise.resolve(e)}split(r){const e=i(s.fromJSON(r.srcPixelBlock),r.tileSize,r.maximumPyramidLevel);return e&&e.forEach(((r,t)=>{e.set(t,r?.toJSON())})),Promise.resolve(e)}async mosaicAndTransform(r){const t=r.srcPixelBlocks.map((r=>r?new s(r):null)),o=a(t,r.srcMosaicSize,{blockWidths:r.blockWidths,alignmentInfo:r.alignmentInfo,clipOffset:r.clipOffset,clipSize:r.clipSize});let i,l=o;return r.coefs&&(l=n(o,r.destDimension,r.coefs,r.sampleSpacing,r.interpolation)),r.projectDirections&&r.gcsGrid&&(i=m(r.destDimension,r.gcsGrid),l=e(d(l,r.isUV?\"vector-uv\":\"vector-magdir\",i))),{pixelBlock:l?.toJSON(),localNorthDirections:i}}async createFlowMesh(r,e){const t={data:new Float32Array(r.flowData.buffer),mask:new Uint8Array(r.flowData.maskBuffer),width:r.flowData.width,height:r.flowData.height},{vertexData:s,indexData:o}=await y(r.meshType,r.simulationSettings,t,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(r){const e=x.fromJSON(r.projectedExtent),s=x.fromJSON(r.srcBufferExtent);let o=null;r.datumTransformationSteps&&(o=new t({steps:r.datumTransformationSteps})),(r.includeGCSGrid||l(e.spatialReference,s.spatialReference,o))&&await c();const i=r.rasterTransform?S(r.rasterTransform):null;return f({...r,projectedExtent:e,srcBufferExtent:s,datumTransformation:o,rasterTransform:i})}}export{O as default};\n"],
  "mappings": "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",
  "names": ["e", "r", "U", "m", "M", "u", "i", "s"]
}
