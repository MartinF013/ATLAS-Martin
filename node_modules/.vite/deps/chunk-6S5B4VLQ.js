import {
  m,
  p as p3,
  y as y3
} from "./chunk-24OMPNTT.js";
import {
  x
} from "./chunk-DLW46BXD.js";
import {
  A
} from "./chunk-KBILTFOD.js";
import {
  p as p2,
  t as t2,
  y as y2
} from "./chunk-45UEUCUL.js";
import {
  p
} from "./chunk-TMSBC6BS.js";
import {
  n as n2
} from "./chunk-OIPX3EDD.js";
import {
  s as s2
} from "./chunk-XRL56EGK.js";
import {
  d,
  n8 as n,
  y3 as y
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  b
} from "./chunk-23NWA6WL.js";
import {
  s
} from "./chunk-CVWDM4C7.js";
import {
  t
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/layers/support/editableLayers.js
function i(i3) {
  var _a;
  return !!(i3 && i3.loaded && "capabilities" in i3 && ((_a = i3 == null ? void 0 : i3.capabilities) == null ? void 0 : _a.operations) && "supportsEditing" in i3.capabilities.operations && true === i3.capabilities.operations.supportsEditing) && !("editingEnabled" in i3 && !i3.editingEnabled);
}

// node_modules/@arcgis/core/support/groundUtils.js
var i2 = s.getLogger("esri.support.groundUtils");
var t3 = { "world-elevation": { id: "worldElevation", url: "//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer", layerType: "ArcGISTiledElevationServiceLayer" }, "world-topobathymetry": { id: "worldTopoBathymetry", url: "//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/TopoBathy3D/ImageServer", layerType: "ArcGISTiledElevationServiceLayer" } };
function a(r) {
  let a2 = null;
  if ("string" == typeof r)
    if (r in t3) {
      const o = t3[r];
      a2 = new A({ resourceInfo: { data: { layers: [o] } } });
    } else
      i2.warn(`Unable to find ground definition for: ${r}. Try "world-elevation"`);
  else
    a2 = b(A, r);
  return a2;
}

// node_modules/@arcgis/core/Map.js
var j = class extends p2(y2(n2.EventedMixin(y))) {
  constructor(s3) {
    super(s3), this.allLayers = new p({ getCollections: () => {
      var _a, _b, _c;
      return [(_a = this.basemap) == null ? void 0 : _a.baseLayers, (_b = this.ground) == null ? void 0 : _b.layers, this.layers, (_c = this.basemap) == null ? void 0 : _c.referenceLayers];
    }, getChildrenFunction: (s4) => "layers" in s4 ? s4.layers : null }), this.allTables = t2(this), this.basemap = null, this.editableLayers = new p({ getCollections: () => [this.allLayers], itemFilterFunction: i }), this.ground = new A(), this._basemapCache = p3();
  }
  destroy() {
    var _a, _b;
    this.allLayers.destroy(), this.allTables.destroy(), this.editableLayers.destroy(), (_a = this.ground) == null ? void 0 : _a.destroy(), (_b = this.basemap) == null ? void 0 : _b.destroy(), y3(this._basemapCache), this._basemapCache = null;
  }
  castBasemap(s3) {
    return m(s3, this._basemapCache);
  }
  castGround(s3) {
    const e2 = a(s3);
    return t(e2) ? this._get("ground") : e2;
  }
  findLayerById(s3) {
    return this.allLayers.find((e2) => e2.id === s3);
  }
  findTableById(s3) {
    return this.allTables.find((e2) => e2.id === s3);
  }
};
e([d({ readOnly: true, dependsOn: [] })], j.prototype, "allLayers", void 0), e([d({ readOnly: true })], j.prototype, "allTables", void 0), e([d({ type: x })], j.prototype, "basemap", void 0), e([s2("basemap")], j.prototype, "castBasemap", null), e([d({ readOnly: true })], j.prototype, "editableLayers", void 0), e([d({ type: A, nonNullable: true })], j.prototype, "ground", void 0), e([s2("ground")], j.prototype, "castGround", null), j = e([n("esri.Map")], j);
var L = j;

export {
  L
};
//# sourceMappingURL=chunk-6S5B4VLQ.js.map
