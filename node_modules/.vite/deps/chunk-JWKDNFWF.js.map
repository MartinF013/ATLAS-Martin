{
  "version": 3,
  "sources": ["../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js", "../../@arcgis/core/views/2d/engine/flow/BrushFlow.js", "../../@arcgis/core/views/2d/engine/imagery/RasterBitmap.js", "../../@arcgis/core/views/2d/engine/webgl/VertexStream.js", "../../@arcgis/core/views/2d/engine/imagery/BrushRasterBitmap.js", "../../@arcgis/core/views/2d/engine/imagery/BrushVectorField.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/BrushBitmap.js", "../../@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js", "../../@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js", "../../@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/BrushOverlay.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrush.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushFill.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushDotDensity.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushMarker.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushHeatmap.js", "../../@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushInfo.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushPieChart.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLabel.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushLine.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLGeometryBrushText.js", "../../@arcgis/core/views/2d/engine/brushes.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nclass a{constructor(){this.name=this.constructor.name||\"UnnamedBrush\"}prepareState(a,r,t){}draw(a,r,t){}drawMany(a,r,t){for(const s of r)this.draw(a,s,t)}}export{a as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isNone as t,isSome as e}from\"../../../../core/maybe.js\";import{c as s}from\"../../../../chunks/mat3f32.js\";import a from\"../webgl/brushes/WGLBrush.js\";import{CompareFunction as r}from\"../../../webgl/enums.js\";class i extends a{constructor(){super(...arguments),this._visualState={time:0,dvsMat3:s(),displayViewMat3:s()}}dispose(){}prepareState(t){const{context:e}=t;e.setColorMask(!0,!0,!0,!0),e.setStencilFunction(r.EQUAL,0,255)}draw(s,a){const{requestRender:r}=s,{displayData:i}=a;if(t(i))return;if(\"loaded\"===i.state.name&&i.attach(s),\"attached\"!==i.state.name)return;const o=i.state.resources;o.ready||!e(r)?(this._visualState.time=s.time/1e3,this._visualState.dvsMat3=a.transforms.dvs,this._visualState.displayViewMat3=s.state.displayViewMat3,i.flowStyle.render(s,this._visualState,o),i.flowStyle.animated&&e(r)&&r()):r()}}export{i as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as t}from\"../../../../core/maybe.js\";import{b as e,c as r,r as s,j as i,m as a}from\"../../../../chunks/mat3.js\";import{c as o}from\"../../../../chunks/mat3f32.js\";import{f as u}from\"../../../../chunks/vec2f32.js\";import{extractBands as n}from\"../../../../layers/support/rasterFunctions/pixelUtils.js\";import{DisplayObject as h}from\"../DisplayObject.js\";import{TextureSamplingMode as l}from\"../../../webgl/enums.js\";import{createTransformTexture as d,createRasterTexture as _,createColormapTexture as m}from\"../../../webgl/rasterUtils.js\";const x={bandCount:3,outMin:0,outMax:1,minCutOff:[0,0,0],maxCutOff:[255,255,255],factor:[1/255,1/255,1/255],useGamma:!1,gamma:[1,1,1],gammaCorrection:[1,1,1],colormap:null,colormapOffset:null,stretchType:\"none\",type:\"stretch\"};class p extends h{constructor(t=null,e=null,r=null){super(),this._textureInvalidated=!0,this._colormapTextureInvalidated=!0,this._supportsBilinearTexture=!0,this.stencilRef=0,this.coordScale=[1,1],this._symbolizerParameters=null,this.height=null,this.isRendereredSource=!1,this.pixelRatio=1,this.resolution=0,this.rotation=0,this._source=null,this.rawPixelData=null,this._suspended=!1,this._bandIds=null,this._interpolation=null,this._transformGrid=null,this.width=null,this.x=0,this.y=0,this.source=t,this.transformGrid=e,this.interpolation=r}destroy(){this.getTextures()?.textures.forEach((t=>t.dispose())),this._rasterTexture=null,this._transformGridTexture=null,this._colormapTexture=null}get symbolizerParameters(){return this._symbolizerParameters||x}set symbolizerParameters(t){this._symbolizerParameters!==t&&(this._symbolizerParameters=t,this._colormapTextureInvalidated=!0)}get source(){return this._source}set source(t){this._source!==t&&(this._source=t,this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null),this.invalidateTexture())}get suspended(){return this._suspended}set suspended(t){this._suspended&&!t&&this.stage&&(this.ready(),this.requestRender()),this._suspended=t}get bandIds(){return this._bandIds}set bandIds(t){this._bandIds=t,this._isBandIdschanged(t)&&this.invalidateTexture()}get interpolation(){return this._interpolation||\"nearest\"}set interpolation(t){this._interpolation=t,this._rasterTexture&&this._rasterTexture.setSamplingMode(\"bilinear\"===this._getTextureSamplingMethod(t)?l.LINEAR:l.NEAREST)}get transformGrid(){return this._transformGrid}set transformGrid(t){this._transformGrid=t,this._transformGridTexture&&(this._transformGridTexture.dispose(),this._transformGridTexture=null)}invalidateTexture(){this._textureInvalidated||(this._textureInvalidated=!0,this.requestRender())}_createTransforms(){return{dvs:o()}}setTransform(t){const o=e(this.transforms.dvs),[n,h]=t.toScreenNoRotation([0,0],[this.x,this.y]),l=this.resolution/this.pixelRatio/t.resolution,d=l*this.width,_=l*this.height,m=Math.PI*this.rotation/180;r(o,o,u(n,h)),r(o,o,u(d/2,_/2)),s(o,o,-m),r(o,o,u(-d/2,-_/2)),i(o,o,u(d,_)),a(this.transforms.dvs,t.displayViewMat3,o)}getTextures(){if(!this._rasterTexture)return null;const t=[],e=[];return this._transformGridTexture&&(e.push(this._transformGridTexture),t.push(\"u_transformGrid\")),this._rasterTexture&&(e.push(this._rasterTexture),t.push(\"u_image\")),this._colormapTexture&&(e.push(this._colormapTexture),t.push(\"u_colormap\")),{names:t,textures:e}}onAttach(){this.invalidateTexture()}onDetach(){this.invalidateTexture()}updateTexture({context:t}){if(!this.stage)return this._rasterTexture?.dispose(),this._transformGridTexture?.dispose(),this._colormapTexture?.dispose(),this._rasterTexture=null,this._rasterTextureBandIds=null,this._transformGridTexture=null,void(this._colormapTexture=null);const e=this._isValidSource(this.source);e&&this._colormapTextureInvalidated&&(this._colormapTextureInvalidated=!1,this._updateColormapTexture(t)),this._textureInvalidated&&(this._textureInvalidated=!1,this._createOrDestroyRasterTexture(t),this._rasterTexture&&(e?this.transformGrid&&!this._transformGridTexture&&(this._transformGridTexture=d(t,this.transformGrid)):this._rasterTexture.setData(null)),this.suspended||(this.ready(),this.requestRender()))}_createOrDestroyRasterTexture(e){const r=t(this.source)?n(this.source,this.bandIds):null;if(!this._isValidSource(r))return void(this._rasterTexture&&(this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null));const s=!this._isBandIdschanged(this.bandIds);if(this._rasterTexture){if(s)return;this._rasterTexture.dispose(),this._rasterTextureBandIds=null,this._rasterTexture=null}this._supportsBilinearTexture=e.capabilities.textureFloat?.textureFloatLinear;const i=this._getTextureSamplingMethod(this.interpolation),a=this.isRendereredSource||!e.capabilities.textureFloat?.textureFloat;this._rasterTexture=_(e,r,i,a),this._rasterTextureBandIds=this.bandIds?[...this.bandIds]:null}_isBandIdschanged(t){const e=this._rasterTextureBandIds;return!(null==e&&null==t||e&&t&&e.join(\"\")===t.join(\"\"))}_isValidSource(e){return t(e)&&e.pixels?.length>0}_getTextureSamplingMethod(e){const{type:r,colormap:s}=this.symbolizerParameters,i=\"lut\"===r||\"stretch\"===r&&t(s);return!this._supportsBilinearTexture||i||\"bilinear\"!==e&&\"cubic\"!==e?\"nearest\":\"bilinear\"}_updateColormapTexture(t){const e=this._colormap,r=this.symbolizerParameters.colormap;return r?e?r.length!==e.length||r.some(((t,r)=>t!==e[r]))?(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),this._colormapTexture=m(t,r),void(this._colormap=r)):void 0:(this._colormapTexture=m(t,r),void(this._colormap=r)):(this._colormapTexture&&(this._colormapTexture.dispose(),this._colormapTexture=null),void(this._colormap=null))}}class c extends p{get source(){return this._source}}function T(e){return t(e.source)}export{p as RasterBitmap,c as RasterBitmapWithSource,T as hasSource};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{BufferObject as t}from\"../../../webgl/BufferObject.js\";import{Usage as e,DataType as r,PrimitiveType as s}from\"../../../webgl/enums.js\";import{VertexArrayObject as i}from\"../../../webgl/VertexArrayObject.js\";import{VertexElementDescriptor as o}from\"../../../webgl/VertexElementDescriptor.js\";class n{constructor(s,n){this.rctx=s,this._vertexBuffer=t.createVertex(s,e.STATIC_DRAW,new Uint16Array(n)),this._vao=new i(s,new Map([[\"a_position\",0]]),{geometry:[new o(\"a_position\",2,r.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=n.length/2}bind(){this.rctx.bindVAO(this._vao)}unbind(){this.rctx.bindVAO(null)}dispose(){this._vao.dispose(!1),this._vertexBuffer.dispose()}draw(){this.rctx.bindVAO(this._vao),this.rctx.drawArrays(s.TRIANGLE_STRIP,0,this._count)}}export{n as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../core/maybe.js\";import{hasSource as t}from\"./RasterBitmap.js\";import r from\"../webgl/VertexStream.js\";import s from\"../webgl/brushes/WGLBrush.js\";import{BlendFactor as a,CompareFunction as i}from\"../../../webgl/enums.js\";import{setTextures as o,getCommonUniforms as n,setUniforms as h,getColormapUniforms as l,getStretchUniforms as c,getShadedReliefUniforms as p,getUniformLocationInfos as d,getBasicGridUniforms as u}from\"../../../webgl/rasterUtils.js\";class m extends s{constructor(){super(...arguments),this._desc={lut:{vsPath:\"raster/lut\",fsPath:\"raster/lut\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])},stretch:{vsPath:\"raster/stretch\",fsPath:\"raster/stretch\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])},hillshade:{vsPath:\"raster/hillshade\",fsPath:\"raster/hillshade\",attributes:new Map([[\"a_position\",0],[\"a_texcoord\",1]])}},this._rendererUniformInfos=new Map}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e},t){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(i.EQUAL,t.stencilRef,255)}draw(e,r){if(!t(r)||r.suspended)return;const{timeline:s,context:a,painter:i,requestRender:o}=e;s.begin(this.name);const n=!a.capabilities.textureFloat?.textureFloatLinear;r.updateTexture(e);const h=this._getShaderVariations(r,n),l=i.materialManager.getProgram(this._desc[r.symbolizerParameters.type],h);this._drawWithProgram(a,l,r,o),s.end(this.name)}_drawWithProgram(t,s,a,i,d=1,m=[0,0],f=!1){if(this._quad||(this._quad=new r(t,[0,0,1,0,0,1,1,1])),e(i)&&!s.isCompiled)return void i();const{symbolizerParameters:_,transformGrid:g,width:b,height:P,opacity:S}=a,w=_.type;t.useProgram(s);const x=this._getShaderVariations(a),y=this._getUniformInfos(w,t,s,x),{names:M,textures:U}=a.getTextures();o(t,s,M,U);const j=u(d,m),I=n(g,[b,P],[a.source.width,a.source.height],S,f);if(h(s,y,{u_coordScale:a.coordScale,u_dvsMat3:a.transforms.dvs,...j,...I}),_.colormap){const{colormap:e,colormapOffset:t}=_,r=l(e,t);h(s,y,r)}if(\"stretch\"===_.type){const e=c(_);h(s,y,e)}else if(\"hillshade\"===_.type){const e=p(_);h(s,y,e)}this._quad.draw()}_getUniformInfos(e,t,r,s){const a=s.length>0?e+\"-\"+s.join(\"-\"):e;if(this._rendererUniformInfos.has(a))return this._rendererUniformInfos.get(a);const i=d(t,r);return this._rendererUniformInfos.set(a,i),i}_getShaderVariations(e,t=!1){const r=[],{interpolation:s}=e,{type:a,colormap:i}=e.symbolizerParameters;return\"cubic\"===s?r.push(\"bicubic\"):\"bilinear\"===s&&\"stretch\"===a&&null!=i?(r.push(\"bilinear\"),r.push(\"nnedge\")):t&&\"bilinear\"===s&&r.push(\"bilinear\"),e.isRendereredSource?r.push(\"noop\"):i&&r.push(\"applyColormap\"),e.transformGrid&&(r.push(\"applyProjection\"),1===e.transformGrid.spacing[0]&&r.push(\"lookupProjection\")),r}}export{m as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isNone as e,isSome as t}from\"../../../../core/maybe.js\";import a from\"../webgl/brushes/WGLBrush.js\";import{BlendFactor as r,StencilOperation as s,CompareFunction as o,PrimitiveType as n,DataType as i}from\"../../../webgl/enums.js\";const l=new Float32Array([.27058823529411763,.4588235294117647,.7098039215686275,1,.396078431372549,.5372549019607843,.7215686274509804,1,.5176470588235295,.6196078431372549,.7294117647058823,1,.6352941176470588,.7058823529411765,.7411764705882353,1,.7529411764705882,.8,.7450980392156863,1,.8705882352941177,.8901960784313725,.7490196078431373,1,1,1,.7490196078431373,1,1,.8627450980392157,.6313725490196078,1,.9803921568627451,.7254901960784313,.5176470588235295,1,.9607843137254902,.596078431372549,.4117647058823529,1,.9294117647058824,.4588235294117647,.3176470588235294,1,.9098039215686274,.08235294117647059,.08235294117647059,1]),c={beaufort_ft:l,beaufort_m:l,beaufort_km:l,beaufort_mi:l,beaufort_kn:new Float32Array([.1568627450980392,.5725490196078431,.7803921568627451,1,.34901960784313724,.6352941176470588,.7294117647058823,1,.5058823529411764,.7019607843137254,.6705882352941176,1,.6274509803921569,.7607843137254902,.6078431372549019,1,.7490196078431373,.8313725490196079,.5411764705882353,1,.8549019607843137,.9019607843137255,.4666666666666667,1,.9803921568627451,.9803921568627451,.39215686274509803,1,.9882352941176471,.8352941176470589,.3254901960784314,1,.9882352941176471,.7019607843137254,.4,1,.9803921568627451,.5529411764705883,.20392156862745098,1,.9686274509803922,.43137254901960786,.16470588235294117,1,.9411764705882353,.2784313725490196,.11372549019607843,1]),classified_arrow:new Float32Array([.2196078431372549,.6588235294117647,0,1,.5450980392156862,1.2117647058823529,0,1,1,1,0,1,1,.5019607843137255,0,1,1,0,0,1]),ocean_current_m:new Float32Array([.3058823529411765,.10196078431372549,.6,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),ocean_current_kn:new Float32Array([0,0,0,1,0,.1450980392156863,.39215686274509803,1,.3058823529411765,.10196078431372549,.6,1,.592156862745098,0,.39215686274509803,1,.7019607843137254,.10588235294117647,.10196078431372549,1,.6941176470588235,.3058823529411765,.10196078431372549,1,.792156862745098,.5019607843137255,.10196078431372549,1,.6941176470588235,.7019607843137254,.20392156862745098,1,.6941176470588235,.6941176470588235,.6941176470588235,1]),single_arrow:new Float32Array([0,92/255,230/255,1]),wind_speed:new Float32Array([0,0,0,1])};class m extends a{constructor(){super(...arguments),this._desc={magdir:{vsPath:\"raster/magdir\",fsPath:\"raster/magdir\",attributes:new Map([[\"a_pos\",0],[\"a_offset\",1],[\"a_vv\",2]])},scalar:{vsPath:\"raster/scalar\",fsPath:\"raster/scalar\",attributes:new Map([[\"a_pos\",0],[\"a_offset\",1],[\"a_vv\",2]])}}}dispose(){}prepareState({context:e},t){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilOp(s.KEEP,s.KEEP,s.REPLACE),e.setStencilFunction(o.EQUAL,t.stencilRef,255)}draw(t,a){if(e(a.source)||0===a.source.validPixelCount)return;const{timeline:r}=t;if(r.begin(this.name),a.updateVectorFieldVAO(t),\"scalar\"===t.renderPass){const e=a.vaoData.scalar;e&&this._drawScalars(t,a,e.vao,e.elementCount)}else{const e=a.vaoData.magdir;e&&this._drawTriangles(t,a,e.vao,e.elementCount)}r.end(this.name)}_drawTriangles(e,a,r,s){const{context:o,painter:l,requestRender:m}=e,{symbolizerParameters:d}=a,f=d.dataRange?[\"dataRange\"]:[];\"geographic\"===d.rotationType&&f.push(\"rotationGeographic\");const u=l.materialManager.getProgram(this._desc.magdir,f);if(t(m)&&!u.isCompiled)return void m();o.useProgram(u);const{coordScale:_,opacity:g,transforms:p}=a;u.setUniform2fv(\"u_coordScale\",_),u.setUniform1f(\"u_opacity\",g),u.setUniformMatrix3fv(\"u_dvsMat3\",p.dvs);const{style:y,dataRange:v,rotation:b,symbolPercentRange:S}=d;u.setUniform4fv(\"u_colors\",c[y]||c.single_arrow),u.setUniform2fv(\"u_dataRange\",v),u.setUniform1f(\"u_rotation\",b),u.setUniform2fv(\"u_symbolPercentRange\",S);const h=this._getSymbolSize(e,a);u.setUniform2fv(\"u_symbolSize\",h),o.bindVAO(r),o.drawElements(n.TRIANGLES,s,i.UNSIGNED_INT,0)}_drawScalars(e,a,r,s){const{context:o,painter:l,requestRender:c}=e,{symbolizerParameters:m}=a,d=[];\"wind_speed\"===m.style?d.push(\"innerCircle\"):m.dataRange&&d.push(\"dataRange\"),\"geographic\"===m.rotationType&&d.push(\"rotationGeographic\");const f=l.materialManager.getProgram(this._desc.scalar,d);if(t(c)&&!f.isCompiled)return void c();o.useProgram(f);const{coordScale:u,opacity:_,transforms:g}=a;f.setUniform2fv(\"u_coordScale\",u),f.setUniform1f(\"u_opacity\",_),f.setUniformMatrix3fv(\"u_dvsMat3\",g.dvs);const{dataRange:p,symbolPercentRange:y}=m;f.setUniform2fv(\"u_dataRange\",p),f.setUniform2fv(\"u_symbolPercentRange\",y);const v=this._getSymbolSize(e,a);f.setUniform2fv(\"u_symbolSize\",v),o.bindVAO(r),o.drawElements(n.TRIANGLES,s,i.UNSIGNED_INT,0)}_getSymbolSize(e,t){const a=t.key?2**(e.displayLevel-t.key.level):t.resolution/e.state.resolution,{symbolTileSize:r}=t.symbolizerParameters;return[r/(Math.round((t.width-t.offset[0])/r)*r)/a,r/(Math.round((t.height-t.offset[1])/r)*r)/a]}}export{m as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../../core/maybe.js\";import{TEXTURE_BINDING_BITMAP as t}from\"../definitions.js\";import i from\"../VertexStream.js\";import s from\"./WGLBrush.js\";import{TextureSamplingMode as n,BlendFactor as r,CompareFunction as a}from\"../../../../webgl/enums.js\";const o={nearest:{defines:[],samplingMode:n.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:n.LINEAR,mips:!1},bicubic:{defines:[\"bicubic\"],samplingMode:n.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:n.LINEAR_MIPMAP_LINEAR,mips:!0}},d=(e,t,i)=>{if(\"dynamic\"===i.samplingMode){const{state:i}=e,s=t.resolution/t.pixelRatio/i.resolution,n=Math.round(e.pixelRatio)!==e.pixelRatio,r=s>1.05||s<.95;return i.rotation||r||n||t.isSourceScaled||t.rotation?o.bilinear:o.nearest}return o[i.samplingMode]};class m extends s{constructor(){super(...arguments),this._desc={vsPath:\"raster/bitmap\",fsPath:\"raster/bitmap\",attributes:new Map([[\"a_pos\",0]])}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e},t){e.setBlendingEnabled(!0),\"additive\"===t.blendFunction?e.setBlendFunctionSeparate(r.ONE,r.ONE,r.ONE,r.ONE):e.setBlendFunctionSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(a.EQUAL,t.stencilRef,255)}draw(s,n){const{context:r,renderingOptions:a,painter:o,requestRender:m}=s;if(!n.source)return;const c=d(s,n,a),l=o.materialManager.getProgram(this._desc,c.defines);if(e(m)&&!l.isCompiled)return void m();s.timeline.begin(this.name),this._quad||(this._quad=new i(r,[0,0,1,0,0,1,1,1]));const{coordScale:p,computedOpacity:u,transforms:f}=n;n.setSamplingProfile(c),n.bind(s.context,t),r.useProgram(l),l.setUniformMatrix3fv(\"u_dvsMat3\",f.dvs),l.setUniform1i(\"u_texture\",t),l.setUniform2fv(\"u_coordScale\",p),l.setUniform1f(\"u_opacity\",u),this._quad.draw(),s.timeline.end(this.name)}}export{m as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nconst e={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos, 0.0, 1.0);\\nv_uv = a_tex;\\n}\"},blend:{\"blend.frag\":\"precision mediump float;\\nuniform sampler2D u_layerTexture;\\nuniform lowp float u_opacity;\\nuniform lowp float u_inFadeOpacity;\\n#ifndef NORMAL\\nuniform sampler2D u_backbufferTexture;\\n#endif\\nvarying mediump vec2 v_uv;\\nfloat rgb2v(in vec3 c) {\\nreturn max(c.x, max(c.y, c.z));\\n}\\nvec3 rgb2hsv(in vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(in vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec3 tint(in vec3 Cb, in vec3 Cs) {\\nfloat vIn = rgb2v(Cb);\\nvec3 hsvTint = rgb2hsv(Cs);\\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\\nreturn hsv2rgb(hsvOut);\\n}\\nfloat overlay(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\\n}\\nfloat colorDodge(in float Cb, in float Cs) {\\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\\n}\\nfloat colorBurn(in float Cb, in float Cs) {\\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\\n}\\nfloat hardLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\\n}\\nfloat reflectBlend(in float Cb, in float Cs) {\\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\\n}\\nfloat softLight(in float Cb, in float Cs) {\\nif (Cs <= 0.5) {\\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\\n}\\nif (Cb <= 0.25) {\\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\\n}\\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\\n}\\nfloat vividLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\\n}\\nfloat minv3(in vec3 c) {\\nreturn min(min(c.r, c.g), c.b);\\n}\\nfloat maxv3(in vec3 c) {\\nreturn max(max(c.r, c.g), c.b);\\n}\\nfloat lumv3(in vec3 c) {\\nreturn dot(c, vec3(0.3, 0.59, 0.11));\\n}\\nfloat satv3(vec3 c) {\\nreturn maxv3(c) - minv3(c);\\n}\\nvec3 clipColor(vec3 color) {\\nfloat lum = lumv3(color);\\nfloat mincol = minv3(color);\\nfloat maxcol = maxv3(color);\\nif (mincol < 0.0) {\\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\\n}\\nif (maxcol > 1.0) {\\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\\n}\\nreturn color;\\n}\\nvec3 setLum(vec3 cbase, vec3 clum) {\\nfloat lbase = lumv3(cbase);\\nfloat llum = lumv3(clum);\\nfloat ldiff = llum - lbase;\\nvec3 color = cbase + vec3(ldiff);\\nreturn clipColor(color);\\n}\\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\\n{\\nfloat minbase = minv3(cbase);\\nfloat sbase = satv3(cbase);\\nfloat ssat = satv3(csat);\\nvec3 color;\\nif (sbase > 0.0) {\\ncolor = (cbase - minbase) * ssat / sbase;\\n} else {\\ncolor = vec3(0.0);\\n}\\nreturn setLum(color, clum);\\n}\\nvoid main() {\\nvec4 src = texture2D(u_layerTexture, v_uv);\\n#ifdef NORMAL\\ngl_FragColor = src *  u_opacity;\\n#else\\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\\nfloat as = u_opacity * src.a;\\nfloat ab = dst.a;\\n#ifdef DESTINATION_OVER\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\\n#endif\\n#ifdef SOURCE_IN\\nvec4 color = vec4(as * Cs * ab, as * ab);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef DESTINATION_IN\\nvec4 color = vec4(ab * Cb * as, ab * as);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef SOURCE_OUT\\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\\n#endif\\n#ifdef DESTINATION_OUT\\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\\n#endif\\n#ifdef SOURCE_ATOP\\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\\n#endif\\n#ifdef DESTINATION_ATOP\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\\n#endif\\n#ifdef XOR\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\\nas * (1.0 - ab) + ab * (1.0 - as));\\n#endif\\n#ifdef MULTIPLY\\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SCREEN\\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef OVERLAY\\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DARKEN\\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LIGHTER\\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\\n#endif\\n#ifdef LIGHTEN\\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_DODGE\\nvec3 f = vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_BURN\\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HARD_LIGHT\\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SOFT_LIGHT\\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DIFFERENCE\\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef EXCLUSION\\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef INVERT\\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\\n#endif\\n#ifdef VIVID_LIGHT\\nvec3 f = vec3(vividLight(Cb.r, Cs.r),\\nvividLight(Cb.g, Cs.g),\\nvividLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HUE\\nvec3 f = setLumSat(Cs,Cb,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SATURATION\\nvec3 f = setLumSat(Cb,Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR\\nvec3 f = setLum(Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LUMINOSITY\\nvec3 f = setLum(Cb,Cs);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef PLUS\\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\\n#endif\\n#ifdef MINUS\\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\\n#endif\\n#ifdef AVERAGE\\nvec3 f = (Cb + Cs) / 2.0;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef REFLECT\\nvec3 f = vec3(reflectBlend(Cb.r, Cs.r),\\nreflectBlend(Cb.g, Cs.g),\\nreflectBlend(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#endif\\n}\",\"blend.vert\":\"attribute vec2 a_position;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_position , 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"},dot:{dot:{\"dot.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nuniform highp float u_tileZoomFactor;\\nvoid main()\\n{\\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\\ngl_FragColor = v_color * alpha;\\n}\",\"dot.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform sampler2D u_texture;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp float u_tileZoomFactor;\\nuniform highp float u_dotSize;\\nuniform highp float u_pixelRatio;\\nvarying vec2 v_pos;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nconst float EPSILON = 0.000001;\\nvoid main()\\n{\\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\\n0., -1., 0.,\\n0., 1., 1.  );\\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\\nv_color = texture2D(u_texture, texCoords.xy);\\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\\nfloat z = 0.;\\nz += 2.0 * step(v_color.a, EPSILON);\\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\\nv_dotRatio = u_dotSize / gl_PointSize;\\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\\n}\"}},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}\"},fx:{integrate:{\"integrate.frag\":\"precision mediump float;\\nuniform lowp sampler2D u_sourceTexture;\\nuniform lowp sampler2D u_maskTexture;\\nuniform mediump float u_zoomLevel;\\nuniform highp float u_timeDelta;\\nuniform highp float u_animationTime;\\nvarying highp vec2 v_texcoord;\\n#include <materials/utils.glsl>\\nvoid main()\\n{\\n#ifdef DELTA\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\\nfloat flags = data0.r * 255.0;\\nfloat groupMinZoom = data0.g * 255.0;\\nfloat isVisible = getFilterBit(flags, 0);\\nfloat wouldClip = step(groupMinZoom, u_zoomLevel);\\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\\nvec4 nextState = vec4(texel + direction * dt);\\ngl_FragColor =  vec4(nextState);\\n#elif defined(UPDATE)\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\ngl_FragColor = texel;\\n#endif\\n}\",\"integrate.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\\n}\"}},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":\"precision highp float;\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 4.0\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform sampler2D u_texture;\\nuniform sampler2D u_gradient;\\nuniform vec2 u_densityMinAndInvRange;\\nuniform float u_densityNormalization;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 data = texture2D(u_texture, v_uv);\\nfloat density = data.r * COMPRESSION_FACTOR;\\ndensity *= u_densityNormalization;\\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\\ngl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\",\"heatmapResolve.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nvarying vec2 v_uv;\\nconst float UV_TO_TILE_SPACE = 512.;\\nvoid main() {\\nv_uv = a_pos;\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos * UV_TO_TILE_SPACE, 1.)).xy, 1., 1.);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},magnifier:{\"magnifier.frag\":\"uniform lowp vec4 u_background;\\nuniform mediump sampler2D u_readbackTexture;\\nuniform mediump sampler2D u_maskTexture;\\nuniform mediump sampler2D u_overlayTexture;\\nuniform bool u_maskEnabled;\\nuniform bool u_overlayEnabled;\\nvarying mediump vec2 v_texCoord;\\nconst lowp float barrelFactor = 1.1;\\nlowp vec2 barrel(lowp vec2 uv) {\\nlowp vec2 uvn = uv * 2.0 - 1.0;\\nif (uvn.x == 0.0 && uvn.y == 0.0) {\\nreturn vec2(0.5, 0.5);\\n}\\nlowp float theta = atan(uvn.y, uvn.x);\\nlowp float r = pow(length(uvn), barrelFactor);\\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\\n}\\nvoid main(void)\\n{\\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\\ncolor = (color + (1.0 - color.a) * u_background);\\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\\ncolor *= mask;\\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\\n}\",\"magnifier.vert\":\"precision mediump float;\\nattribute mediump vec2 a_pos;\\nuniform mediump vec4 u_drawPos;\\nvarying mediump vec2 v_texCoord;\\nvoid main(void)\\n{\\nv_texCoord = a_pos;\\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D u_attributeData0;\\nuniform highp sampler2D u_attributeData1;\\nuniform highp sampler2D u_attributeData2;\\nuniform highp sampler2D u_attributeData3;\\nuniform highp sampler2D u_attributeData4;\\nuniform highp sampler2D u_attributeData5;\\nuniform highp int u_attributeTextureSize;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float size = float(u_attributeTextureSize);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(u_attributeTextureSize));\\n}\\nhighp vec4 getAttributeData0(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData0, coords);\\n}\\nhighp vec4 getAttributeData1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData1, coords);\\n}\\nhighp vec4 getAttributeData2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData2, coords);\\n}\\nhighp vec4 getAttributeData3(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData3, coords);\\n}\\nhighp vec4 getAttributeData4(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData4, coords);\\n}\\nhighp vec4 getAttributeData5(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(u_attributeData5, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"barycentric.glsl\":\"float inTriangle(vec3 bary) {\\nvec3 absBary = abs(bary);\\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\\n}\\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\\nmat3 xyToBarycentricMat3 = mat3(\\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\\n);\\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\\nconst float SIGNED_BYTE_TO_UNSIGNED = 128.0;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.00001;\\nconst float EPSILON_HITTEST = 0.05;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\\nconst int BITSET_LINE_SCALE_DASH = 2;\",fill:{\"common.glsl\":\"#include <materials/symbologyTypeUtils.glsl>\\n#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvarying lowp float v_isOutline;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef HITTEST\\nout_color = v_color;\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nout_color = v_opacity * v_color * color;\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}\",\"fill.vert\":\"#include <materials/symbologyTypeUtils.glsl>\\n#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\n#include <util/encoding.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#include <materials/fill/hittest.glsl>\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\\n0., -2. / 512.,  0.,\\n-1.,  1.,  1.  );\\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\\n#else\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#endif\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nvec2 scale = (1.0 / SIGNED_BYTE_TO_UNSIGNED) * a_scale;\\nfloat width = u_zoomFactor * a_width * scale.x;\\nfloat height = u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nfloat dx = 0.0;\\nfloat dy = 0.0;\\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\\nfloat id = rgba2float(vec4(a_id, 0.0));\\ndx = rand(vec2(id, 0.0));\\ndy = rand(vec2(0.0, id));\\n}\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\ndx,            dy,           1);\\nvec2 tileOffset = vec2(u_tileOffset.x * cosA - u_tileOffset.y * sinA, u_tileOffset.x * sinA + u_tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, vec2(a_aux2.x, a_aux2.y));\\nvec2 symbolOffset = (a_offset - tileOffset) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\n#ifdef HITTEST\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\\nout_pos = vec3(0., 0., 2.);\\nreturn;\\n}\\n#endif\\nhittestFill(out_color, out_pos);\\ngl_PointSize = 1.0;\\n}\\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(out_color, out_pos);\\n} else {\\ndrawFill(out_color, out_pos);\\n}\\n}\\n#else\\n#define draw drawFill\\n#endif\\nvoid main()\\n{\\nINIT;\\nhighp vec3 pos  = vec3(0.);\\nhighp vec4 color  = vec4(0.);\\ndraw(color, pos);\\nv_color = color;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\",\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestFill(\\nout lowp vec4 out_color,\\nout highp vec3 out_pos\\n) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\\nfloat hittestDist = u_hittestDist;\\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist < 0. || dist >= hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\\n}\\n#endif\"},hittest:{\"common.glsl\":\"#ifdef HITTEST\\nuniform float u_hittestDist;\\nuniform highp vec2 u_hittestPos;\\nfloat projectScalar(vec2 a, vec2 b) {\\nreturn dot(a, normalize(b));\\n}\\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\\nvec2 L = p2 - p1;\\nvec2 A = p0 - p1;\\nfloat projAL = projectScalar(A, L);\\nfloat t = clamp(projAL / length(L), 0., 1.);\\nreturn distance(p0, p1 + t * (p2 - p1));\\n}\\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\\nfloat dist = distance(pos, vec3(u_hittestPos, 1.));\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif ((dist - size) > u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\\n}\\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\\nreturn inTriangle(xyToBarycentric(p, a, b, c));\\n}\\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\\nvec2 ba = b - a;\\nvec2 ca = c - a;\\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\\nif (isParallel) {\\nreturn -1.;\\n}\\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\\nreturn 0.;\\n}\\nfloat distAB = distPointSegment(p, a, b);\\nfloat distBC = distPointSegment(p, b, c);\\nfloat distCA = distPointSegment(p, c, a);\\nreturn min(min(distAB, distBC), distCA);\\n}\\n#endif\"},icon:{\"common.glsl\":\"#include <util/encoding.glsl>\\nuniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nuniform lowp sampler2D u_texture;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\\n#ifdef SDF\\nvec4 getColor(vec2 v_size, vec2 v_tex) {\\nlowp vec4 fillPixelColor = v_color;\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nreturn v_opacity * fillPixelColor;\\n}\\n#else\\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\nreturn v_opacity * texColor * v_color;\\n}\\n#endif\",heatmapAccumulate:{\"common.glsl\":\"varying lowp vec4 v_hittestResult;\\nvarying mediump vec2 v_offsetFromCenter;\\nvarying highp float v_fieldValue;\",\"heatmapAccumulate.frag\":\"precision mediump float;\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 0.25\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform lowp sampler2D u_texture;\\nvoid main() {\\n#ifdef HITTEST\\ngl_FragColor = v_hittestResult;\\n#else\\nfloat radius = length(v_offsetFromCenter);\\nfloat shapeWeight = step(radius, 1.0);\\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\\n#endif\\n}\",\"heatmapAccumulate.vert\":\"precision highp float;\\nattribute vec2 a_vertexOffset;\\nvec4 a_color = vec4(0.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\nuniform float u_radius;\\nuniform float u_isFieldActive;\\nconst float TILE_TO_CLIP_SPACE = 2.0 / 512.0;\\n#include <materials/vcommon.glsl>\\n#include <materials/hittest/common.glsl>\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\nvoid main() {\\nfloat filterFlags = getFilterFlags();\\n#ifdef HITTEST\\nhighp vec4 out_hittestResult = vec4(0.);\\nhighp vec3 out_pos = vec3(0.);\\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\\nv_hittestResult = out_hittestResult;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\nv_offsetFromCenter = sign(a_vertexOffset);\\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\\nvec3 centerPos = vec3(a_pos * POSITION_PRECISION * TILE_TO_CLIP_SPACE - 1.0, 1.0);\\nvec3 vertexPos = centerPos + vec3(v_offsetFromCenter, 0.0) * u_radius * TILE_TO_CLIP_SPACE;\\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_vertexOffset1;\\nattribute vec2 a_vertexOffset2;\\nattribute vec2 a_texCoords1;\\nattribute vec2 a_texCoords2;\\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\\n}\\nvoid hittestIcon(\\ninout lowp vec4 out_color,\\nout highp vec3 out_pos,\\nin vec3 pos,\\nin vec3 offset,\\nin vec2 size,\\nin float scaleFactor,\\nin float isMapAligned\\n) {\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec2 tex0 = a_texCoords  / u_mosaicSize;\\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\\nfloat alphaSum = 0.;\\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\\nout_pos.z += step(alphaSum, .05) * 2.0;\\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\\n}\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvoid main()\\n{\\n#ifdef HITTEST\\nvec4 color = v_color;\\n#else\\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\\n#endif\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/icon/hittest.glsl>\\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat f = getSize(size.y) / size.y;\\nfloat sizeFactor = size.y / referenceSize;\\nreturn getSize(referenceSize) / referenceSize;\\n#else\\nreturn 1.;\\n#endif\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\\nsize.xy     *= scaleFactor;\\noffset.xy   *= scaleFactor;\\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\\nvec2 v_tex   = a_texCoords / u_mosaicSize;\\nfloat filterFlags = getFilterFlags();\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\\nv_sizeTex  = vec4(size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 126.0;\\n#endif\\n#ifdef HITTEST\\nhighp vec4 out_color = vec4(0.);\\nhighp vec3 out_pos   = vec3(0.);\\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\\nv_color = out_color;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHalo;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nv_color     = animation * ((1.0 - u_isHalo) * a_color + (u_isHalo * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHalo * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\ngl_Position = vec4(v_pos, 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist >= u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\\n}\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\n#ifdef HITTEST\\nvoid main() {\\ngl_FragColor = v_color;\\n}\\n#else\\nvoid main() {\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\\n#endif\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/line/hittest.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\n#ifdef HITTEST\\nvoid draw() {\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\\nfloat a_cimHalfWidth = a_aux.x / 16. ;\\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nhighp vec3 pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestLine(v_color, pos, halfWidth);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#else\\nvoid draw()\\n{\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#endif\\nvoid main() {\\nINIT;\\ndraw();\\n}\"},pie:{\"pie.frag\":\"precision mediump float;\\n#include <util/atan2.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nuniform lowp vec4 u_colors[NUMBER_OF_FIELDS];\\nuniform lowp vec4 u_defaultColor;\\nuniform lowp vec4 u_othersColor;\\nuniform lowp vec4 u_outlineColor;\\nuniform float u_donutRatio;\\nuniform float u_sectorThreshold;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\n#if __VERSION__ == 300\\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\\nreturn u_colors[colorIndex];\\n#else\\nmediump int colorIndex;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == index) {\\ncolorIndex = int(filteredSectorToColorId[i].y);\\n}\\n}\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == colorIndex) {\\nreturn u_colors[i];\\n}\\n}\\nreturn u_colors[NUMBER_OF_FIELDS - 1];\\n#endif\\n}\\nconst int OTHER_SECTOR_ID = 255;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor() {\\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\\nif (angle < 0.0) {\\nangle += 360.0;\\n} else if (angle > 360.0) {\\nangle = mod(angle, 360.0);\\n}\\nint numOfEntries = int(v_numOfEntries);\\nfloat maxSectorAngle = v_maxSectorAngle;\\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || u_sectorThreshold > 0.0) ? u_othersColor : u_defaultColor;\\nlowp vec4 prevColor = vec4(0.0);\\nlowp vec4 nextColor = vec4(0.0);\\nfloat startSectorAngle = 0.0;\\nfloat endSectorAngle = 0.0;\\nif (angle < maxSectorAngle) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nstartSectorAngle = endSectorAngle;\\nendSectorAngle = v_filteredSectorToColorId[index].x;\\nif (endSectorAngle > angle) {\\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\\nprevColor = u_sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = u_sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? u_othersColor :\\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\\nbreak;\\n}\\nif (index == numOfEntries - 1) {\\nbreak;\\n}\\n}\\n} else {\\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\\nstartSectorAngle = maxSectorAngle;\\nendSectorAngle = 360.0;\\n}\\nlowp vec4 outlineColor = u_outlineColor;\\nfloat offset = length(v_offset);\\nfloat distanceSize = offset * v_size;\\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\\nfloat distanceToStartSector = (angle - startSectorAngle);\\nfloat distanceToEndSector = (endSectorAngle - angle);\\nfloat sectorThreshold = 0.6;\\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\\nif (endSectorAlpha > 0.0) {\\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\\n} else if (beginSectorAlpha > 0.0) {\\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\\n}\\n}\\nfloat donutSize = u_donutRatio * (v_size - v_outlineWidth);\\nfloat endOfDonut = donutSize - v_outlineWidth;\\nfloat aaThreshold = 0.75;\\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\\nfloat startOfOutline = v_size - v_outlineWidth;\\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\\n}\\nreturn v_opacity * circleAlpha * fillColor;\\n}\\n#endif\\nvoid main()\\n{\\nvec4 color = getColor();\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"pie.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\nuniform float u_outlineWidth;\\nuniform mediump float u_sectorThreshold;\\nvarying float v_size;\\nvarying vec2 v_offset;\\nvarying vec2 v_filteredSectorToColorId[NUMBER_OF_FIELDS];\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\\nint filter(in float sectorAngle,\\nin int currentIndex,\\ninout FilteredChartInfo filteredInfo,\\ninout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS]) {\\nif (sectorAngle > u_sectorThreshold * 360.0) {\\nfilteredInfo.endSectorAngle += sectorAngle;\\n#if __VERSION__ == 300\\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; i++) {\\nif (i == filteredInfo.colorId) {\\nfilteredSectorToColorId[i] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n}\\n}\\n#endif\\n++filteredInfo.colorId;\\n}\\nreturn 0;\\n}\\nint filterValues(inout vec2 filteredSectorToColorId[NUMBER_OF_FIELDS],\\ninout FilteredChartInfo filteredInfo,\\nin float sectorAngles[NUMBER_OF_FIELDS]) {\\nfor (int index = 0; index < NUMBER_OF_FIELDS; ++index) {\\nfloat sectorValue = sectorAngles[index];\\nfilter(sectorValue, index, filteredInfo, filteredSectorToColorId);\\n}\\nreturn filteredInfo.colorId;\\n}\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/hittest/common.glsl>\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float referenceSize, in float bitSet) {\\nvec2 outSize = baseSize;\\n#ifdef VV_SIZE\\nfloat r = 0.5 * getSize(referenceSize) / referenceSize;\\noutSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn outSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nfloat filterNaNValues(in float value) {\\nreturn value != NAN_MAGIC_NUMBER ? value : 0.0;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec2  a_offset = a_vertexOffset / 16.0;\\nfloat outlineSize = u_outlineWidth;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec2 size = getMarkerSize(a_offset, a_size, outlineSize, a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0, a_bitSet);\\nfloat filterFlags = getFilterFlags();\\nvec3  pos         = vec3(a_pos * POSITION_PRECISION, 1.0);\\nv_opacity      = getOpacity();\\nv_id           = norm(a_id);\\nv_pos          = u_dvsMat3 * pos + getOffset(a_offset, a_bitSet);\\nv_offset       = sign(a_texCoords - 0.5);\\nv_size         = max(size.x, size.y);\\nv_outlineWidth = outlineSize;\\nfloat attributeData[10];\\nvec4 attributeData0 = getAttributeData3(a_id);\\nattributeData[0] = filterNaNValues(attributeData0.x);\\nattributeData[1] = filterNaNValues(attributeData0.y);\\nattributeData[2] = filterNaNValues(attributeData0.z);\\nattributeData[3] = filterNaNValues(attributeData0.w);\\n#if (NUMBER_OF_FIELDS > 4)\\nvec4 attributeData1 = getAttributeData4(a_id);\\nattributeData[4] = filterNaNValues(attributeData1.x);\\nattributeData[5] = filterNaNValues(attributeData1.y);\\nattributeData[6] = filterNaNValues(attributeData1.z);\\nattributeData[7] = filterNaNValues(attributeData1.w);\\n#endif\\n#if (NUMBER_OF_FIELDS > 8)\\nvec4 attributeData2 = getAttributeData5(a_id);\\nattributeData[8] = filterNaNValues(attributeData2.x);\\nattributeData[9] = filterNaNValues(attributeData2.y);\\n#endif\\nfloat sum = 0.0;\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsum += attributeData[i];\\n}\\nfloat sectorAngles[NUMBER_OF_FIELDS];\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\\n}\\nvec2 filteredSectorToColorId[NUMBER_OF_FIELDS];\\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\\nv_numOfEntries = float(numOfEntries);\\nv_maxSectorAngle = filteredInfo.endSectorAngle;\\n#if __VERSION__ == 300\\nv_filteredSectorToColorId = filteredSectorToColorId;\\n#else\\nfor (int i = 0; i < NUMBER_OF_FIELDS; ++i) {\\nif (i == numOfEntries) {\\nbreak;\\n}\\nv_filteredSectorToColorId[i] = filteredSectorToColorId[i];\\n}\\n#endif\\n#ifdef HITTEST\\nhighp vec3 out_pos = vec3(0.0);\\nv_color            = vec4(0.0);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  pos, v_size);\\ngl_PointSize = 1.0;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},shared:{line:{\"common.glsl\":\"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};\",\"line.frag\":\"uniform lowp float u_blur;\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * lineHalfWidth / line.patternSize.y;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexY, relativeTexX));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}\",\"line.vert\":\"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat refLineWidth = 2.0 * referenceHalfWidth;\\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}\"}},\"symbologyTypeUtils.glsl\":\"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\n#endif\",text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\nreturn alpha * v_color * v_opacity;\\n}\\n#endif\\nvoid main()\\n{\\ngl_FragColor = getColor();\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\n#include <materials/text/hittest.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHalo;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nv_color   = u_isHalo * a_haloColor + (1.0 - u_isHalo) * getColor(a_color, a_bitSet, 1);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nv_edgeDistanceOffset = u_isHalo * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n#ifdef HITTEST\\nhighp vec3 out_pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\\n+ u_tileMat3 * offset, fontSize / 2.);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#else\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#endif\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + 1);\\n}\\nfloat getHighlightBit(in float bitset) {\\nreturn getBit(bitset, 0);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}\\nhighp float rand(in vec2 co) {\\nhighp float a = 12.9898;\\nhighp float b = 78.233;\\nhighp float c = 43758.5453;\\nhighp float dt = dot(co, vec2(a,b));\\nhighp float sn = mod(dt, 3.14);\\nreturn fract(sin(sn) * c);\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/barycentric.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp mat3 u_displayMat3;\\nuniform highp mat3 u_displayViewMat3;\\nuniform highp mat3 u_tileMat3;\\nuniform highp mat3 u_viewMat3;\\nuniform highp float u_pixelRatio;\\nuniform mediump float u_zoomFactor;\\nuniform mediump float u_antialiasing;\\nuniform mediump float u_currentZoom;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\n#ifdef SUPPORTS_TEXTURE_FLOAT\\ntarget.rgba = getAttributeData2(a_id);\\n#else\\nvec4 data0 = getAttributeData2(a_id);\\nvec4 data1 = getAttributeData3(a_id);\\ntarget.r = u88VVToFloat(data0.rg * 255.0);\\ntarget.g = u88VVToFloat(data0.ba * 255.0);\\ntarget.b = u88VVToFloat(data1.rg * 255.0);\\ntarget.a = u88VVToFloat(data1.ba * 255.0);\\n#endif\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE]);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getAttributeData0(a_id).x * 255.0);\\n#else\\nreturn getAttributeData0(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAttributeData1(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getAttributeData0(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrixNoDisplay(float isMapAligned) {\\nreturn isMapAligned * u_viewMat3 * u_tileMat3 + (1.0 - isMapAligned) * u_tileMat3;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * u_displayViewMat3 + (1.0 - isMapAligned) * u_displayMat3;\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef INSIDE\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(OUTSIDE)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(HIGHLIGHT)\\n#if !defined(HIGHLIGHT_ALL)\\npos.z += 2.0 * (1.0 - getHighlightBit(filterFlags));\\n#endif\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, u_currentZoom) + (1.0 - step(minMaxZoom.x, u_currentZoom)));\\nreturn pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float u_vvColorValues[8];\\nuniform vec4 u_vvColors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 u_vvSizeMinMaxValue;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float u_vvSizeScaleStopsValue;\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float u_vvSizeFieldStopsValues[6];\\nuniform float u_vvSizeFieldStopsSizes[6];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float u_vvSizeUnitValueWorldToPixelsRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float u_vvOpacityValues[8];\\nuniform float u_vvOpacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float u_vvRotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - u_vvSizeMinMaxValue.x) / (u_vvSizeMinMaxValue.y - u_vvSizeMinMaxValue.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn u_vvSizeMinMaxValue.z + interpolationRatio * (u_vvSizeMinMaxValue.w - u_vvSizeMinMaxValue.z);\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 6;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= u_vvSizeFieldStopsValues[0]) {\\nreturn u_vvSizeFieldStopsSizes[0];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (u_vvSizeFieldStopsValues[i] >= sizeValue) {\\nfloat f = (sizeValue - u_vvSizeFieldStopsValues[i-1]) / (u_vvSizeFieldStopsValues[i] - u_vvSizeFieldStopsValues[i-1]);\\nreturn mix(u_vvSizeFieldStopsSizes[i-1], u_vvSizeFieldStopsSizes[i], f);\\n}\\n}\\nreturn u_vvSizeFieldStopsSizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn u_vvSizeUnitValueWorldToPixelsRatio * sizeValue;\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= u_vvOpacityValues[0]) {\\nreturn u_vvOpacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (u_vvOpacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - u_vvOpacityValues[i-1]) / (u_vvOpacityValues[i] - u_vvOpacityValues[i-1]);\\nreturn mix(u_vvOpacities[i-1], u_vvOpacities[i], f);\\n}\\n}\\nreturn u_vvOpacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (u_vvRotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= u_vvColorValues[0]) {\\nreturn u_vvColors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (u_vvColorValues[i] >= colorValue) {\\nfloat f = (colorValue - u_vvColorValues[i-1]) / (u_vvColorValues[i] - u_vvColorValues[i-1]);\\nreturn mix(u_vvColors[i-1], u_vvColors[i], f);\\n}\\n}\\nreturn u_vvColors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nreturn u_vvSizeScaleStopsValue;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}\"},overlay:{overlay:{\"overlay.frag\":\"precision lowp float;\\nuniform lowp sampler2D u_texture;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_texture, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"overlay.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_uv;\\nuniform highp mat3 u_dvsMat3;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\nv_uv = a_uv;\\nmediump vec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\\ngl_Position = vec4(pos.xy, 0.0, 1.0);\\n}\"}},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\ngl_FragColor = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nuniform vec2 u_shadowOffset;\\nuniform highp mat3 u_displayViewMat3;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{bitmap:{\"bitmap.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform highp vec2 u_coordScale;\\nuniform lowp float u_opacity;\\n#include <filtering/bicubic.glsl>\\nvoid main() {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\\n#else\\nvec4 color = texture2D(u_texture, v_texcoord);\\n#endif\\nfloat alpha = u_opacity * color.a;\\ngl_FragColor = vec4(alpha * color.rgb, alpha);\\n}\",\"bitmap.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}\",\"contrastBrightness.glsl\":\"uniform float u_contrastOffset;\\nuniform float u_brightnessOffset;\\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\\nfloat maxI = 255.0;\\nfloat mid = 128.0;\\nfloat c = u_contrastOffset;\\nfloat b = u_brightnessOffset;\\nvec4 v;\\nif (c > 0.0 && c < 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\\n} else if (c <= 0.0 && c > -100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\\n} else if (c == 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\\nv = (sign(v) + 1.0) / 2.0;\\n} else if (c == -100.0) {\\nv = vec4(mid, mid, mid, currentPixel.a);\\n}\\nreturn vec4(v.r / 255.0, v.g / 255.0, v.b / 255.0, currentPixel.a);\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n#ifdef LOOKUP_PROJECTION\\nvec4 pv = texture2D(u_transformGrid, coords);\\nreturn vec2(pv.r, pv.g);\\n#endif\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}\"},flow:{\"getFadeOpacity.glsl\":\"uniform float u_decayRate;\\nuniform float u_fadeToZero;\\nfloat getFadeOpacity(float x) {\\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\\n}\",\"getFragmentColor.glsl\":\"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\\nif (dist > featheringStart) {\\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\\n}\\nreturn color;\\n}\",imagery:{\"imagery.frag\":\"precision highp float;\\nvarying vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform float u_Min;\\nuniform float u_Max;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nfloat getIntensity(float v) {\\nreturn u_Min + v * (u_Max - u_Min);\\n}\\nvoid main(void) {\\nvec4 sampled = texture2D(u_texture, v_texcoord);\\nfloat intensity = getIntensity(sampled.r);\\ngl_FragColor = getColor(intensity);\\ngl_FragColor.a *= getOpacity(sampled.r);\\ngl_FragColor.a *= sampled.a;\\ngl_FragColor.rgb *= gl_FragColor.a;\\n}\",\"imagery.vert\":\"attribute vec2 a_position;\\nattribute vec2 a_texcoord;\\nuniform mat3 u_dvsMat3;\\nvarying vec2 v_texcoord;\\nvoid main(void) {\\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},particles:{\"particles.frag\":\"precision highp float;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/getFragmentColor.glsl>\\nvoid main(void) {\\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\\n}\",\"particles.vert\":\"attribute vec4 a_xyts0;\\nattribute vec4 a_xyts1;\\nattribute vec4 a_typeIdDurationSeed;\\nattribute vec4 a_extrudeInfo;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/vv.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nvec2 position0 = a_xyts0.xy;\\nfloat t0 = a_xyts0.z;\\nfloat speed0 = a_xyts0.w;\\nvec2 position1 = a_xyts1.xy;\\nfloat t1 = a_xyts1.z;\\nfloat speed1 = a_xyts1.w;\\nfloat type = a_typeIdDurationSeed.x;\\nfloat id = a_typeIdDurationSeed.y;\\nfloat duration = a_typeIdDurationSeed.z;\\nfloat seed = a_typeIdDurationSeed.w;\\nvec2 e0 = a_extrudeInfo.xy;\\nvec2 e1 = a_extrudeInfo.zw;\\nfloat animationPeriod = duration + u_trailLength;\\nfloat scaledTime = u_time * u_flowSpeed;\\nfloat randomizedTime = scaledTime + seed * animationPeriod;\\nfloat t = mod(randomizedTime, animationPeriod);\\nfloat fUnclamped = (t - t0) / (t1 - t0);\\nfloat f = clamp(fUnclamped, 0.0, 1.0);\\nfloat clampedTime = mix(t0, t1, f);\\nfloat speed = mix(speed0, speed1, f);\\nvec2 extrude;\\nvec2 position;\\nfloat fadeOpacity;\\nfloat introOpacity;\\nif (type == 2.0) {\\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nvec2 ortho = mix(e0, e1, f);\\nvec2 parallel;\\nparallel = normalize(position1 - position0) * 0.5;\\nif (id == 1.0) {\\nextrude = ortho;\\nv_texcoord = vec2(0.5, 0.0);\\n} else if (id == 2.0) {\\nextrude = -ortho;\\nv_texcoord = vec2(0.5, 1.0);\\n} else if (id == 3.0) {\\nextrude = ortho + parallel;\\nv_texcoord = vec2(1.0, 0.0);\\n} else if (id == 4.0) {\\nextrude = -ortho + parallel;\\nv_texcoord = vec2(1.0, 1.0);\\n}\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else {\\nif (fUnclamped < 0.0) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nif (id == 1.0) {\\nextrude = e0;\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 2.0) {\\nextrude = -e0;\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 3.0) {\\nextrude = mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else if (id == 4.0) {\\nextrude = -mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n}\\n}\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_color.a *= fadeOpacity;\\nv_color.a *= mix(1.0, introOpacity, u_introFade);\\nv_color.rgb *= v_color.a;\\n}\"},streamlines:{\"streamlines.frag\":\"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_size;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/getFragmentColor.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\\n}\",\"streamlines.vert\":\"attribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nattribute float a_speed;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_side;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nvoid main(void) {\\nvec4 lineColor = getColor(a_speed);\\nfloat lineOpacity = getOpacity(a_speed);\\nfloat lineSize = getSize(a_speed);\\nvec2 position = a_positionAndSide.xy;\\nv_side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\nv_color = lineColor;\\nv_color.a *= lineOpacity;\\nv_color.rgb *= v_color.a;\\nv_size = lineSize;\\n}\"},\"vv.glsl\":\"#define MAX_STOPS 8\\n#ifdef VV_COLOR\\nuniform float u_color_stops[MAX_STOPS];\\nuniform vec4 u_color_values[MAX_STOPS];\\nuniform int u_color_count;\\n#else\\nuniform vec4 u_color;\\n#endif\\n#ifdef VV_OPACITY\\nuniform float u_opacity_stops[MAX_STOPS];\\nuniform float u_opacity_values[MAX_STOPS];\\nuniform int u_opacity_count;\\n#else\\nuniform float u_opacity;\\n#endif\\n#ifdef VV_SIZE\\nuniform float u_size_stops[MAX_STOPS];\\nuniform float u_size_values[MAX_STOPS];\\nuniform int u_size_count;\\n#else\\nuniform float u_size;\\n#endif\\nuniform float u_featheringOffset;\\nvec4 getColor(float x) {\\n#ifdef VV_COLOR\\nvec4 color = u_color_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_color_count) {\\nbreak;\\n}\\nfloat x1 = u_color_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_color_stops[i];\\nvec4 y2 = u_color_values[i];\\nif (x < x2) {\\nvec4 y1 = u_color_values[i - 1];\\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\ncolor = y2;\\n}\\n}\\n}\\n#else\\nvec4 color = u_color;\\n#endif\\nreturn color;\\n}\\nfloat getOpacity(float x) {\\n#ifdef VV_OPACITY\\nfloat opacity = u_opacity_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_opacity_count) {\\nbreak;\\n}\\nfloat x1 = u_opacity_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_opacity_stops[i];\\nfloat y2 = u_opacity_values[i];\\nif (x < x2) {\\nfloat y1 = u_opacity_values[i - 1];\\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nopacity = y2;\\n}\\n}\\n}\\n#else\\nfloat opacity = u_opacity;\\n#endif\\nreturn opacity;\\n}\\nfloat getSize(float x) {\\n#ifdef VV_SIZE\\nfloat size = u_size_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_size_count) {\\nbreak;\\n}\\nfloat x1 = u_size_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_size_stops[i];\\nfloat y2 = u_size_values[i];\\nif (x < x2) {\\nfloat y1 = u_size_values[i - 1];\\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nsize = y2;\\n}\\n}\\n}\\n#else\\nfloat size = u_size;\\n#endif\\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\\n}\"},hillshade:{\"hillshade.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform int u_hillshadeType;\\nuniform float u_sinZcosAs[6];\\nuniform float u_sinZsinAs[6];\\nuniform float u_cosZs[6];\\nuniform float u_weights[6];\\nuniform vec2 u_factor;\\nuniform float u_minValue;\\nuniform float u_maxValue;\\n#include <raster/lut/colorize.glsl>\\nfloat getNeighborHoodAlpha(float a, float b, float c, float d, float e, float f, float g, float h, float i){\\nif (a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0 || a == 0.0 || a == 0.0 || a==0.0) {\\nreturn 0.0;\\n}\\nelse {\\nreturn e;\\n}\\n}\\nvec3 rgb2hsv(vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\\nvec3 hsv = rgb2hsv(rgb.xyz);\\nhsv.z = hillshade;\\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nif (currentPixel.a == 0.0) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec2 axy = vec2(-1.0, -1.0);\\nvec2 bxy = vec2(0.0, -1.0);\\nvec2 cxy = vec2(1.0, -1.0);\\nvec2 dxy = vec2(-1.0, 0.0);\\nvec2 fxy = vec2(1.0, 0.0);\\nvec2 gxy = vec2(-1.0, 1.0);\\nvec2 hxy = vec2(0.0, 1.0);\\nvec2 ixy = vec2(1.0, 1.0);\\nvec2 onePixel = 1.0 / u_srcImageSize;\\nif (pixelLocation.s < onePixel.s) {\\naxy[0] = 1.0;\\ndxy[0] = 1.0;\\ngxy[0] = 1.0;\\n}\\nif (pixelLocation.t < onePixel.t) {\\naxy[1] = 1.0;\\nbxy[1] = 1.0;\\ncxy[1] = 1.0;\\n}\\nif (pixelLocation.s > 1.0 - onePixel.s) {\\ncxy[0] = -1.0;\\nfxy[0] = -1.0;\\nixy[0] = -1.0;\\n}\\nif (pixelLocation.t > 1.0 - onePixel.t) {\\ngxy[1] = -1.0;\\nhxy[1] = -1.0;\\nixy[1] = -1.0;\\n}\\nvec4 va = texture2D(u_image, pixelLocation + onePixel * axy);\\nvec4 vb = texture2D(u_image, pixelLocation + onePixel * bxy);\\nvec4 vc = texture2D(u_image, pixelLocation + onePixel * cxy);\\nvec4 vd = texture2D(u_image, pixelLocation + onePixel * dxy);\\nvec4 ve = texture2D(u_image, pixelLocation);\\nvec4 vf = texture2D(u_image, pixelLocation + onePixel * fxy);\\nvec4 vg = texture2D(u_image, pixelLocation + onePixel * gxy);\\nvec4 vh = texture2D(u_image, pixelLocation + onePixel * hxy);\\nvec4 vi = texture2D(u_image, pixelLocation + onePixel * ixy);\\nfloat dzx = (vc + 2.0 * vf + vi - va - 2.0 * vd - vg).r * u_factor.s;\\nfloat dzy = (vg + 2.0 * vh + vi - va - 2.0 * vb - vc).r * u_factor.t;\\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\\nfloat hillshade = 0.0;\\nif (u_hillshadeType == 0){\\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\\nif (z < 0.0)  z = 0.0;\\nhillshade = z;\\n} else {\\nfor (int k = 0; k < 6; k++) {\\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\\nif (z < 0.0) z = 0.0;\\nhillshade = hillshade + z * u_weights[k];\\nif (k == 5) break;\\n}\\n}\\nfloat alpha = getNeighborHoodAlpha(va.a, vb.a, vc.a, vd.a, ve.a, vf.a, vg.a, vh.a, vi.a);\\n#ifdef APPLY_COLORMAP\\ngl_FragColor = overlay(ve.r, u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\\n#else\\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\\n#endif\\n}\",\"hillshade.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},lut:{\"colorize.glsl\":\"uniform sampler2D u_colormap;\\nuniform float u_colormapOffset;\\nuniform float u_colormapMaxIndex;\\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\\nvec4 color = texture2D(u_colormap, clrPosition);\\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\\nreturn result;\\n}\",\"lut.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nvec4 result = colorize(currentPixel, 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\\n}\",\"lut.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},magdir:{\"magdir.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}\",\"magdir.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},reproject:{\"reproject.frag\":\"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}\",\"reproject.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}\"},scalar:{\"scalar.frag\":\"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}\",\"scalar.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform bool u_useGamma;\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\n#include <raster/lut/colorize.glsl>\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\\nif (val >= maxCutOff) {\\nreturn maxOutput;\\n} else if (val <= minCutOff) {\\nreturn minOutput;\\n}\\nfloat stretchedVal;\\nif (useGamma) {\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\nif (gamma > 1.0) {\\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\\n}\\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\\n} else {\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n}\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\n#ifdef NOOP\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\nreturn;\\n#endif\\nif (u_bandCount == 1) {\\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n#ifdef APPLY_COLORMAP\\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\\n#else\\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\\n#endif\\n} else {\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\\n}\\n}\",\"stretch.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nuniform mat3 u_worldExtent;\\nvoid main() {\\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ngl_FragColor = 0.75 * color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}\"},util:{\"atan2.glsl\":\"float atan2(in float y, in float x) {\\nfloat t0, t1, t2, t3, t4;\\nt3 = abs(x);\\nt1 = abs(y);\\nt0 = max(t3, t1);\\nt1 = min(t3, t1);\\nt3 = 1.0 / t0;\\nt3 = t1 * t3;\\nt4 = t3 * t3;\\nt0 =         - 0.013480470;\\nt0 = t0 * t4 + 0.057477314;\\nt0 = t0 * t4 - 0.121239071;\\nt0 = t0 * t4 + 0.195635925;\\nt0 = t0 * t4 - 0.332994597;\\nt0 = t0 * t4 + 0.999995630;\\nt3 = t0 * t3;\\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\\nt3 = y < 0.0 ? -t3 : t3;\\nreturn t3;\\n}\",\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\"}};export{e as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport r from\"./shaderRepository.js\";import{ShaderCompiler as e}from\"../../../../../webgl/ShaderCompiler.js\";function o(e){let o=r;return e.split(\"/\").forEach((r=>{o&&(o=o[r])})),o}const t=new e(o);function n(r){return t.resolveIncludes(r)}export{n as resolveIncludes};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as r}from\"./sources/resolver.js\";const e={shaders:{vertexShader:r(\"background/background.vert\"),fragmentShader:r(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])};export{e as background};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isNone as r,isSome as t}from\"../../../../../core/maybe.js\";import{f as e}from\"../../../../../chunks/vec4f32.js\";import{createProgramDescriptor as s}from\"../Utils.js\";import o from\"./WGLBrush.js\";import{background as i}from\"../shaders/BackgroundPrograms.js\";import{StencilOperation as a,CompareFunction as m,DataType as n,PrimitiveType as p}from\"../../../../webgl/enums.js\";import{createProgram as l}from\"../../../../webgl/ProgramTemplate.js\";const c=()=>s(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:n.SHORT}]});class f extends o{constructor(){super(...arguments),this._color=e(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:r}){r.setStencilTestEnabled(!0),r.setBlendingEnabled(!1),r.setFaceCullingEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setStencilOp(a.KEEP,a.KEEP,a.REPLACE),r.setStencilWriteMask(255),r.setStencilFunction(m.ALWAYS,0,255)}draw(e,s){const{context:o,state:a,requestRender:m}=e,f=c(),d=s.getVAO(o,a,f.attributes,f.bufferLayouts);r(d.indexBuffer)||(this._program||(this._program=l(o,i)),!t(m)||this._program.isCompiled?(o.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",a.displayMat3),o.bindVAO(d),o.drawElements(p.TRIANGLES,d.indexBuffer.size,n.UNSIGNED_INT,0),o.bindVAO()):m())}}export{f as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../../core/maybe.js\";import{TEXTURE_BINDING_BITMAP as t}from\"../definitions.js\";import{createProgramDescriptor as r}from\"../Utils.js\";import s from\"./WGLBrush.js\";import{BlendFactor as o,CompareFunction as n,DataType as a,PrimitiveType as i}from\"../../../../webgl/enums.js\";const u=()=>r(\"overlay\",{geometry:[{location:0,name:\"a_pos\",count:2,type:a.FLOAT}],tex:[{location:1,name:\"a_uv\",count:2,type:a.UNSIGNED_SHORT}]});class m extends s{constructor(){super(...arguments),this._desc={vsPath:\"overlay/overlay\",fsPath:\"overlay/overlay\",attributes:new Map([[\"a_pos\",0],[\"a_uv\",1]])}}dispose(){}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setBlendFunctionSeparate(o.ONE,o.ONE_MINUS_SRC_ALPHA,o.ONE,o.ONE_MINUS_SRC_ALPHA),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(n.GREATER,255,255)}draw(r,s){const{context:o,painter:n,requestRender:a}=r;if(!s.isReady)return;const{computedOpacity:m,dvsMat3:c,isWrapAround:d,texture:l}=s;r.timeline.begin(this.name);const p=n.materialManager.getProgram(this._desc);if(e(a)&&!p.isCompiled)return void a();const f=u(),_=s.getVAO(o,f.bufferLayouts,f.attributes);if(!_)return;o.bindVAO(_),o.useProgram(p),o.bindTexture(l,t),p.setUniformMatrix3fv(\"u_dvsMat3\",c),p.setUniform1i(\"u_texture\",t),p.setUniform1f(\"u_opacity\",m);const y=d?10:4;o.drawArrays(i.TRIANGLE_STRIP,0,y),o.bindVAO(),r.timeline.end(this.name)}}export{m as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isNone as t,isSome as e}from\"../../../../../core/maybe.js\";import{MIN_MAX_ZOOM_PRECISION_FACTOR as i,TEXTURE_BINDING_ATTRIBUTE_DATA_0 as s,TEXTURE_BINDING_ATTRIBUTE_DATA_1 as o,TEXTURE_BINDING_ATTRIBUTE_DATA_2 as a,TEXTURE_BINDING_ATTRIBUTE_DATA_3 as r,TEXTURE_BINDING_ATTRIBUTE_DATA_4 as n,TEXTURE_BINDING_ATTRIBUTE_DATA_5 as m}from\"../definitions.js\";import u from\"./WGLBrush.js\";import{MaterialKeyBase as v}from\"../materialKey/MaterialKey.js\";import{BlendFactor as f,CompareFunction as l}from\"../../../../webgl/enums.js\";class p extends u{constructor(){super(...arguments),this._computeDesc=new Map}prepareState({context:t},e,i){i&&i.includes(\"hittest\")?t.setBlendFunctionSeparate(f.ONE,f.ONE,f.ONE,f.ONE):t.setBlendFunctionSeparate(f.ONE,f.ONE_MINUS_SRC_ALPHA,f.ONE,f.ONE_MINUS_SRC_ALPHA),t.setBlendingEnabled(!0),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!0),t.setStencilFunction(l.EQUAL,e.stencilRef,255)}draw(e,i,s){const o=this.getGeometryType();i.commit(e);const a=i.getGeometry(o);t(a)||(e.timeline.begin(this.name),e.attributeView.bindTextures(e.context),a.forEachCommand((t=>{const o=v.load(t.materialKey).symbologyType;this.supportsSymbology(o)&&this.drawGeometry(e,i,t,s)})))}_setSharedUniforms(t,u,v){const{displayLevel:f,pixelRatio:l,state:p,passOptions:c}=u;e(c)&&\"hittest\"===c.type&&(t.setUniform2fv(\"u_hittestPos\",c.position),t.setUniform1f(\"u_hittestDist\",c.distance)),t.setUniform1f(\"u_pixelRatio\",l),t.setUniformMatrix3fv(\"u_tileMat3\",v.transforms.tileMat3),t.setUniformMatrix3fv(\"u_viewMat3\",p.viewMat3),t.setUniformMatrix3fv(\"u_dvsMat3\",v.transforms.dvs),t.setUniformMatrix3fv(\"u_displayViewMat3\",p.displayViewMat3),t.setUniform1f(\"u_currentZoom\",Math.round(f*i)),t.setUniform1i(\"u_attributeTextureSize\",u.attributeView.size),t.setUniform1i(\"u_attributeData0\",s),t.setUniform1i(\"u_attributeData1\",o),t.setUniform1i(\"u_attributeData2\",a),t.setUniform1i(\"u_attributeData3\",r),t.setUniform1i(\"u_attributeData4\",n),t.setUniform1i(\"u_attributeData5\",m)}_setSizeVVUniforms(t,e,i,s){if(t.vvSizeMinMaxValue&&e.setUniform4fv(\"u_vvSizeMinMaxValue\",i.vvSizeMinMaxValue),t.vvSizeScaleStops&&e.setUniform1f(\"u_vvSizeScaleStopsValue\",i.vvSizeScaleStopsValue),t.vvSizeFieldStops){const t=i.getSizeVVFieldStops(s.key.level);e.setUniform1fv(\"u_vvSizeFieldStopsValues\",t.values),e.setUniform1fv(\"u_vvSizeFieldStopsSizes\",t.sizes)}t.vvSizeUnitValue&&e.setUniform1f(\"u_vvSizeUnitValueWorldToPixelsRatio\",i.vvSizeUnitValueToPixelsRatio)}_setColorAndOpacityVVUniforms(t,e,i){t.vvColor&&(e.setUniform1fv(\"u_vvColorValues\",i.vvColorValues),e.setUniform4fv(\"u_vvColors\",i.vvColors)),t.vvOpacity&&(e.setUniform1fv(\"u_vvOpacityValues\",i.vvOpacityValues),e.setUniform1fv(\"u_vvOpacities\",i.vvOpacities))}_setRotationVVUniforms(t,e,i){t.vvRotation&&e.setUniform1f(\"u_vvRotationType\",\"geographic\"===i.vvMaterialParameters.vvRotationType?0:1)}_getTriangleDesc(t,e,i=[\"a_pos\"]){const s=e.bufferLayouts.geometry,o=i.map((t=>s.findIndex((e=>e.name===t)))),a=`${t}-${o.join(\"-\")}`;let r=this._computeDesc.get(a);if(!r){const t=e.strides,i=e.strides.geometry,n=new Map(e.attributes),m=s.map((t=>({...t}))),u=Math.max(...e.attributes.values()),v={geometry:m};let f=0;for(const e of o){const t=s[e];v.geometry.push({count:t.count,name:t.name+\"1\",divisor:t.divisor,normalized:t.normalized,offset:i+t.offset,stride:i,type:t.type}),v.geometry.push({count:t.count,name:t.name+\"2\",divisor:t.divisor,normalized:t.normalized,offset:2*i+t.offset,stride:i,type:t.type}),n.set(t.name+\"1\",u+ ++f),n.set(t.name+\"2\",u+ ++f)}r={bufferLayouts:v,attributes:n,strides:t},this._computeDesc.set(a,r)}return r}}export{p as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as e,unwrapOr as t}from\"../../../../../core/maybe.js\";import{WGLGeometryType as o,WGLSymbologyType as r}from\"../enums.js\";import{createProgramDescriptor as a}from\"../Utils.js\";import i from\"./WGLGeometryBrush.js\";import{FillMaterialKey as n}from\"../materialKey/MaterialKey.js\";import{getTechniqueFromMaterialKey as s}from\"../techniques/utils.js\";import{PrimitiveType as m,DataType as l}from\"../../../../webgl/enums.js\";function u(e){const t={geometry:[{location:0,name:\"a_pos\",count:2,type:l.SHORT},{location:1,name:\"a_id\",count:3,type:l.UNSIGNED_BYTE},{location:2,name:\"a_bitset\",count:1,type:l.UNSIGNED_BYTE},{location:3,name:\"a_color\",count:4,type:l.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_aux1\",count:4,type:l.UNSIGNED_SHORT},{location:5,name:\"a_aux2\",count:4,type:l.SHORT},{location:6,name:\"a_aux3\",count:4,type:l.UNSIGNED_BYTE},{location:7,name:\"a_zoomRange\",count:2,type:l.UNSIGNED_SHORT}]};switch(e.symbologyType){case r.SIMPLE:case r.OUTLINE_FILL_SIMPLE:t.geometry.splice(7,1),t.geometry.splice(4,1)}return{shader:\"materials/fill\",vertexLayout:t}}class c extends i{dispose(){}getGeometryType(){return o.FILL}supportsSymbology(e){return e!==r.DOT_DENSITY}drawGeometry(o,r,i,l){const{context:c,painter:y,rendererInfo:p,requiredLevel:_,passOptions:f,requestRender:d}=o,E=n.load(i.materialKey),S=s(E.data),g=e(f)&&\"hittest\"===f.type,N=y.materialManager,{shader:T,vertexLayout:I,hittestAttributes:U}=t(S.programSpec,u(E));let x=m.TRIANGLES,L=a(E.data,I);g&&(L=this._getTriangleDesc(i.materialKey,L,U),x=m.POINTS);const{attributes:h,bufferLayouts:G}=L,O=N.getMaterialProgram(o,E,T,h,l);if(e(d)&&!g&&!O.isCompiled)return void d();if(c.useProgram(O),this._setSharedUniforms(O,o,r),O.setUniform2f(\"u_tileOffset\",512*r.key.col,512*r.key.row),E.textureBinding){y.textureManager.bindTextures(c,O,E);const e=1/2**(_-r.key.level);O.setUniform1f(\"u_zoomFactor\",e)}const b=1/o.pixelRatio;O.setUniform1f(\"u_blur\",b),O.setUniform1f(\"u_antialiasing\",b),this._setSizeVVUniforms(E,O,p,r),this._setColorAndOpacityVVUniforms(E,O,p);const D=i.target.getVAO(c,G,h,g);let R=i.indexCount,j=i.indexFrom*Uint32Array.BYTES_PER_ELEMENT;g&&(R/=3,j/=3),c.bindVAO(D),this._drawFills(o,r,O,x,R,j)}_drawFills(e,t,o,r,a,i){e.context.drawElements(r,a,l.UNSIGNED_INT,i)}}export{c as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{disposeMaybe as e,isSome as t,isNone as o}from\"../../../../../core/maybe.js\";import r from\"../../../../../core/RandomLCG.js\";import{TEXTURE_BINDING_RENDERER_0 as s,TEXTURE_BINDING_RENDERER_1 as i,TILE_SIZE as n}from\"../definitions.js\";import{WGLGeometryType as d,WGLSymbologyType as a}from\"../enums.js\";import l from\"./WGLGeometryBrushFill.js\";import{assertRendererSchema as _}from\"../techniques/utils.js\";import{BufferObject as u}from\"../../../../webgl/BufferObject.js\";import{DataType as m,PrimitiveType as h,TextureType as c,PixelFormat as f,PixelType as T,TextureSamplingMode as p,TextureWrapMode as x,TargetType as w,DepthStencilTargetType as D,RenderbufferFormat as g,Usage as y}from\"../../../../webgl/enums.js\";import{FramebufferObject as S}from\"../../../../webgl/FramebufferObject.js\";import{Renderbuffer as E}from\"../../../../webgl/Renderbuffer.js\";import{Texture as b}from\"../../../../webgl/Texture.js\";import{VertexArrayObject as F}from\"../../../../webgl/VertexArrayObject.js\";class O extends l{constructor(){super(...arguments),this._dotTextureSize=0,this._dotTextures=null,this._dotSamplers=new Int32Array([s,i]),this._dotVAO=null,this._dotDesc={vsPath:\"dot/dot\",fsPath:\"dot/dot\",attributes:new Map([[\"a_pos\",0]])}}dispose(){super.dispose(),this._disposeTextures(),this._dotFBO=e(this._dotFBO),this._dotVAO=e(this._dotVAO)}getGeometryType(){return d.FILL}supportsSymbology(e){return e===a.DOT_DENSITY}_drawFills(e,o,r,s,i,n){const{passOptions:d}=e;if(t(d)&&\"hittest\"===d.type)super._drawFills(e,o,r,s,i,n);else{const t=this._drawDotLocations(e,o,r,i,n);this._drawDotDensity(e,o,t)}}_drawDotDensity(e,o,r){const{context:s,painter:i,rendererInfo:n,requestRender:d}=e,a=i.materialManager.getProgram(this._dotDesc);if(t(d)&&!a.isCompiled)return void d();const{rendererSchema:l}=n;_(l,\"dot-density\");const u=this._createDotDensityMesh(s,this._dotDesc.attributes,{geometry:[{name:\"a_pos\",count:2,type:m.SHORT,divisor:0,normalized:!1,offset:0,stride:4}]});s.setStencilTestEnabled(!0),s.useProgram(a),a.setUniform1f(\"u_tileZoomFactor\",1),a.setUniform1i(\"u_texture\",this._dotSamplers[0]),a.setUniform1f(\"u_dotSize\",Math.max(l.dotSize,1)),a.setUniform1f(\"u_pixelRatio\",window.devicePixelRatio),this._setSharedUniforms(a,e,o),s.bindTexture(r,this._dotSamplers[0]),s.bindVAO(u),s.drawArrays(h.POINTS,0,262144)}_drawDotLocations(e,t,o,r,s){const{context:i,rendererInfo:d,requiredLevel:a}=e,l=i.getViewport(),{rendererSchema:u}=d;_(u,\"dot-density\");const{dotScale:c,colors:f,activeDots:T,backgroundColor:p,dotValue:x}=u;i.setViewport(0,0,512,512);const w=i.getBoundFramebufferObject(),D=this._createFBO(i);i.bindFramebuffer(D),i.setClearColor(0,0,0,0),i.clear(i.gl.COLOR_BUFFER_BIT|i.gl.STENCIL_BUFFER_BIT),i.setStencilTestEnabled(!1);const g=1/2**(a-t.key.level),y=n,S=y*window.devicePixelRatio*y*window.devicePixelRatio,E=1/g*(1/g),b=c?e.state.scale/c:1;return o.setUniform1f(\"u_tileZoomFactor\",g),o.setUniform1f(\"u_tileDotsOverArea\",S/(n*window.devicePixelRatio*n*window.devicePixelRatio)),o.setUniformMatrix4fv(\"u_dotColors\",f),o.setUniform4fv(\"u_isActive\",T),o.setUniform4fv(\"u_dotBackgroundColor\",p),o.setUniform1f(\"u_dotValue\",Math.max(1,x*b*E)),this._bindDotDensityTextures(i,o,d,y),i.drawElements(h.TRIANGLES,r,m.UNSIGNED_INT,s),i.setViewport(l.x,l.y,l.width,l.height),i.bindFramebuffer(w),D.colorTexture}_createFBO(e){if(o(this._dotFBO)){const t=512,o=512,r={target:c.TEXTURE_2D,pixelFormat:f.RGBA,dataType:T.UNSIGNED_BYTE,samplingMode:p.NEAREST,wrapMode:x.CLAMP_TO_EDGE,width:t,height:o},s={colorTarget:w.TEXTURE,depthStencilTarget:D.DEPTH_STENCIL_RENDER_BUFFER},i=new E(e,{width:t,height:o,internalFormat:g.DEPTH_STENCIL});this._dotFBO=new S(e,s,r,i)}return this._dotFBO}_disposeTextures(){if(this._dotTextures){for(let e=0;e<this._dotTextures.length;e++)this._dotTextures[e].dispose();this._dotTextures=null}}_bindDotDensityTextures(e,t,o,r){const{rendererSchema:s}=o;_(s,\"dot-density\");const i=this._createDotDensityTextures(e,r,s.seed);t.setUniform1iv(\"u_dotTextures\",this._dotSamplers);for(let n=0;n<i.length;n++)e.bindTexture(i[n],this._dotSamplers[n])}_createDotDensityMesh(e,t,r){if(o(this._dotVAO)){const o=2,s=new Int16Array(262144*o);for(let e=0;e<512;e++)for(let t=0;t<512;t++)s[o*(t+512*e)]=t,s[o*(t+512*e)+1]=e;const i=u.createVertex(e,y.STATIC_DRAW,s);this._dotVAO=new F(e,t,r,{geometry:i},null)}return this._dotVAO}_createDotDensityTextures(e,t,o){if(this._dotTextureSize===t&&this._seed===o||(this._disposeTextures(),this._dotTextureSize=t,this._seed=o),null===this._dotTextures){const s=new r(o);this._dotTextures=[this._allocDotDensityTexture(e,t,s),this._allocDotDensityTexture(e,t,s)]}return this._dotTextures}_allocDotDensityTexture(e,t,o){const r=new Float32Array(t*t*4);for(let s=0;s<r.length;s++)r[s]=o.getFloat();return new b(e,{wrapMode:x.REPEAT,pixelFormat:f.RGBA,dataType:T.FLOAT,samplingMode:p.NEAREST,width:t,height:t},r)}}export{O as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as t,unwrapOr as e}from\"../../../../../core/maybe.js\";import{WGLGeometryType as o,WGLSymbologyType as a}from\"../enums.js\";import{createProgramDescriptor as r}from\"../Utils.js\";import i from\"./WGLGeometryBrush.js\";import{MarkerMaterialKey as n}from\"../materialKey/MaterialKey.js\";import{getTechniqueFromMaterialKey as s}from\"../techniques/utils.js\";import{DataType as m,PrimitiveType as l}from\"../../../../webgl/enums.js\";const u={shader:\"materials/icon\",vertexLayout:{geometry:[{location:0,name:\"a_pos\",count:2,type:m.SHORT},{location:1,name:\"a_vertexOffset\",count:2,type:m.SHORT},{location:2,name:\"a_texCoords\",count:2,type:m.UNSIGNED_SHORT},{location:3,name:\"a_bitSetAndDistRatio\",count:2,type:m.UNSIGNED_SHORT},{location:4,name:\"a_id\",count:4,type:m.UNSIGNED_BYTE},{location:5,name:\"a_color\",count:4,type:m.UNSIGNED_BYTE,normalized:!0},{location:6,name:\"a_outlineColor\",count:4,type:m.UNSIGNED_BYTE,normalized:!0},{location:7,name:\"a_sizeAndOutlineWidth\",count:4,type:m.UNSIGNED_BYTE},{location:8,name:\"a_zoomRange\",count:2,type:m.UNSIGNED_SHORT}]},hittestAttributes:[\"a_vertexOffset\",\"a_texCoords\"]};class d extends i{dispose(){}getGeometryType(){return o.MARKER}supportsSymbology(t){return t!==a.HEATMAP&&t!==a.PIE_CHART}drawGeometry(o,a,i,m){const{context:d,painter:c,rendererInfo:p,state:y,passOptions:_,requestRender:f}=o,E=n.load(i.materialKey),S=s(E.data),N=t(_)&&\"hittest\"===_.type,{shader:T,vertexLayout:g,hittestAttributes:x}=e(S.programSpec,u);let h=l.TRIANGLES,R=r(E.data,g);N&&(R=this._getTriangleDesc(i.materialKey,R,x),h=l.POINTS);const{attributes:U,bufferLayouts:A}=R,O=c.materialManager.getMaterialProgram(o,E,T,U,m);if(t(f)&&!N&&!O.isCompiled)return void f();d.useProgram(O),E.textureBinding&&c.textureManager.bindTextures(d,O,E,!0),this._setSharedUniforms(O,o,a);const G=E.vvRotation?y.displayViewMat3:y.displayMat3;O.setUniformMatrix3fv(\"u_displayMat3\",G),this._setSizeVVUniforms(E,O,p,a),this._setColorAndOpacityVVUniforms(E,O,p),this._setRotationVVUniforms(E,O,p);const I=i.target.getVAO(d,A,U,N);let M=i.indexCount,b=i.indexFrom*Uint32Array.BYTES_PER_ELEMENT;N&&(M/=3,b/=3),d.bindVAO(I),this._drawMarkers(o,a,O,h,M,b,N),d.bindVAO(null)}_drawMarkers(t,e,o,a,r,i,n){t.context.drawElements(a,r,m.UNSIGNED_INT,i)}}export{d as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport e from\"../../../../../core/Logger.js\";import{disposeMaybe as t,isNone as r}from\"../../../../../core/maybe.js\";import{WGLSymbologyType as a}from\"../enums.js\";import i from\"../VertexStream.js\";import s from\"./WGLGeometryBrushMarker.js\";import{assertRendererSchema as o}from\"../techniques/utils.js\";import{ContextType as u}from\"../../../../webgl/context-util.js\";import{DataType as n,BlendFactor as l,ClearBufferBit as m,TextureType as d,PixelFormat as h,PixelType as c,SizedPixelFormat as f,TextureWrapMode as _,TextureSamplingMode as p}from\"../../../../webgl/enums.js\";import{FramebufferObject as g}from\"../../../../webgl/FramebufferObject.js\";import{Texture as T}from\"../../../../webgl/Texture.js\";const x=e.getLogger(\"esri.views.2d.engine.webgl.brushes.WGLBrushHeatmap\"),F={vsPath:\"heatmap/heatmapResolve\",fsPath:\"heatmap/heatmapResolve\",attributes:new Map([[\"a_position\",0]])};class b extends s{supportsSymbology(e){return e===a.HEATMAP}dispose(){super.dispose(),this._accumulateOutputTexture=t(this._accumulateOutputTexture),this._accumulateFramebuffer=t(this._accumulateFramebuffer),this._resolveGradientTexture=t(this._resolveGradientTexture),this._tileQuad=t(this._tileQuad)}drawGeometry(e,t,r,a){const{defines:i}=this._loadQualityProfile(e.context);super.drawGeometry(e,t,r,a?[...a,...i]:i)}_drawMarkers(e,t,r,a,i,s,o){const{context:u}=e,l=u.getBoundFramebufferObject(),m=u.getViewport();this._prepareAccumulatePass(e,t,r,o),u.drawElements(a,i,n.UNSIGNED_INT,s),o||this._drawResolvePass(e,t,l,m)}_prepareAccumulatePass(e,t,r,a){const{context:i,rendererInfo:s,state:u,displayLevel:n}=e,{rendererSchema:d}=s;o(d,\"heatmap\");const{referenceScale:h,radius:c,isFieldActive:f}=d;this._loadResources(i),this._updateResources(d);const _=c*(0!==h?h/u.scale:1)*2**(t.key.level-n);r.setUniform1f(\"u_radius\",_),a||(i.bindFramebuffer(this._accumulateFramebuffer),r.setUniform1f(\"u_isFieldActive\",f),i.setViewport(0,0,this._accumulateFramebuffer.width,this._accumulateFramebuffer.height),i.setBlendingEnabled(!0),i.setBlendFunction(l.ONE,l.ONE),i.setClearColor(0,0,0,0),i.clear(m.COLOR_BUFFER_BIT))}_drawResolvePass(e,t,r,a){const{context:i,painter:s,rendererInfo:u}=e,{rendererSchema:n}=u;o(n,\"heatmap\");const{radius:m,minDensity:d,densityRange:h}=n,{defines:c}=this._loadQualityProfile(i),f=s.materialManager.getProgram(F,c);i.useProgram(f),this._setSharedUniforms(f,e,t),i.bindFramebuffer(r),i.setViewport(0,0,a.width,a.height),i.setBlendFunction(l.ONE,l.ONE_MINUS_SRC_ALPHA),i.bindTexture(this._accumulateOutputTexture,8),i.bindTexture(this._resolveGradientTexture,9),f.setUniform1i(\"u_texture\",8),f.setUniform1i(\"u_gradient\",9),f.setUniform2f(\"u_densityMinAndInvRange\",d,1/h),f.setUniform1f(\"u_densityNormalization\",3/(m*m*Math.PI)),this._tileQuad.draw()}_loadResources(e){const t=e.type===u.WEBGL2,{dataType:r,samplingMode:a,shadingRate:s}=this._loadQualityProfile(e);this._accumulateOutputTexture??(this._accumulateOutputTexture=new T(e,{target:d.TEXTURE_2D,pixelFormat:t?h.RED:h.RGBA,internalFormat:t?r===c.FLOAT?f.R32F:f.R16F:h.RGBA,dataType:r,samplingMode:a,wrapMode:_.CLAMP_TO_EDGE,width:Math.round(512*s),height:Math.round(512*s)})),this._accumulateFramebuffer??(this._accumulateFramebuffer=new g(e,{},this._accumulateOutputTexture)),this._resolveGradientTexture??(this._resolveGradientTexture=new T(e,{target:d.TEXTURE_2D,pixelFormat:h.RGBA,dataType:c.UNSIGNED_BYTE,samplingMode:p.LINEAR,wrapMode:_.CLAMP_TO_EDGE})),this._tileQuad??(this._tileQuad=new i(e,[0,0,1,0,0,1,1,1]))}_updateResources(e){const{gradientHash:t,gradient:r}=e;this._prevGradientHash!==t&&(this._resolveGradientTexture.resize(r.length/4,1),this._resolveGradientTexture.setData(r),this._prevGradientHash=t)}_loadQualityProfile(e){if(r(this._qualityProfile)){const{textureFloat:t,colorBufferFloat:r}=e.capabilities,{textureFloat:a,textureFloatLinear:i,textureHalfFloat:s,textureHalfFloatLinear:o,HALF_FLOAT:u}=t,{textureFloat:n,textureHalfFloat:l,floatBlend:m}=r;let d,h;const f=a&&n&&m,_=s&&l;f&&i?(d=c.FLOAT,h=p.LINEAR):_&&o?(d=u,h=p.LINEAR):f?(d=c.FLOAT,h=p.NEAREST):_?(d=u,h=p.NEAREST):x.error(\"Missing webgl extensions for heatmap!\"),h===p.NEAREST&&x.warnOnce(\"Missing linear filtering webgl extension(s). Heatmap quality may be reduced.\"),this._qualityProfile={dataType:d,samplingMode:h,shadingRate:.5,defines:d===u?[\"heatmapPrecisionHalfFloat\"]:[]}}return this._qualityProfile}}export{b as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as e}from\"./sources/resolver.js\";const r={shaders:{vertexShader:e(\"tileInfo/tileInfo.vert\"),fragmentShader:e(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])};export{r as tileInfo};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as t}from\"../../../../../core/maybe.js\";import{f as e}from\"../../../../../chunks/vec4f32.js\";import{Pos2b as r}from\"../DefaultVertexAttributeLayouts.js\";import i from\"./WGLBrush.js\";import{background as o}from\"../shaders/BackgroundPrograms.js\";import{tileInfo as s}from\"../shaders/TileInfoPrograms.js\";import{BufferObject as n}from\"../../../../webgl/BufferObject.js\";import{BlendFactor as a,PrimitiveType as l,Usage as u,TextureType as m,PixelFormat as _,PixelType as f,TextureSamplingMode as h,TextureWrapMode as c}from\"../../../../webgl/enums.js\";import{createProgram as g}from\"../../../../webgl/ProgramTemplate.js\";import{Texture as d}from\"../../../../webgl/Texture.js\";import{VertexArrayObject as p}from\"../../../../webgl/VertexArrayObject.js\";const A=300,b=32;class x extends i{constructor(){super(...arguments),this._color=e(1,0,0,1)}dispose(){this._outlineProgram&&(this._outlineProgram.dispose(),this._outlineProgram=null),this._tileInfoProgram&&(this._tileInfoProgram.dispose(),this._tileInfoProgram=null),this._outlineVertexArrayObject&&(this._outlineVertexArrayObject.dispose(),this._outlineVertexArrayObject=null),this._tileInfoVertexArrayObject&&(this._tileInfoVertexArrayObject.dispose(),this._tileInfoVertexArrayObject=null),this._canvas=null}prepareState({context:t}){t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1)}draw(e,r){const{context:i,requestRender:o}=e;if(!r.isReady)return;if(this._loadWGLResources(i),t(o)&&(!this._outlineProgram.isCompiled||!this._tileInfoProgram.isCompiled))return void o();i.bindVAO(this._outlineVertexArrayObject),i.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),this._outlineProgram.setUniform2f(\"u_coord_range\",r.rangeX,r.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),i.drawArrays(l.LINE_STRIP,0,4);const s=this._getTexture(i,r);s?(i.bindVAO(this._tileInfoVertexArrayObject),i.useProgram(this._tileInfoProgram),i.bindTexture(s,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",r.rangeX/r.width,r.rangeY/r.height),this._tileInfoProgram.setUniform2f(\"u_delta\",8,8),this._tileInfoProgram.setUniform2f(\"u_dimensions\",s.descriptor.width,s.descriptor.height),i.drawArrays(l.TRIANGLE_STRIP,0,4),i.bindVAO()):i.bindVAO()}_loadWGLResources(t){if(this._outlineProgram&&this._tileInfoProgram)return;const e=g(t,o),i=g(t,s),a=new Int8Array([0,0,1,0,1,1,0,1]),l=n.createVertex(t,u.STATIC_DRAW,a),m=new p(t,o.attributes,r,{geometry:l}),_=new Int8Array([0,0,1,0,0,1,1,1]),f=n.createVertex(t,u.STATIC_DRAW,_),h=new p(t,s.attributes,r,{geometry:f});this._outlineProgram=e,this._tileInfoProgram=i,this._outlineVertexArrayObject=m,this._tileInfoVertexArrayObject=h}_getTexture(t,e){if(e.texture&&e.triangleCountReportedInDebug===e.triangleCount)return e.texture;e.triangleCountReportedInDebug=e.triangleCount,this._canvas||(this._canvas=document.createElement(\"canvas\"),this._canvas.setAttribute(\"id\",\"canvas2d\"),this._canvas.setAttribute(\"width\",`${A}`),this._canvas.setAttribute(\"height\",`${b}`),this._canvas.setAttribute(\"style\",\"display:none\"));const r=e.triangleCount;let i=e.key.id;e.triangleCount>0&&(i+=`, ${r}`);const o=this._canvas,s=o.getContext(\"2d\");return s.font=\"24px sans-serif\",s.textAlign=\"left\",s.textBaseline=\"top\",s.clearRect(0,0,A,b),r>1e5?(s.fillStyle=\"red\",s.fillRect(0,0,A,b),s.fillStyle=\"black\"):(s.clearRect(0,0,A,b),s.fillStyle=\"blue\"),s.fillText(i,0,0),e.texture=new d(t,{target:m.TEXTURE_2D,pixelFormat:_.RGBA,dataType:f.UNSIGNED_BYTE,samplingMode:h.NEAREST,wrapMode:c.CLAMP_TO_EDGE},o),e.texture}}export{x as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{WGLSymbologyType as o}from\"../enums.js\";import r from\"./WGLGeometryBrushMarker.js\";import{assertRendererSchema as e}from\"../techniques/utils.js\";import{DataType as t}from\"../../../../webgl/enums.js\";class s extends r{supportsSymbology(r){return r===o.PIE_CHART}_drawMarkers(o,r,s,n,l,f,u){const{context:i}=o,{rendererInfo:m}=o,{rendererSchema:a}=m;e(a,\"pie-chart\"),s.setUniform4fv(\"u_colors\",a.colors),s.setUniform4fv(\"u_defaultColor\",a.defaultColor),s.setUniform4fv(\"u_othersColor\",a.othersColor),s.setUniform4fv(\"u_outlineColor\",a.outlineColor),s.setUniform1f(\"u_donutRatio\",a.holePercentage),s.setUniform1f(\"u_sectorThreshold\",a.sectorThreshold),s.setUniform1f(\"u_outlineWidth\",a.outlineWidth),i.drawElements(n,l,t.UNSIGNED_INT,f)}}export{s as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as r}from\"../../../../../core/maybe.js\";import{f as t}from\"../../../../../chunks/vec4f32.js\";import{Pos2b as e}from\"../DefaultVertexAttributeLayouts.js\";import i from\"./WGLBrush.js\";import{background as s}from\"../shaders/BackgroundPrograms.js\";import{BufferObject as o}from\"../../../../webgl/BufferObject.js\";import{StencilOperation as a,Face as l,CompareFunction as n,PrimitiveType as d,Usage as m}from\"../../../../webgl/enums.js\";import{createProgram as _}from\"../../../../webgl/ProgramTemplate.js\";import{VertexArrayObject as c}from\"../../../../webgl/VertexArrayObject.js\";class h extends i{constructor(){super(...arguments),this._color=t(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:r},t){r.setDepthWriteEnabled(!1),r.setDepthTestEnabled(!1),r.setStencilTestEnabled(!0),r.setBlendingEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setStencilOp(a.KEEP,a.KEEP,a.REPLACE),r.setStencilWriteMask(255),r.setStencilFunctionSeparate(l.FRONT_AND_BACK,n.GREATER,t.stencilRef,255)}draw(t,e){const{context:i,requestRender:s}=t;this._initialized||this._initialize(i),!r(s)||this._solidProgram.isCompiled?(i.bindVAO(this._solidVertexArrayObject),i.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),this._solidProgram.setUniform2fv(\"u_coord_range\",[e.rangeX,e.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),i.drawArrays(d.TRIANGLE_STRIP,0,4),i.bindVAO()):s()}_initialize(r){if(this._initialized)return!0;const t=_(r,s);if(!t)return!1;const i=new Int8Array([0,0,1,0,0,1,1,1]),a=o.createVertex(r,m.STATIC_DRAW,i),l=new c(r,s.attributes,e,{geometry:a});return this._solidProgram=t,this._solidVertexArrayObject=l,this._initialized=!0,!0}}export{h as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{nextPowerOfTwo as t}from\"../../../../../core/mathUtils.js\";import{isSome as r}from\"../../../../../core/maybe.js\";import{c as e}from\"../../../../../chunks/mat3f32.js\";import{f as o}from\"../../../../../chunks/vec4f32.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as i,VTL_HIGH_RES_CUTOFF as s}from\"../definitions.js\";import{WGLDrawPhase as a}from\"../enums.js\";import{u32to4Xu8 as n}from\"../number.js\";import c from\"./WGLBrush.js\";import{BufferObject as m}from\"../../../../webgl/BufferObject.js\";import{TextureSamplingMode as f,CompareFunction as l,PrimitiveType as u,Usage as p}from\"../../../../webgl/enums.js\";import{VertexArrayObject as _}from\"../../../../webgl/VertexArrayObject.js\";class d extends c{constructor(){super(...arguments),this._color=o(1,0,0,1),this._patternMatrix=e(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(e,o){const{context:c,painter:m,styleLayerUID:p,requestRender:_}=e;this._loadWGLResources(e);const d=e.displayLevel,h=e.styleLayer,g=h.backgroundMaterial,v=m.vectorTilesMaterialManager,b=h.getPaintValue(\"background-color\",d),y=h.getPaintValue(\"background-opacity\",d),M=h.getPaintValue(\"background-pattern\",d),x=void 0!==M,j=b[3]*y,U=1|window.devicePixelRatio,L=e.spriteMosaic;let w,A;const P=U>s?2:1,I=e.drawPhase===a.HITTEST,R=this._programOptions;R.id=I,R.pattern=x;const k=v.getMaterialProgram(c,g,R);if(!r(_)||I||k.isCompiled){if(c.bindVAO(this._vao),c.useProgram(k),x){const t=L.getMosaicItemPosition(M,!0);if(r(t)){const{tl:e,br:o,page:s}=t;w=o[0]-e[0],A=o[1]-e[1];const a=L.getPageSize(s);r(a)&&(L.bind(c,f.LINEAR,s,i),k.setUniform4f(\"u_tlbr\",e[0],e[1],o[0],o[1]),k.setUniform2fv(\"u_mosaicSize\",a),k.setUniform1i(\"u_texture\",i))}k.setUniform1f(\"u_opacity\",y)}else this._color[0]=j*b[0],this._color[1]=j*b[1],this._color[2]=j*b[2],this._color[3]=j,k.setUniform4fv(\"u_color\",this._color);if(k.setUniform1f(\"u_depth\",h.z||0),I){const t=n(p+1);k.setUniform4fv(\"u_id\",t)}for(const r of o){if(k.setUniform1f(\"u_coord_range\",r.rangeX),k.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.dvs),x){const e=Math.max(2**(Math.round(d)-r.key.level),1),o=P*r.width*e,i=o/t(w),s=o/t(A);this._patternMatrix[0]=i,this._patternMatrix[4]=s,k.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}c.setStencilFunction(l.EQUAL,r.stencilRef,255),c.drawArrays(u.TRIANGLE_STRIP,0,4)}}else _()}_loadWGLResources(t){if(this._vao)return;const{context:r,styleLayer:e}=t,o=e.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),s=m.createVertex(r,p.STATIC_DRAW,i),a=new _(r,o.getAttributeLocations(),o.getLayoutInfo(),{geometry:s});this._vao=a}}export{d as WGLBrushVTLBackground};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as e,isNone as t}from\"../../../../../core/maybe.js\";import{TranslateAnchor as r}from\"../../vectorTiles/style/StyleDefinition.js\";import{WGLDrawPhase as i}from\"../enums.js\";import{u32to4Xu8 as n}from\"../number.js\";import a from\"./WGLBrush.js\";import{CompareFunction as s,PrimitiveType as o,DataType as l}from\"../../../../webgl/enums.js\";class c extends a{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(a,c){const{context:m,displayLevel:f,requiredLevel:u,state:d,drawPhase:p,painter:y,spriteMosaic:g,styleLayerUID:v,requestRender:E}=a;if(!c.some((e=>e.layerData.get(v)?.circleIndexCount??!1)))return;const M=a.styleLayer,T=M.circleMaterial,x=y.vectorTilesMaterialManager,I=1.2,U=M.getPaintValue(\"circle-translate\",f),_=M.getPaintValue(\"circle-translate-anchor\",f),h=p===i.HITTEST,L=this._programOptions;L.id=h;const R=x.getMaterialProgram(m,T,L);if(!h&&e(E)&&!R.isCompiled)return void E();m.useProgram(R),R.setUniformMatrix3fv(\"u_displayMat3\",_===r.VIEWPORT?d.displayMat3:d.displayViewMat3),R.setUniform2fv(\"u_circleTranslation\",U),R.setUniform1f(\"u_depth\",M.z),R.setUniform1f(\"u_antialiasingWidth\",I);let S=-1;if(h){const e=n(v+1);R.setUniform4fv(\"u_id\",e)}for(const e of c){if(!e.layerData.has(v))continue;e.key.level!==S&&(S=e.key.level,T.setDataUniforms(R,f,M,S,g));const r=e.layerData.get(v);if(!r.circleIndexCount)continue;r.prepareForRendering(m);const i=r.circleVertexArrayObject;t(i)||(m.bindVAO(i),R.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),u!==e.key.level?m.setStencilFunction(s.EQUAL,e.stencilRef,255):m.setStencilFunction(s.GREATER,255,255),m.drawElements(o.TRIANGLES,r.circleIndexCount,l.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*r.circleIndexStart),e.triangleCount+=r.circleIndexCount/3)}}}export{c as WGLBrushVTLCircle};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isNone as t,isSome as e}from\"../../../../../core/maybe.js\";import{TranslateAnchor as i}from\"../../vectorTiles/style/StyleDefinition.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as r,VTL_HIGH_RES_CUTOFF as n}from\"../definitions.js\";import{WGLDrawPhase as a}from\"../enums.js\";import{u32to4Xu8 as o}from\"../number.js\";import s from\"./WGLBrush.js\";import{TextureSamplingMode as l,CompareFunction as f,PrimitiveType as u,DataType as d}from\"../../../../webgl/enums.js\";const c=1/65536;class m extends s{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(t,e){const{displayLevel:i,drawPhase:r,renderPass:n,spriteMosaic:s,styleLayerUID:l}=t;let f=!1;for(const a of e)if(a.layerData.has(l)){const t=a.layerData.get(l);if(t.fillIndexCount>0||t.outlineIndexCount>0){f=!0;break}}if(!f)return;const u=t.styleLayer,d=u.getPaintProperty(\"fill-pattern\"),c=void 0!==d,m=c&&d.isDataDriven;let p;if(c&&!m){const t=d.getValue(i);p=s.getMosaicItemPosition(t,!0)}const y=!c&&u.getPaintValue(\"fill-antialias\",i);let g=!0,_=1;if(!c){const t=u.getPaintProperty(\"fill-color\"),e=u.getPaintProperty(\"fill-opacity\");if(!t?.isDataDriven&&!e?.isDataDriven){const t=u.getPaintValue(\"fill-color\",i);_=u.getPaintValue(\"fill-opacity\",i)*t[3],_>=1&&(g=!1)}}if(g&&\"opaque\"===n)return;let E;r===a.HITTEST&&(E=o(l+1));const v=u.getPaintValue(\"fill-translate\",i),M=u.getPaintValue(\"fill-translate-anchor\",i);(g||\"translucent\"!==n)&&this._drawFill(t,l,u,e,v,M,c,p,m,E);const P=!u.hasDataDrivenOutlineColor&&u.outlineUsesFillColor&&_<1;y&&\"opaque\"!==n&&!P&&this._drawOutline(t,l,u,e,v,M,E)}_drawFill(o,s,m,p,y,g,_,E,v,M){if(_&&!v&&t(E))return;const{context:P,displayLevel:I,state:T,drawPhase:U,painter:x,pixelRatio:h,spriteMosaic:D,requestRender:S}=o,R=m.fillMaterial,N=x.vectorTilesMaterialManager,w=h>n?2:1,L=U===a.HITTEST,A=this._fillProgramOptions;A.id=L,A.pattern=_;const C=N.getMaterialProgram(P,R,A);if(e(S)&&!L&&!C.isCompiled)return void S();if(P.useProgram(C),e(E)){const{page:t}=E,i=D.getPageSize(t);e(i)&&(D.bind(P,l.LINEAR,t,r),C.setUniform2fv(\"u_mosaicSize\",i),C.setUniform1i(\"u_texture\",r))}C.setUniformMatrix3fv(\"u_displayMat3\",g===i.VIEWPORT?T.displayMat3:T.displayViewMat3),C.setUniform2fv(\"u_fillTranslation\",y),C.setUniform1f(\"u_depth\",m.z+c),L&&C.setUniform4fv(\"u_id\",M);let V=-1;for(const i of p){if(!i.layerData.has(s))continue;i.key.level!==V&&(V=i.key.level,R.setDataUniforms(C,I,m,V,D));const n=i.layerData.get(s);if(!n.fillIndexCount)continue;n.prepareForRendering(P);const a=n.fillVertexArrayObject;if(!t(a)){if(P.bindVAO(a),C.setUniformMatrix3fv(\"u_dvsMat3\",i.transforms.dvs),P.setStencilFunction(f.EQUAL,i.stencilRef,255),_){const t=Math.max(2**(Math.round(I)-i.key.level),1),e=i.rangeX/(w*i.width*t);C.setUniform1f(\"u_patternFactor\",e)}if(v){const t=n.patternMap;if(!t)continue;for(const[i,n]of t){const t=D.getPageSize(i);e(t)&&(D.bind(P,l.LINEAR,i,r),C.setUniform2fv(\"u_mosaicSize\",t),C.setUniform1i(\"u_texture\",r),P.drawElements(u.TRIANGLES,n[1],d.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else P.drawElements(u.TRIANGLES,n.fillIndexCount,d.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n.fillIndexStart);i.triangleCount+=n.fillIndexCount/3}}}_drawOutline(r,n,o,s,l,m,p){const{context:y,displayLevel:g,state:_,drawPhase:E,painter:v,pixelRatio:M,spriteMosaic:P,requestRender:I}=r,T=o.outlineMaterial,U=v.vectorTilesMaterialManager,x=.75/M,h=E===a.HITTEST,D=this._outlineProgramOptions;D.id=h;const S=U.getMaterialProgram(y,T,D);if(e(I)&&!h&&!S.isCompiled)return void I();y.useProgram(S),S.setUniformMatrix3fv(\"u_displayMat3\",m===i.VIEWPORT?_.displayMat3:_.displayViewMat3),S.setUniform2fv(\"u_fillTranslation\",l),S.setUniform1f(\"u_depth\",o.z+c),S.setUniform1f(\"u_outline_width\",x),h&&S.setUniform4fv(\"u_id\",p);let R=-1;for(const e of s){if(!e.layerData.has(n))continue;e.key.level!==R&&(R=e.key.level,T.setDataUniforms(S,g,o,R,P));const i=e.layerData.get(n);if(i.prepareForRendering(y),!i.outlineIndexCount)continue;const r=i.outlineVertexArrayObject;t(r)||(y.bindVAO(r),S.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),y.setStencilFunction(f.EQUAL,e.stencilRef,255),y.drawElements(u.TRIANGLES,i.outlineIndexCount,d.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i.outlineIndexStart),e.triangleCount+=i.outlineIndexCount/3)}}}export{m as WGLBrushVTLFill};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as e,isNone as t}from\"../../../../../core/maybe.js\";import{TranslateAnchor as i}from\"../../vectorTiles/style/StyleDefinition.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as n}from\"../definitions.js\";import{WGLDrawPhase as r}from\"../enums.js\";import{u32to4Xu8 as a}from\"../number.js\";import o from\"./WGLBrush.js\";import{TextureSamplingMode as s,CompareFunction as l,PrimitiveType as f,DataType as m}from\"../../../../webgl/enums.js\";class u extends o{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(o,u){const{context:c,displayLevel:d,state:p,drawPhase:g,painter:y,pixelRatio:E,spriteMosaic:M,styleLayerUID:_,requestRender:v}=o;if(!u.some((e=>e.layerData.get(_)?.lineIndexCount??!1)))return;const U=o.styleLayer,I=U.lineMaterial,P=y.vectorTilesMaterialManager,x=U.getPaintValue(\"line-translate\",d),T=U.getPaintValue(\"line-translate-anchor\",d),S=U.getPaintProperty(\"line-pattern\"),D=void 0!==S,L=D&&S.isDataDriven;let N,R;if(D&&!L){const e=S.getValue(d);N=M.getMosaicItemPosition(e)}let V=!1;if(!D){const e=U.getPaintProperty(\"line-dasharray\");if(R=void 0!==e,V=R&&e.isDataDriven,R&&!V){const t=e.getValue(d),i=U.getDashKey(t,U.getLayoutValue(\"line-cap\",d));N=M.getMosaicItemPosition(i)}}const h=1/E,A=g===r.HITTEST,j=this._programOptions;j.id=A,j.pattern=D,j.sdf=R;const w=P.getMaterialProgram(c,I,j);if(e(v)&&!A&&!w.isCompiled)return void v();if(c.useProgram(w),w.setUniformMatrix3fv(\"u_displayViewMat3\",p.displayViewMat3),w.setUniformMatrix3fv(\"u_displayMat3\",T===i.VIEWPORT?p.displayMat3:p.displayViewMat3),w.setUniform2fv(\"u_lineTranslation\",x),w.setUniform1f(\"u_depth\",U.z),w.setUniform1f(\"u_antialiasing\",h),A){const e=a(_+1);w.setUniform4fv(\"u_id\",e)}if(N&&e(N)){const{page:t}=N,i=M.getPageSize(t);e(i)&&(M.bind(c,s.LINEAR,t,n),w.setUniform2fv(\"u_mosaicSize\",i),w.setUniform1i(\"u_texture\",n))}let b=-1;for(const i of u){if(!i.layerData.has(_))continue;i.key.level!==b&&(b=i.key.level,I.setDataUniforms(w,d,U,b,M));const r=2**(d-b)/E;w.setUniform1f(\"u_zoomFactor\",r);const a=i.layerData.get(_);if(!a.lineIndexCount)continue;a.prepareForRendering(c);const o=a.lineVertexArrayObject;if(!t(o)){if(c.bindVAO(o),w.setUniformMatrix3fv(\"u_dvsMat3\",i.transforms.dvs),c.setStencilFunction(l.EQUAL,i.stencilRef,255),L||V){const t=a.patternMap;if(!t)continue;for(const[i,r]of t){const t=M.getPageSize(i);e(t)&&(M.bind(c,s.LINEAR,i,n),w.setUniform2fv(\"u_mosaicSize\",t),w.setUniform1i(\"u_texture\",n),c.drawElements(f.TRIANGLES,r[1],m.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*r[0]))}}else c.drawElements(f.TRIANGLES,a.lineIndexCount,m.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*a.lineIndexStart);i.triangleCount+=a.lineIndexCount/3}}}}export{u as WGLBrushVTLLine};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as e,isNone as t}from\"../../../../../core/maybe.js\";import{c as i,f as a}from\"../../../../../chunks/vec2f32.js\";import{FADE_DURATION as r}from\"../../vectorTiles/decluttering/config.js\";import{RotationAlignment as s,SymbolPlacement as n,TranslateAnchor as o}from\"../../vectorTiles/style/StyleDefinition.js\";import{VTL_TEXTURE_BINDING_UNIT_SPRITES as l,VTL_TEXTURE_BINDING_UNIT_GLYPHS as f}from\"../definitions.js\";import{WGLDrawPhase as u}from\"../enums.js\";import{degToByte as m}from\"../GeometryUtils.js\";import{u32to4Xu8 as p}from\"../number.js\";import c from\"./WGLBrush.js\";import{TextureSamplingMode as d,CompareFunction as g,PrimitiveType as y,DataType as _}from\"../../../../webgl/enums.js\";const h=1/65536;class M extends c{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=i()}dispose(){}drawMany(e,t){const{drawPhase:i,styleLayerUID:a}=e,r=e.styleLayer;let s;i===u.HITTEST&&(s=p(a+1)),this._drawIcons(e,r,t,s),this._drawText(e,r,t,s)}_drawIcons(i,a,f,p){const{context:c,displayLevel:d,drawPhase:g,painter:y,spriteMosaic:_,state:h,styleLayerUID:M,requestRender:P}=i,T=a.iconMaterial,U=y.vectorTilesMaterialManager;let E,x=!1;for(const e of f)if(e.layerData.has(M)&&(E=e.layerData.get(M),E.iconPerPageElementsMap.size>0)){x=!0;break}if(!x)return;const v=a.getPaintValue(\"icon-translate\",d),I=a.getPaintValue(\"icon-translate-anchor\",d);let S=a.getLayoutValue(\"icon-rotation-alignment\",d);S===s.AUTO&&(S=a.getLayoutValue(\"symbol-placement\",d)===n.POINT?s.VIEWPORT:s.MAP);const D=S===s.MAP,V=a.getLayoutValue(\"icon-keep-upright\",d)&&D,R=E.isIconSDF,w=g===u.HITTEST,A=this._iconProgramOptions;A.id=w,A.sdf=R;const L=U.getMaterialProgram(c,T,A);if(e(P)&&!w&&!L.isCompiled)return void P();c.useProgram(L),L.setUniformMatrix3fv(\"u_displayViewMat3\",S===s.MAP?h.displayViewMat3:h.displayMat3),L.setUniformMatrix3fv(\"u_displayMat3\",I===o.VIEWPORT?h.displayMat3:h.displayViewMat3),L.setUniform2fv(\"u_iconTranslation\",v),L.setUniform1f(\"u_depth\",a.z),L.setUniform1f(\"u_mapRotation\",m(h.rotation)),L.setUniform1f(\"u_keepUpright\",V?1:0),L.setUniform1f(\"u_level\",10*d),L.setUniform1i(\"u_texture\",l),L.setUniform1f(\"u_fadeDuration\",r/1e3),w&&L.setUniform4fv(\"u_id\",p);let O=-1;for(const e of f){if(!e.layerData.has(M))continue;if(e.key.level!==O&&(O=e.key.level,T.setDataUniforms(L,d,a,O,_)),E=e.layerData.get(M),0===E.iconPerPageElementsMap.size)continue;E.prepareForRendering(c),E.updateOpacityInfo();const r=E.iconVertexArrayObject;if(!t(r)){c.bindVAO(r),L.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),L.setUniform1f(\"u_time\",(performance.now()-E.lastOpacityUpdate)/1e3);for(const[t,a]of E.iconPerPageElementsMap)this._renderIconRange(i,L,a,t,e)}}}_renderIconRange(e,t,i,a,r){const{context:s,spriteMosaic:n}=e;this._spritesTextureSize[0]=n.getWidth(a)/4,this._spritesTextureSize[1]=n.getHeight(a)/4,t.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),n.bind(s,d.LINEAR,a,l),s.setStencilTestEnabled(!0),s.setStencilFunction(g.GREATER,255,255),s.setStencilWriteMask(0),s.drawElements(y.TRIANGLES,i[1],_.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]),r.triangleCount+=i[1]/3}_drawText(i,l,p,c){const{context:d,displayLevel:y,drawPhase:_,glyphMosaic:M,painter:P,pixelRatio:T,spriteMosaic:U,state:E,styleLayerUID:x,requestRender:v}=i,I=l.textMaterial,S=P.vectorTilesMaterialManager;let D,V=!1;for(const e of p)if(e.layerData.has(x)&&(D=e.layerData.get(x),D.glyphPerPageElementsMap.size>0)){V=!0;break}if(!V)return;const R=l.getPaintProperty(\"text-opacity\");if(R&&!R.isDataDriven&&0===R.getValue(y))return;const w=l.getPaintProperty(\"text-color\"),A=!w||w.isDataDriven||w.getValue(y)[3]>0,L=l.getPaintProperty(\"text-halo-width\"),O=l.getPaintProperty(\"text-halo-color\"),N=(!L||L.isDataDriven||L.getValue(y)>0)&&(!O||O.isDataDriven||O.getValue(y)[3]>0);if(!A&&!N)return;const b=24/8;let z=l.getLayoutValue(\"text-rotation-alignment\",y);z===s.AUTO&&(z=l.getLayoutValue(\"symbol-placement\",y)===n.POINT?s.VIEWPORT:s.MAP);const k=z===s.MAP,j=l.getLayoutValue(\"text-keep-upright\",y)&&k,G=_===u.HITTEST,W=.8*b/T;this._glyphTextureSize||(this._glyphTextureSize=a(M.width/4,M.height/4));const C=l.getPaintValue(\"text-translate\",y),F=l.getPaintValue(\"text-translate-anchor\",y),B=this._sdfProgramOptions;B.id=G;const H=S.getMaterialProgram(d,I,B);if(e(v)&&!G&&!H.isCompiled)return void v();d.useProgram(H),H.setUniformMatrix3fv(\"u_displayViewMat3\",z===s.MAP?E.displayViewMat3:E.displayMat3),H.setUniformMatrix3fv(\"u_displayMat3\",F===o.VIEWPORT?E.displayMat3:E.displayViewMat3),H.setUniform2fv(\"u_textTranslation\",C),H.setUniform1f(\"u_depth\",l.z+h),H.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),H.setUniform1f(\"u_mapRotation\",m(E.rotation)),H.setUniform1f(\"u_keepUpright\",j?1:0),H.setUniform1f(\"u_level\",10*y),H.setUniform1i(\"u_texture\",f),H.setUniform1f(\"u_antialiasingWidth\",W),H.setUniform1f(\"u_fadeDuration\",r/1e3),G&&H.setUniform4fv(\"u_id\",c);let Y=-1;for(const e of p){if(!e.layerData.has(x))continue;if(e.key.level!==Y&&(Y=e.key.level,I.setDataUniforms(H,y,l,Y,U)),D=e.layerData.get(x),0===D.glyphPerPageElementsMap.size)continue;D.prepareForRendering(d),D.updateOpacityInfo();const i=D.textVertexArrayObject;if(t(i))continue;d.bindVAO(i),H.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.dvs),d.setStencilTestEnabled(!0),d.setStencilFunction(g.GREATER,255,255),d.setStencilWriteMask(0);const a=(performance.now()-D.lastOpacityUpdate)/1e3;H.setUniform1f(\"u_time\",a),D.glyphPerPageElementsMap.forEach(((t,i)=>{this._renderGlyphRange(d,t,i,M,H,N,A,e)}))}}_renderGlyphRange(e,t,i,a,r,s,n,o){a.bind(e,d.LINEAR,i,f),s&&(r.setUniform1f(\"u_halo\",1),e.drawElements(y.TRIANGLES,t[1],_.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),o.triangleCount+=t[1]/3),n&&(r.setUniform1f(\"u_halo\",0),e.drawElements(y.TRIANGLES,t[1],_.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),o.triangleCount+=t[1]/3)}}export{M as WGLBrushVTLSymbol};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../../core/maybe.js\";import{WGLGeometryType as t}from\"../enums.js\";import{createProgramDescriptor as o}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";import{LabelMaterialKey as n}from\"../materialKey/MaterialKey.js\";import{DataType as r,CompareFunction as i,PrimitiveType as s}from\"../../../../webgl/enums.js\";const m=e=>o(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_id\",count:4,type:r.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:r.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:r.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texAndSize\",count:4,type:r.UNSIGNED_BYTE},{location:5,name:\"a_refSymbolAndPlacementOffset\",count:4,type:r.UNSIGNED_BYTE},{location:6,name:\"a_glyphData\",count:4,type:r.UNSIGNED_BYTE},{location:7,name:\"a_vertexOffset\",count:2,type:r.SHORT},{location:8,name:\"a_texCoords\",count:2,type:r.UNSIGNED_SHORT}]});class l extends a{dispose(){}getGeometryType(){return t.LABEL}supportsSymbology(e){return!0}drawGeometry(t,o,a,l){const{context:u,painter:p,state:c,rendererInfo:d,passOptions:f,requestRender:y}=t,_=n.load(a.materialKey),E=e(f)&&\"hittest\"===f.type,N=_.mapAligned?1:0;if(!N&&Math.abs(o.key.level-Math.round(100*t.displayLevel)/100)>=1)return;const{bufferLayouts:S,attributes:U}=m(_),T=p.materialManager.getMaterialProgram(t,_,\"materials/label\",U,l);if(e(y)&&!E&&!T.isCompiled)return void y();t.context.setStencilFunction(i.EQUAL,0,255),u.useProgram(T),this._setSharedUniforms(T,t,o),p.textureManager.bindTextures(u,T,_);const g=1===N?c.displayViewMat3:c.displayMat3;this._setSizeVVUniforms(_,T,d,o),T.setUniform1f(\"u_mapRotation\",Math.floor(c.rotation/360*254)),T.setUniform1f(\"u_mapAligned\",N),T.setUniformMatrix3fv(\"u_displayMat3\",g),T.setUniform1f(\"u_opacity\",1),T.setUniform2fv(\"u_screenSize\",t.state.size),T.setUniform1f(\"u_isHalo\",1);const G=a.target.getVAO(u,S,U),I=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;u.bindVAO(G),u.drawElements(s.TRIANGLES,a.indexCount,r.UNSIGNED_INT,I),T.setUniform1f(\"u_isHalo\",0),u.drawElements(s.TRIANGLES,a.indexCount,r.UNSIGNED_INT,I),u.setStencilTestEnabled(!0),u.setBlendingEnabled(!0)}}export{l as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../../../../../core/maybe.js\";import{WGLGeometryType as t}from\"../enums.js\";import{createProgramDescriptor as o}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";import{LineMaterialKey as n}from\"../materialKey/MaterialKey.js\";import{DataType as r,PrimitiveType as i}from\"../../../../webgl/enums.js\";const s=e=>o(e.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:r.SHORT},{location:1,name:\"a_id\",count:4,type:r.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:r.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_offsetAndNormal\",count:4,type:r.BYTE},{location:4,name:\"a_accumulatedDistanceAndHalfWidth\",count:2,type:r.UNSIGNED_SHORT},{location:5,name:\"a_tlbr\",count:4,type:r.UNSIGNED_SHORT},{location:6,name:\"a_segmentDirection\",count:4,type:r.BYTE},{location:7,name:\"a_aux\",count:2,type:r.UNSIGNED_SHORT},{location:8,name:\"a_zoomRange\",count:2,type:r.UNSIGNED_SHORT}]});class m extends a{dispose(){}getGeometryType(){return t.LINE}supportsSymbology(e){return!0}drawGeometry(t,o,a,m){const{context:l,painter:c,rendererInfo:u,displayLevel:p,passOptions:y,requestRender:d}=t,_=n.load(a.materialKey),f=e(y)&&\"hittest\"===y.type;let E=s(_),N=i.TRIANGLES;f&&(E=this._getTriangleDesc(a.materialKey,E),N=i.POINTS);const{attributes:g,bufferLayouts:S}=E,T=c.materialManager.getMaterialProgram(t,_,\"materials/line\",g,m);if(e(d)&&!f&&!T.isCompiled)return void d();const U=1/t.pixelRatio,G=0;l.useProgram(T),this._setSharedUniforms(T,t,o),_.textureBinding&&c.textureManager.bindTextures(l,T,_);const I=2**(p-o.key.level);T.setUniform1f(\"u_zoomFactor\",I),T.setUniform1f(\"u_blur\",G+U),T.setUniform1f(\"u_antialiasing\",U),this._setSizeVVUniforms(_,T,u,o),this._setColorAndOpacityVVUniforms(_,T,u),l.setFaceCullingEnabled(!1);const b=a.target.getVAO(l,S,g,f);let x=a.indexCount,D=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;f&&(x/=3,D/=3),l.bindVAO(b),l.drawElements(N,x,r.UNSIGNED_INT,D)}}export{m as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as t}from\"../../../../../core/maybe.js\";import{WGLGeometryType as e}from\"../enums.js\";import{createProgramDescriptor as o}from\"../Utils.js\";import a from\"./WGLGeometryBrush.js\";import{TextMaterialKey as r}from\"../materialKey/MaterialKey.js\";import{DataType as n,PrimitiveType as i}from\"../../../../webgl/enums.js\";const s=t=>o(t.data,{geometry:[{location:0,name:\"a_pos\",count:2,type:n.SHORT},{location:1,name:\"a_id\",count:4,type:n.UNSIGNED_BYTE},{location:2,name:\"a_color\",count:4,type:n.UNSIGNED_BYTE,normalized:!0},{location:3,name:\"a_haloColor\",count:4,type:n.UNSIGNED_BYTE,normalized:!0},{location:4,name:\"a_texFontSize\",count:4,type:n.UNSIGNED_BYTE},{location:5,name:\"a_aux\",count:4,type:n.BYTE},{location:6,name:\"a_zoomRange\",count:2,type:n.UNSIGNED_SHORT},{location:7,name:\"a_vertexOffset\",count:2,type:n.SHORT},{location:8,name:\"a_texCoords\",count:2,type:n.UNSIGNED_SHORT}]});class m extends a{dispose(){}getGeometryType(){return e.TEXT}supportsSymbology(t){return!0}drawGeometry(e,o,a,m){const{context:l,painter:p,rendererInfo:u,state:y,passOptions:d,requestRender:_}=e,c=r.load(a.materialKey),f=t(d)&&\"hittest\"===d.type,{bufferLayouts:E,attributes:N}=s(c),S=p.materialManager.getMaterialProgram(e,c,\"materials/text\",N,m);if(t(_)&&!f&&!S.isCompiled)return void _();l.useProgram(S);let T=i.TRIANGLES;f&&(T=i.POINTS),this._setSharedUniforms(S,e,o),p.textureManager.bindTextures(l,S,c),S.setUniformMatrix3fv(\"u_displayMat3\",y.displayMat3),S.setUniformMatrix3fv(\"u_displayViewMat3\",y.displayViewMat3),this._setSizeVVUniforms(c,S,u,o),this._setColorAndOpacityVVUniforms(c,S,u),this._setRotationVVUniforms(c,S,u),S.setUniform1f(\"u_isHalo\",1);const U=a.target.getVAO(l,E,N),x=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;l.bindVAO(U),l.drawElements(i.TRIANGLES,a.indexCount,n.UNSIGNED_INT,x),S.setUniform1f(\"u_isHalo\",0),l.drawElements(T,a.indexCount,n.UNSIGNED_INT,x)}}export{m as default};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport r from\"./flow/BrushFlow.js\";import s from\"./imagery/BrushRasterBitmap.js\";import e from\"./imagery/BrushVectorField.js\";import o from\"./webgl/brushes/BrushBitmap.js\";import l from\"./webgl/brushes/BrushClip.js\";import t from\"./webgl/brushes/BrushOverlay.js\";import m from\"./webgl/brushes/WGLBrushDotDensity.js\";import i from\"./webgl/brushes/WGLBrushHeatmap.js\";import b from\"./webgl/brushes/WGLBrushInfo.js\";import h from\"./webgl/brushes/WGLBrushPieChart.js\";import u from\"./webgl/brushes/WGLBrushStencil.js\";import{WGLBrushVTLBackground as p}from\"./webgl/brushes/WGLBrushVTLBackground.js\";import{WGLBrushVTLCircle as f}from\"./webgl/brushes/WGLBrushVTLCircle.js\";import{WGLBrushVTLFill as B}from\"./webgl/brushes/WGLBrushVTLFill.js\";import{WGLBrushVTLLine as L}from\"./webgl/brushes/WGLBrushVTLLine.js\";import{WGLBrushVTLSymbol as a}from\"./webgl/brushes/WGLBrushVTLSymbol.js\";import g from\"./webgl/brushes/WGLGeometryBrushFill.js\";import j from\"./webgl/brushes/WGLGeometryBrushLabel.js\";import w from\"./webgl/brushes/WGLGeometryBrushLine.js\";import G from\"./webgl/brushes/WGLGeometryBrushMarker.js\";import n from\"./webgl/brushes/WGLGeometryBrushText.js\";const W={marker:G,line:w,fill:g,text:n,label:j,clip:l,stencil:u,bitmap:o,overlay:t,raster:s,rasterVF:e,flow:r,tileInfo:b,vtlBackground:p,vtlFill:B,vtlLine:L,vtlCircle:f,vtlSymbol:a,dotDensity:m,heatmap:i,pieChart:h},y={vtlBackground:p,vtlFill:B,vtlLine:L,vtlCircle:f,vtlSymbol:a};export{W as brushes,y as vtlBrushes};\n"],
  "mappings": "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",
  "names": ["a", "r", "t", "s", "i", "a", "e", "t", "s", "r", "o", "p", "t", "e", "r", "o", "n", "h", "l", "d", "_", "m", "M", "E", "s", "i", "a", "T", "e", "n", "s", "c", "t", "a", "e", "t", "r", "T", "s", "i", "o", "n", "h", "l", "d", "m", "f", "_", "g", "b", "P", "S", "w", "x", "y", "M", "U", "I", "R", "A", "O", "F", "l", "c", "m", "a", "e", "t", "r", "s", "o", "d", "f", "u", "_", "g", "p", "y", "b", "S", "h", "o", "d", "e", "t", "i", "s", "n", "r", "m", "a", "c", "l", "p", "u", "f", "e", "o", "e", "r", "t", "n", "e", "n", "c", "f", "a", "r", "e", "s", "o", "m", "d", "u", "m", "a", "e", "r", "s", "o", "n", "c", "d", "l", "p", "f", "_", "y", "p", "a", "t", "e", "i", "s", "o", "U", "u", "f", "l", "c", "B", "C", "D", "E", "F", "G", "r", "n", "m", "u", "e", "t", "c", "p", "E", "o", "r", "i", "l", "y", "_", "f", "d", "S", "g", "N", "T", "I", "U", "x", "L", "h", "G", "O", "b", "D", "R", "a", "O", "c", "L", "E", "e", "o", "r", "s", "i", "n", "d", "t", "a", "l", "u", "f", "T", "p", "x", "w", "D", "g", "y", "S", "b", "u", "d", "p", "E", "t", "o", "a", "i", "m", "c", "y", "_", "f", "N", "S", "T", "g", "x", "h", "R", "U", "A", "O", "G", "I", "M", "b", "e", "r", "n", "x", "s", "F", "b", "d", "e", "t", "r", "a", "i", "o", "u", "l", "m", "n", "h", "c", "f", "_", "D", "r", "n", "A", "b", "x", "a", "r", "t", "e", "i", "o", "s", "l", "c", "m", "_", "f", "h", "s", "d", "r", "o", "n", "l", "f", "u", "i", "m", "a", "h", "a", "r", "t", "e", "i", "s", "c", "l", "d", "a", "r", "e", "o", "c", "m", "p", "_", "h", "g", "b", "y", "M", "x", "U", "L", "w", "A", "P", "I", "R", "t", "s", "i", "c", "a", "m", "f", "u", "d", "p", "y", "g", "E", "e", "M", "T", "x", "I", "U", "_", "h", "L", "R", "r", "S", "i", "c", "m", "a", "t", "e", "i", "r", "n", "s", "l", "f", "u", "d", "p", "y", "g", "_", "E", "I", "M", "P", "o", "T", "U", "x", "h", "D", "S", "R", "N", "w", "L", "A", "C", "V", "u", "a", "o", "c", "d", "p", "g", "y", "E", "M", "_", "e", "U", "I", "P", "x", "T", "S", "D", "L", "N", "R", "V", "t", "i", "h", "A", "w", "r", "b", "h", "M", "a", "e", "t", "i", "r", "s", "I", "f", "p", "c", "d", "g", "y", "_", "P", "T", "U", "E", "x", "S", "l", "n", "D", "V", "R", "w", "A", "L", "O", "N", "b", "G", "W", "C", "F", "B", "Y", "o", "m", "e", "l", "p", "E", "t", "o", "a", "u", "c", "d", "f", "y", "_", "Z", "N", "S", "U", "T", "g", "G", "I", "s", "e", "m", "p", "E", "t", "o", "a", "l", "c", "u", "y", "d", "_", "C", "f", "N", "g", "S", "T", "U", "G", "I", "b", "x", "D", "s", "t", "m", "p", "E", "e", "o", "a", "l", "u", "y", "d", "_", "c", "P", "f", "N", "S", "T", "U", "x", "d", "m", "c", "l", "f", "h", "i", "x", "u", "M", "O", "b", "s"]
}
