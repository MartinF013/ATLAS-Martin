import {
  g
} from "./chunk-4TO6Q65E.js";
import {
  h
} from "./chunk-TWQ374WD.js";
import {
  l,
  w
} from "./chunk-T7BEWVV3.js";
import {
  j
} from "./chunk-TT2HIXWQ.js";
import {
  d,
  n8 as n,
  y3 as y
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  a2 as a,
  o
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/widgets/ElevationProfile/support/HoveredPoints.js
var h2 = class extends y {
  constructor(e2) {
    super(e2), this._hoveredPoints = new j();
  }
  initialize() {
    this._updateScreenLocationsHandle = l(() => this._hoveredPoints.toArray().map(({ anchor: e2, element: o2 }) => ({ screenLocation: e2.screenLocation, element: o2 })), (e2) => {
      for (const { screenLocation: o2, element: t } of e2)
        o(o2, ({ x: e3, y: o3 }) => {
          t.style.transform = `translate(${e3}px, ${o3}px)`;
        });
    }, w);
  }
  destroy() {
    this._updateScreenLocationsHandle = a(this._updateScreenLocationsHandle), this._hoveredPoints.drain((e2) => this._destroyHoveredPoint(e2));
  }
  update(e2) {
    const o2 = this.view, t = this._hoveredPoints, r = e2.length;
    for (; this._hoveredPoints.length > r; )
      this._destroyHoveredPoint(this._hoveredPoints.pop());
    for (; this._hoveredPoints.length < r; ) {
      const e3 = this._makeHoveredPoint();
      t.push(e3), o2.surface.appendChild(e3.element);
    }
    for (let s = 0; s < r; ++s) {
      const o3 = t.getItemAt(r - 1 - s), i = e2[s];
      this._updateHoveredPoint(o3, i);
    }
  }
  _makeHoveredPoint() {
    const { size: e2, borderStyle: o2, borderColor: t, borderWidth: r, boxShadow: s } = g, i = this.view, n2 = new h({ view: i, screenLocationEnabled: true }), c = document.createElement("div"), a2 = c.style;
    return a2.position = "absolute", a2.top = "0", a2.left = "0", a2.contain = "strict", a2.boxSizing = "border-box", a2.width = `${e2}px`, a2.height = `${e2}px`, a2.marginTop = `-${e2 / 2}px`, a2.marginLeft = `-${e2 / 2}px`, a2.border = `${o2} ${r}px ${t}`, a2.borderRadius = `${e2}px`, a2.boxShadow = s, { anchor: n2, element: c };
  }
  _updateHoveredPoint({ anchor: e2, element: o2 }, t) {
    e2.screenLocationEnabled = true, e2.location = t.hoveredPoint;
    const r = o2.style;
    r.display = "block", r.background = t.color.toCss();
  }
  _destroyHoveredPoint({ anchor: e2, element: o2 }) {
    e2.destroy(), this.view.surface.removeChild(o2);
  }
};
e([d()], h2.prototype, "view", void 0), e([d()], h2.prototype, "_hoveredPoints", void 0), h2 = e([n("esri.widgets.ElevationProfile.support.HoveredPoints")], h2);

export {
  h2 as h
};
//# sourceMappingURL=chunk-2TMQIIDW.js.map
