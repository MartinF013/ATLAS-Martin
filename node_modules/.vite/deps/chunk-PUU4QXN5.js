import {
  v
} from "./chunk-R3PFJUIG.js";
import {
  i as i3,
  i2 as i4,
  u
} from "./chunk-YLSPLHY5.js";
import {
  e as e2,
  e2 as e3,
  f,
  o as o3,
  o2 as o4,
  t as t2
} from "./chunk-NXOQBIK7.js";
import {
  E as E3
} from "./chunk-ERNXFM5T.js";
import {
  i as i2
} from "./chunk-6ITXWFMK.js";
import {
  e as e4
} from "./chunk-SV4VP57N.js";
import {
  E as E2,
  _,
  c as c2,
  i,
  l as l2
} from "./chunk-5EXPMKQP.js";
import {
  W,
  a,
  c,
  h
} from "./chunk-B7F3T673.js";
import {
  t
} from "./chunk-WJDUBZ7S.js";
import {
  o
} from "./chunk-TEJEYVH4.js";
import {
  d2 as d,
  o2,
  x
} from "./chunk-EEJIELE6.js";
import {
  E
} from "./chunk-Y55TYMBP.js";
import {
  O,
  n
} from "./chunk-MDCKEJ7B.js";
import {
  l
} from "./chunk-U7B2WKBH.js";
import {
  e
} from "./chunk-IVBXK6OP.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ColorMaterialTechnique.js
var P = class extends e2 {
  initializeProgram(e5) {
    const t3 = P.shader.get().build(this.configuration);
    return new o3(e5.rctx, t3, E);
  }
  _createPipeline(t3, r) {
    const n2 = this.configuration, c3 = t3 === O.NONE, f2 = t3 === O.FrontFace;
    return W({ blending: n2.output !== o.Color && n2.output !== o.Alpha || !n2.transparent ? null : c3 ? c2 : E2(t3), culling: h(n2.cullFace), depthTest: { func: l2(t3) }, depthWrite: c3 || f2 ? n2.writeDepth && a : null, colorWrite: c, stencilWrite: n2.hasOccludees ? e3 : null, stencilTest: n2.hasOccludees ? r ? o4 : f : null, polygonOffset: c3 || f2 ? n2.polygonOffset && j : i(n2.enableOffset) });
  }
  initializePipeline() {
    return this._occludeePipelineState = this._createPipeline(this.configuration.transparencyPassType, true), this._createPipeline(this.configuration.transparencyPassType, false);
  }
  getPipelineState(e5, t3) {
    return t3 ? this._occludeePipelineState : super.getPipelineState(e5, t3);
  }
};
P.shader = new t2(v, () => import("./ColorMaterial.glsl-WRPKQQAH.js"));
var j = { factor: 1, units: 1 };

// node_modules/@arcgis/core/views/3d/webgl-engine/shaders/ColorMaterialTechniqueConfiguration.js
var p = class extends i2 {
  constructor() {
    super(...arguments), this.output = o.Color, this.cullFace = n.None, this.hasSlicePlane = false, this.hasVertexColors = false, this.transparent = false, this.polygonOffset = false, this.enableOffset = true, this.writeDepth = true, this.hasOccludees = false, this.transparencyPassType = O.NONE, this.hasMultipassTerrain = false, this.cullAboveGround = false;
  }
};
e([e4({ count: o.COUNT })], p.prototype, "output", void 0), e([e4({ count: n.COUNT })], p.prototype, "cullFace", void 0), e([e4()], p.prototype, "hasSlicePlane", void 0), e([e4()], p.prototype, "hasVertexColors", void 0), e([e4()], p.prototype, "transparent", void 0), e([e4()], p.prototype, "polygonOffset", void 0), e([e4()], p.prototype, "enableOffset", void 0), e([e4()], p.prototype, "writeDepth", void 0), e([e4()], p.prototype, "hasOccludees", void 0), e([e4({ count: O.COUNT })], p.prototype, "transparencyPassType", void 0), e([e4()], p.prototype, "hasMultipassTerrain", void 0), e([e4()], p.prototype, "cullAboveGround", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/ColorMaterial.js
var m = class extends d {
  constructor(t3) {
    super(t3, new d2()), this.supportsEdges = true, this._configuration = new p();
  }
  getConfiguration(t3, e5) {
    return this._configuration.output = t3, this._configuration.cullFace = this.parameters.cullFace, this._configuration.hasVertexColors = this.parameters.hasVertexColors, this._configuration.hasSlicePlane = this.parameters.hasSlicePlane, this._configuration.transparent = this.parameters.transparent, this._configuration.polygonOffset = this.parameters.polygonOffset, this._configuration.writeDepth = this.parameters.writeDepth, this._configuration.hasOccludees = this.parameters.hasOccludees, this._configuration.transparencyPassType = e5.transparencyPassType, this._configuration.enableOffset = e5.camera.relativeElevation < _, this._configuration.hasMultipassTerrain = e5.multipassTerrain.enabled, this._configuration.cullAboveGround = e5.multipassTerrain.cullAboveGround, this._configuration;
  }
  intersect(t3, e5, r, s, i5, a2, o5) {
    x(t3, e5, s, i5, a2, void 0, o5);
  }
  requiresSlot(t3, r) {
    if (t3 === E3.DRAPED_MATERIAL)
      return true;
    if (i3(r) === o.Highlight)
      return t3 === E3.OPAQUE_MATERIAL;
    return t3 === (this.parameters.transparent ? this.parameters.writeDepth ? E3.TRANSPARENT_MATERIAL : E3.TRANSPARENT_DEPTH_WRITE_DISABLED_MATERIAL : E3.OPAQUE_MATERIAL);
  }
  createGLMaterial(t3) {
    return t3.output === o.Color || t3.output === o.Alpha || t3.output === o.Highlight || t3.output === o.Depth && this.parameters.writeLinearDepth ? new _2(t3) : null;
  }
  createBufferWriter() {
    return new i4(u);
  }
};
var _2 = class extends t {
  _updateOccludeeState(t3) {
    t3.hasOccludees !== this._material.parameters.hasOccludees && this._material.setParameters({ hasOccludees: t3.hasOccludees });
  }
  beginSlot(t3) {
    return this._output !== o.Color && this._output !== o.Alpha || this._updateOccludeeState(t3), this.ensureTechnique(P, t3);
  }
};
var d2 = class extends o2 {
  constructor() {
    super(...arguments), this.color = l, this.transparent = false, this.writeDepth = true, this.writeLinearDepth = false, this.hasVertexColors = false, this.polygonOffset = false, this.hasSlicePlane = false, this.cullFace = n.None, this.hasOccludees = false;
  }
};

export {
  m
};
//# sourceMappingURL=chunk-PUU4QXN5.js.map
