import {
  e as e2
} from "./chunk-VNR743PA.js";
import {
  v as v5
} from "./chunk-JJ7VMWJT.js";
import {
  p as p6
} from "./chunk-SWCA522B.js";
import {
  p as p5,
  p3 as p7,
  r as r5
} from "./chunk-YPIBZ3CH.js";
import {
  l as l5
} from "./chunk-WKHS6QIX.js";
import {
  a as a4
} from "./chunk-6O7ZZEV7.js";
import {
  u as u3
} from "./chunk-M2WA2LMI.js";
import {
  i
} from "./chunk-OBCAVCXI.js";
import {
  t as t4
} from "./chunk-RFOZTYJH.js";
import {
  v as v2
} from "./chunk-J6DXGG2A.js";
import {
  S,
  c as c4,
  d as d3
} from "./chunk-L2YBXQTH.js";
import {
  r as r3
} from "./chunk-S4ZKPFDU.js";
import {
  x
} from "./chunk-4XBERLPX.js";
import {
  p as p9
} from "./chunk-SZPDY7KN.js";
import {
  i as i2
} from "./chunk-Y6YGVGFR.js";
import {
  p as p4
} from "./chunk-GKRQ3NBT.js";
import {
  n as n7,
  p as p8
} from "./chunk-OXEYQYNR.js";
import {
  j as j4
} from "./chunk-OXRBYKVX.js";
import {
  o as o4
} from "./chunk-MZX3HN4G.js";
import {
  d as d4
} from "./chunk-T47JAOQZ.js";
import {
  L,
  b as b3,
  g,
  h,
  m as m3,
  y as y2
} from "./chunk-6GPADSSO.js";
import {
  r as r4,
  t as t6
} from "./chunk-ODX6X222.js";
import {
  K,
  b as b2
} from "./chunk-GSFXXEAM.js";
import {
  n as n5
} from "./chunk-RIWDMEW4.js";
import {
  n as n6,
  o as o3,
  p as p3
} from "./chunk-C7S44TP4.js";
import {
  P
} from "./chunk-KUWW4YJ7.js";
import {
  n as n3,
  t as t3
} from "./chunk-WODSLTZT.js";
import {
  v as v4
} from "./chunk-OG6CQEZJ.js";
import {
  c as c2
} from "./chunk-X5Z3DJQ4.js";
import {
  O
} from "./chunk-BUWXVMJU.js";
import {
  D,
  I,
  b as b4,
  c,
  d as d2,
  f,
  l as l3,
  m as m5,
  p,
  u as u2,
  v as v3
} from "./chunk-JT3LXQ47.js";
import {
  a as a3
} from "./chunk-D3XXPCBB.js";
import {
  t as t5
} from "./chunk-OWBMOIIV.js";
import {
  b as b5
} from "./chunk-SIH2IMSA.js";
import {
  a as a2
} from "./chunk-JJRJ6TV3.js";
import {
  u
} from "./chunk-G4IZ2HTT.js";
import {
  p as p2
} from "./chunk-IZCP5QP4.js";
import {
  fe,
  me
} from "./chunk-RN2KRYDN.js";
import {
  g as g2
} from "./chunk-BLINZ65M.js";
import {
  M as M2,
  j3
} from "./chunk-TADZYUVR.js";
import {
  B,
  c as c3
} from "./chunk-EI4MOLML.js";
import {
  l as l4
} from "./chunk-CF56UYH2.js";
import {
  n as n4
} from "./chunk-ACJD5XFJ.js";
import {
  m as m4
} from "./chunk-HVM5D6S5.js";
import {
  m as m2
} from "./chunk-FTLBKDGL.js";
import {
  c as c5,
  m as m6
} from "./chunk-5Z5455ZY.js";
import {
  j,
  n as n2
} from "./chunk-TT2HIXWQ.js";
import {
  U
} from "./chunk-65A2N4LL.js";
import {
  G,
  j as j2
} from "./chunk-5N3FSR63.js";
import {
  t as t2
} from "./chunk-EPCCNF3D.js";
import {
  s
} from "./chunk-DMJWTK32.js";
import {
  v2 as v
} from "./chunk-VLCG72SW.js";
import {
  M
} from "./chunk-Q72YFZUL.js";
import {
  k2 as k
} from "./chunk-3NMRL5CR.js";
import {
  s as s5
} from "./chunk-XRL56EGK.js";
import {
  r as r2
} from "./chunk-ZIHDQYKE.js";
import {
  o as o2
} from "./chunk-GSRNZQFV.js";
import {
  l as l2
} from "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n,
  s5 as s4
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  w,
  y
} from "./chunk-U3PSONS6.js";
import {
  s2 as s3
} from "./chunk-HFTNOKM2.js";
import {
  N,
  b
} from "./chunk-23NWA6WL.js";
import {
  s as s2
} from "./chunk-CVWDM4C7.js";
import {
  m,
  o
} from "./chunk-G5JBUC5N.js";
import {
  a,
  l,
  r,
  t
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/form/ExpressionInfo.js
var s6;
var p10 = s6 = class extends l2 {
  constructor(r6) {
    super(r6), this.expression = null, this.name = null, this.returnType = "boolean", this.title = null;
  }
  clone() {
    return new s6({ name: this.name, title: this.title, expression: this.expression, returnType: this.returnType });
  }
};
e([d({ type: String, json: { write: true } })], p10.prototype, "expression", void 0), e([d({ type: String, json: { write: true } })], p10.prototype, "name", void 0), e([d({ type: ["boolean", "date", "number", "string"], json: { write: true } })], p10.prototype, "returnType", void 0), e([d({ type: String, json: { write: true } })], p10.prototype, "title", void 0), p10 = s6 = e([n("esri.form.ExpressionInfo")], p10);
var i3 = p10;

// node_modules/@arcgis/core/form/elements/Element.js
var e3 = class extends l2 {
  constructor(t8) {
    super(t8), this.description = null, this.label = null, this.type = null, this.visibilityExpression = null;
  }
};
e([d({ type: String, json: { write: true } })], e3.prototype, "description", void 0), e([d({ type: String, json: { write: true } })], e3.prototype, "label", void 0), e([d()], e3.prototype, "type", void 0), e([d({ type: String, json: { write: true } })], e3.prototype, "visibilityExpression", void 0), e3 = e([n("esri.form.elements.Element")], e3);
var i4 = e3;

// node_modules/@arcgis/core/form/elements/inputs/AttachmentInput.js
var s7;
var p11 = s7 = class extends l2 {
  constructor(r6) {
    super(r6), this.type = null;
  }
  clone() {
    return new s7({ type: this.type });
  }
};
e([d({ type: ["attachment", "audio", "document", "image", "signature", "video"], json: { write: true } })], p11.prototype, "type", void 0), p11 = s7 = e([n("esri.form.elements.inputs.AttachmentInput")], p11);
var c6 = p11;

// node_modules/@arcgis/core/form/elements/AttachmentElement.js
var i5;
var p12 = i5 = class extends i4 {
  constructor(t8) {
    super(t8), this.attachmentKeyword = null, this.editable = true, this.input = null, this.type = "attachment";
  }
  clone() {
    return new i5({ attachmentKeyword: this.attachmentKeyword, description: this.description, editable: this.editable, input: this.input, label: this.label, visibilityExpression: this.visibilityExpression });
  }
};
e([d({ type: String, json: { write: true } })], p12.prototype, "attachmentKeyword", void 0), e([d({ type: Boolean, json: { write: true } })], p12.prototype, "editable", void 0), e([d({ type: c6, json: { read: { source: "inputType" }, write: { target: "inputType" } } })], p12.prototype, "input", void 0), e([d({ type: ["attachment"], json: { read: false, write: true } })], p12.prototype, "type", void 0), p12 = i5 = e([n("esri.form.elements.AttachmentElement")], p12);
var n8 = p12;

// node_modules/@arcgis/core/form/elements/inputs/Input.js
var e4 = class extends l2 {
  constructor(r6) {
    super(r6), this.type = null;
  }
};
e([d()], e4.prototype, "type", void 0), e4 = e([n("esri.form.elements.inputs.Input")], e4);
var p13 = e4;

// node_modules/@arcgis/core/form/elements/inputs/TextInput.js
var e5 = class extends p13 {
  constructor(r6) {
    super(r6), this.maxLength = null, this.minLength = 0;
  }
};
e([d({ type: Number, json: { write: true } })], e5.prototype, "maxLength", void 0), e([d({ type: Number, json: { write: true } })], e5.prototype, "minLength", void 0), e5 = e([n("esri.form.elements.inputs.TextInput")], e5);
var p14 = e5;

// node_modules/@arcgis/core/form/elements/inputs/BarcodeScannerInput.js
var o5;
var c7 = o5 = class extends p14 {
  constructor(r6) {
    super(r6), this.type = "barcode-scanner";
  }
  clone() {
    return new o5({ maxLength: this.maxLength, minLength: this.minLength });
  }
};
e([d({ type: ["barcode-scanner"], json: { read: false, write: true } })], c7.prototype, "type", void 0), c7 = o5 = e([n("esri.form.elements.inputs.BarcodeScannerInput")], c7);
var p15 = c7;

// node_modules/@arcgis/core/form/elements/inputs/ComboBoxInput.js
var s8;
var p16 = s8 = class extends p13 {
  constructor(o7) {
    super(o7), this.noValueOptionLabel = null, this.showNoValueOption = false, this.type = "combo-box";
  }
  clone() {
    return new s8({ showNoValueOption: this.showNoValueOption, noValueOptionLabel: this.noValueOptionLabel });
  }
};
e([d({ type: String, json: { write: true } })], p16.prototype, "noValueOptionLabel", void 0), e([d({ type: Boolean, json: { write: true } })], p16.prototype, "showNoValueOption", void 0), e([d({ type: ["combo-box"], json: { read: false, write: true } })], p16.prototype, "type", void 0), p16 = s8 = e([n("esri.form.elements.inputs.ComboBoxInput")], p16);
var i6 = p16;

// node_modules/@arcgis/core/form/elements/inputs/DateTimePickerInput.js
var s9;
function n9(e6) {
  return null != e6 ? new Date(e6) : null;
}
function a5(e6) {
  return e6 ? e6.getTime() : null;
}
var m7 = s9 = class extends p13 {
  constructor(e6) {
    super(e6), this.includeTime = false, this.max = null, this.min = null, this.type = "datetime-picker";
  }
  readMax(e6, r6) {
    return n9(r6.max);
  }
  writeMax(e6, r6) {
    r6.max = a5(e6);
  }
  readMin(e6, r6) {
    return n9(r6.min);
  }
  writeMin(e6, r6) {
    r6.min = a5(e6);
  }
  clone() {
    return new s9({ includeTime: this.includeTime, max: this.max, min: this.min, type: this.type });
  }
};
e([d({ type: Boolean, json: { write: true } })], m7.prototype, "includeTime", void 0), e([d({ type: Date, json: { type: Number, write: true } })], m7.prototype, "max", void 0), e([o2("max")], m7.prototype, "readMax", null), e([r2("max")], m7.prototype, "writeMax", null), e([d({ type: Date, json: { type: Number, write: true } })], m7.prototype, "min", void 0), e([o2("min")], m7.prototype, "readMin", null), e([r2("min")], m7.prototype, "writeMin", null), e([d({ type: ["datetime-picker"], json: { read: false, write: true } })], m7.prototype, "type", void 0), m7 = s9 = e([n("esri.form.elements.inputs.DateTimePickerInput")], m7);
var c8 = m7;

// node_modules/@arcgis/core/form/elements/inputs/RadioButtonsInput.js
var s10;
var p17 = s10 = class extends p13 {
  constructor(o7) {
    super(o7), this.noValueOptionLabel = null, this.showNoValueOption = false, this.type = "radio-buttons";
  }
  clone() {
    return new s10({ noValueOptionLabel: this.noValueOptionLabel, showNoValueOption: this.showNoValueOption });
  }
};
e([d({ type: String, json: { write: true } })], p17.prototype, "noValueOptionLabel", void 0), e([d({ type: Boolean, json: { write: true } })], p17.prototype, "showNoValueOption", void 0), e([d({ type: ["radio-buttons"], json: { read: false, write: true } })], p17.prototype, "type", void 0), p17 = s10 = e([n("esri.form.elements.inputs.RadioButtonsInput")], p17);
var i7 = p17;

// node_modules/@arcgis/core/form/elements/inputs/SwitchInput.js
var s11;
var p18 = s11 = class extends p13 {
  constructor(o7) {
    super(o7), this.offValue = null, this.onValue = null, this.type = "switch";
  }
  clone() {
    return new s11({ offValue: this.offValue, onValue: this.onValue });
  }
};
e([d({ type: [String, Number], json: { write: true } })], p18.prototype, "offValue", void 0), e([d({ type: [String, Number], json: { write: true } })], p18.prototype, "onValue", void 0), e([d({ type: ["switch"], json: { read: false, write: true } })], p18.prototype, "type", void 0), p18 = s11 = e([n("esri.form.elements.inputs.SwitchInput")], p18);
var i8 = p18;

// node_modules/@arcgis/core/form/elements/inputs/TextAreaInput.js
var o6;
var p19 = o6 = class extends p14 {
  constructor(r6) {
    super(r6), this.type = "text-area";
  }
  clone() {
    return new o6({ maxLength: this.maxLength, minLength: this.minLength });
  }
};
e([d({ type: ["text-area"], json: { read: false, write: true } })], p19.prototype, "type", void 0), p19 = o6 = e([n("esri.form.elements.inputs.TextAreaInput")], p19);
var a6 = p19;

// node_modules/@arcgis/core/form/elements/inputs/TextBoxInput.js
var s12;
var p20 = s12 = class extends p14 {
  constructor(t8) {
    super(t8), this.type = "text-box";
  }
  clone() {
    return new s12({ maxLength: this.maxLength, minLength: this.minLength });
  }
};
e([d({ type: ["text-box"], json: { read: false, write: true } })], p20.prototype, "type", void 0), p20 = s12 = e([n("esri.form.elements.inputs.TextBoxInput")], p20);
var c9 = p20;

// node_modules/@arcgis/core/form/elements/support/inputs.js
var m8 = { base: p13, key: "type", typeMap: { "barcode-scanner": p15, "combo-box": i6, "datetime-picker": c8, "radio-buttons": i7, switch: i8, "text-area": a6, "text-box": c9 } };

// node_modules/@arcgis/core/form/elements/FieldElement.js
var n10;
var l6 = n10 = class extends i4 {
  constructor(e6) {
    super(e6), this.domain = null, this.editable = true, this.editableExpression = null, this.fieldName = null, this.hint = null, this.input = null, this.requiredExpression = null, this.type = "field", this.valueExpression = null;
  }
  clone() {
    return new n10({ description: this.description, domain: this.domain, editable: this.editable, editableExpression: this.editableExpression, fieldName: this.fieldName, hint: this.hint, input: this.input, label: this.label, requiredExpression: this.requiredExpression, valueExpression: this.valueExpression, visibilityExpression: this.visibilityExpression });
  }
};
e([d({ types: n3, json: { read: { reader: t3 }, write: true } })], l6.prototype, "domain", void 0), e([d({ type: Boolean, json: { write: true } })], l6.prototype, "editable", void 0), e([d({ type: String, json: { write: true } })], l6.prototype, "editableExpression", void 0), e([d({ type: String, json: { write: true } })], l6.prototype, "fieldName", void 0), e([d({ type: String, json: { write: true } })], l6.prototype, "hint", void 0), e([d({ types: m8, json: { read: { source: "inputType" }, write: { target: "inputType" } } })], l6.prototype, "input", void 0), e([d({ type: String, json: { write: true } })], l6.prototype, "requiredExpression", void 0), e([d({ type: String, json: { read: false, write: true } })], l6.prototype, "type", void 0), e([d({ type: String, json: { write: true } })], l6.prototype, "valueExpression", void 0), l6 = n10 = e([n("esri.form.elements.FieldElement")], l6);
var a7 = l6;

// node_modules/@arcgis/core/form/elements/RelationshipElement.js
var p21;
var l7 = p21 = class extends i4 {
  constructor(e6) {
    super(e6), this.displayCount = null, this.displayType = "list", this.editable = true, this.orderByFields = null, this.relationshipId = null, this.type = "relationship";
  }
  clone() {
    return new p21({ description: this.description, displayCount: this.displayCount, displayType: this.displayType, editable: this.editable, label: this.label, orderByFields: m(this.orderByFields), relationshipId: this.relationshipId, visibilityExpression: this.visibilityExpression });
  }
};
e([d({ type: Number, json: { write: true } })], l7.prototype, "displayCount", void 0), e([d({ type: ["list"], json: { write: true } })], l7.prototype, "displayType", void 0), e([d({ type: Boolean, json: { write: true } })], l7.prototype, "editable", void 0), e([d({ type: [c3], json: { write: true } })], l7.prototype, "orderByFields", void 0), e([d({ type: Number, json: { write: true } })], l7.prototype, "relationshipId", void 0), e([d({ type: ["relationship"], json: { read: false, write: true } })], l7.prototype, "type", void 0), l7 = p21 = e([n("esri.form.elements.RelationshipElement")], l7);
var d5 = l7;

// node_modules/@arcgis/core/form/support/elements.js
function n11(t8) {
  return { typesWithGroup: { base: i4, key: "type", typeMap: { attachment: n8, field: a7, group: t8, relationship: d5 } }, typesWithoutGroup: { base: i4, key: "type", typeMap: { attachment: n8, field: a7, relationship: d5 } } };
}
function i9(t8, e6, p23 = true) {
  if (!t8)
    return null;
  const r6 = p23 ? e6.typesWithGroup.typeMap : e6.typesWithoutGroup.typeMap;
  return t8.filter((t9) => r6[t9.type]).map((t9) => r6[t9.type].fromJSON(t9));
}
function u4(t8, e6, p23 = true) {
  if (!t8)
    return null;
  const r6 = p23 ? e6.typesWithGroup.typeMap : e6.typesWithoutGroup.typeMap;
  return t8.filter((t9) => r6[t9.type]).map((t9) => t9.toJSON());
}
function s13(e6, p23, r6 = true) {
  return e6 ? e6.map((e7) => N(r6 ? p23.typesWithGroup : p23.typesWithoutGroup, e7)) : null;
}

// node_modules/@arcgis/core/form/elements/GroupElement.js
var d6;
var u5 = d6 = class extends i4 {
  constructor(e6) {
    super(e6), this.elements = null, this.initialState = "expanded", this.type = "group";
  }
  castElements(e6) {
    return s13(e6, f2, false);
  }
  readElements(e6, t8) {
    return i9(t8.formElements, f2, false);
  }
  writeElements(e6, t8) {
    t8.formElements = u4(e6, f2, false);
  }
  clone() {
    return new d6({ description: this.description, elements: m(this.elements), initialState: this.initialState, label: this.label, visibilityExpression: this.visibilityExpression });
  }
};
e([d({ json: { write: true } })], u5.prototype, "elements", void 0), e([s5("elements")], u5.prototype, "castElements", null), e([o2("elements", ["formElements"])], u5.prototype, "readElements", null), e([r2("elements")], u5.prototype, "writeElements", null), e([d({ type: ["collapsed", "expanded"], json: { write: true } })], u5.prototype, "initialState", void 0), e([d({ type: String, json: { read: false, write: true } })], u5.prototype, "type", void 0), u5 = d6 = e([n("esri.form.elements.GroupElement")], u5);
var f2 = n11(u5);
var y3 = u5;

// node_modules/@arcgis/core/form/FormTemplate.js
var d7;
var j5 = n11(y3);
var y4 = d7 = class extends l2 {
  constructor(e6) {
    super(e6), this.description = null, this.elements = null, this.expressionInfos = null, this.title = null;
  }
  castElements(e6) {
    return s13(e6, j5);
  }
  readElements(e6, t8) {
    return i9(t8.formElements, j5);
  }
  writeElements(e6, t8) {
    t8.formElements = u4(e6, j5);
  }
  clone() {
    return new d7({ description: this.description, expressionInfos: m(this.expressionInfos), elements: m(this.elements), title: this.title });
  }
};
e([d({ type: String, json: { write: true } })], y4.prototype, "description", void 0), e([d({ json: { write: true } })], y4.prototype, "elements", void 0), e([s5("elements")], y4.prototype, "castElements", null), e([o2("elements", ["formElements"])], y4.prototype, "readElements", null), e([r2("elements")], y4.prototype, "writeElements", null), e([d({ type: [i3], json: { write: true } })], y4.prototype, "expressionInfos", void 0), e([d({ type: String, json: { write: true } })], y4.prototype, "title", void 0), y4 = d7 = e([n("esri.form.FormTemplate")], y4);
var E = y4;

// node_modules/@arcgis/core/layers/graphics/sources/MemorySource.js
var T = 0;
var F = s2.getLogger("esri.layers.graphics.sources.MemorySource");
var G2 = class extends m4.LoadableMixin(m2(a2(j))) {
  constructor(e6) {
    super(e6), this._idToClientGraphic = null, this.type = "memory";
  }
  load(e6) {
    const t8 = r(e6) ? e6.signal : null;
    return this.addResolvingPromise(this._startWorker(t8)), Promise.resolve(this);
  }
  destroy() {
    var _a;
    (_a = this._connection) == null ? void 0 : _a.close(), this._connection = null;
  }
  get workerGeometryType() {
    var _a;
    const e6 = (_a = this.layer) == null ? void 0 : _a.geometryType;
    return e6 ? this._geometryTypeRequiresClientGraphicMapping(e6) ? "polygon" : e6 : null;
  }
  applyEdits(e6) {
    return this.load().then(() => this._applyEdits(e6));
  }
  openPorts() {
    return this.load().then(() => this._connection.openPorts());
  }
  async queryFeatures(e6, t8 = {}) {
    await this.load(t8);
    const r6 = await this._connection.invoke("queryFeatures", e6 ? e6.toJSON() : null, t8);
    r3(e6, this.layer.spatialReference, r6);
    const s14 = x.fromJSON(r6);
    if (!this._requiresClientGraphicMapping())
      return s14;
    const o7 = this.layer.objectIdField;
    for (const i10 of s14.features) {
      const e7 = i10.attributes[o7], t9 = this._idToClientGraphic.get(e7);
      t9 && (i10.geometry = t9.geometry);
    }
    return s14.geometryType = this.layer.geometryType, s14;
  }
  async queryFeaturesJSON(e6, t8 = {}) {
    if (this._requiresClientGraphicMapping())
      throw new s3("query-features-json:unsupported", "Cannot query in JSON format for client only geometry types (mesh and extent)");
    await this.load(t8);
    const r6 = await this._connection.invoke("queryFeatures", e6 ? e6.toJSON() : null, t8);
    return r3(e6, this.layer.spatialReference, r6), r6;
  }
  queryFeatureCount(e6, t8 = {}) {
    return this.load(t8).then(() => this._connection.invoke("queryFeatureCount", e6 ? e6.toJSON() : null, t8));
  }
  queryObjectIds(e6, t8 = {}) {
    return this.load(t8).then(() => this._connection.invoke("queryObjectIds", e6 ? e6.toJSON() : null, t8));
  }
  queryExtent(e6, t8 = {}) {
    return this.load(t8).then(() => this._connection.invoke("queryExtent", e6 ? e6.toJSON() : null, t8)).then((e7) => ({ count: e7.count, extent: M.fromJSON(e7.extent) }));
  }
  querySnapping(e6, t8 = {}) {
    return this.load(t8).then(() => this._connection.invoke("querySnapping", e6, t8));
  }
  async _applyEdits(e6) {
    if (!this._connection)
      throw new s3("feature-layer-source:edit-failure", "Memory source not loaded");
    const t8 = this.layer.objectIdField;
    let r6 = null;
    const o7 = [], i10 = [];
    await Promise.all([this._prepareClientMapping(e6.addFeatures, null), this._prepareClientMapping(e6.updateFeatures, null)]);
    const n13 = (e7) => "objectId" in e7 && null != e7.objectId ? e7.objectId : "attributes" in e7 && null != e7.attributes[t8] ? e7.attributes[t8] : null;
    if (e6.addFeatures && (r6 = this._prepareAddFeatures(e6.addFeatures)), e6.deleteFeatures)
      for (const s14 of e6.deleteFeatures) {
        const e7 = n13(s14);
        null != e7 && o7.push(e7);
      }
    const a10 = e6.updateFeatures && this._idToClientGraphic ? /* @__PURE__ */ new Map() : null;
    if (e6.updateFeatures) {
      for (const s14 of e6.updateFeatures)
        if (i10.push(this._serializeFeature(s14)), a10) {
          const e7 = n13(s14);
          null != e7 && a10.set(e7, s14);
        }
    }
    i(r6 ? r6.features : null, i10, this.layer.spatialReference);
    const { fullExtent: l9, featureEditResults: u6 } = await this._connection.invoke("applyEdits", { adds: r6 ? r6.features : [], updates: i10, deletes: o7 });
    return this.fullExtent = l9, r6 && r6.finish(u6.uidToObjectId), this._updateClientGraphicIds(a10, u6), this._createEditsResult(u6);
  }
  async _prepareClientMapping(e6, t8) {
    if ("mesh" !== this.layerOrSourceGeometryType || t(e6))
      return;
    const r6 = [];
    for (const { geometry: s14 } of e6)
      !r(s14) || "mesh" !== s14.type || s14.hasExtent || s14.loaded || r6.push(s14.load({ signal: t8 }));
    r6.length && await Promise.all(r6);
  }
  _updateClientGraphicIds(e6, t8) {
    if (this._idToClientGraphic) {
      if (e6)
        for (const r6 of t8.updateResults) {
          if (!r6.success)
            continue;
          const t9 = e6.get(r6.objectId);
          null != t9 && this._addIdToClientGraphic(t9);
        }
      for (const e7 of t8.deleteResults)
        e7.success && this._idToClientGraphic.delete(e7.objectId);
    }
  }
  _createEditsResult(e6) {
    return { addFeatureResults: e6.addResults ? e6.addResults.map(this._createFeatureEditResult, this) : [], updateFeatureResults: e6.updateResults ? e6.updateResults.map(this._createFeatureEditResult, this) : [], deleteFeatureResults: e6.deleteResults ? e6.deleteResults.map(this._createFeatureEditResult, this) : [], addAttachmentResults: [], updateAttachmentResults: [], deleteAttachmentResults: [] };
  }
  _createFeatureEditResult(e6) {
    const t8 = true === e6.success ? null : e6.error || { code: void 0, description: void 0 };
    return { objectId: e6.objectId, globalId: e6.globalId, error: t8 ? new s3("feature-layer-source:edit-failure", t8.description, { code: t8.code }) : null };
  }
  _prepareAddFeatures(e6) {
    const t8 = /* @__PURE__ */ new Map(), r6 = new Array(e6.length);
    let s14 = null;
    for (let i10 = 0; i10 < e6.length; i10++) {
      const o8 = e6[i10], n13 = this._serializeFeature(o8);
      !s14 && r(o8.geometry) && (s14 = o8.geometry.type), r6[i10] = n13, t8.set(`${n13.uid}`, o8);
    }
    const o7 = this;
    return { features: r6, inferredGeometryType: s14, finish(e7) {
      const r7 = o7.sourceJSON.objectIdField;
      for (const s15 in e7) {
        const i10 = e7[s15], n13 = t8.get(s15);
        n13 && (n13.attributes || (n13.attributes = {}), -1 === i10 ? delete n13.attributes[r7] : n13.attributes[r7] = i10, o7._addIdToClientGraphic(n13));
      }
    } };
  }
  _addIdToClientGraphic(e6) {
    if (!this._idToClientGraphic)
      return;
    const t8 = this.sourceJSON.objectIdField, r6 = e6.attributes && e6.attributes[t8];
    null != r6 && this._idToClientGraphic.set(r6, e6);
  }
  get layerOrSourceGeometryType() {
    var _a, _b;
    return ((_a = this.layer) == null ? void 0 : _a.geometryType) ?? ((_b = this.sourceJSON) == null ? void 0 : _b.geometryType);
  }
  _requiresClientGraphicMapping() {
    return this._geometryTypeRequiresClientGraphicMapping(this.layerOrSourceGeometryType);
  }
  _geometryRequiresClientGraphicMapping(e6) {
    return this._geometryTypeRequiresClientGraphicMapping(e6.type);
  }
  _geometryTypeRequiresClientGraphicMapping(e6) {
    return "mesh" === e6 || "multipatch" === e6 || "extent" === e6;
  }
  _serializeFeature(e6) {
    const { attributes: t8 } = e6, r6 = this._geometryForSerialization(e6), s14 = (T++).toString();
    return r6 ? { uid: s14, geometry: r6.toJSON(), attributes: t8 } : { uid: s14, attributes: t8 };
  }
  _geometryForSerialization(e6) {
    const { geometry: t8 } = e6;
    if (t(t8))
      return null;
    if (this._geometryRequiresClientGraphicMapping(t8)) {
      return t8.extent ? v.fromExtent(t8.extent) : null;
    }
    return t8;
  }
  async _startWorker(e6) {
    this._connection = await u3("MemorySourceWorker", { strategy: a("feature-layers-workers") ? "dedicated" : "local", signal: e6 });
    const { fields: t8, spatialReference: r6, objectIdField: s14, hasM: o7, hasZ: n13, timeInfo: a10 } = this.layer, l9 = "defaults" === this.layer.originOf("spatialReference");
    await this._prepareClientMapping(this.items, e6);
    const u6 = this._prepareAddFeatures(this.items);
    this.handles.add(this.on("before-changes", (e7) => {
      F.error("Source modifications will not propagate after layer has been loaded. Please use .applyEdits() instead"), e7.preventDefault();
    }));
    const p23 = { features: u6.features, fields: t8 && t8.map((e7) => e7.toJSON()), geometryType: t2.toJSON(this.workerGeometryType), hasM: "mesh" !== this.layerOrSourceGeometryType && o7, hasZ: "mesh" === this.layerOrSourceGeometryType || n13, objectIdField: s14, spatialReference: l9 ? null : r6 && r6.toJSON(), timeInfo: a10 ? a10.toJSON() : null }, d8 = await this._connection.invoke("load", p23, { signal: e6 });
    for (const i10 of d8.warnings)
      F.warn(i10.message, { layer: this.layer, warning: i10 });
    d8.featureErrors.length && F.warn(`Encountered ${d8.featureErrors.length} validation errors while loading features`, d8.featureErrors);
    const h2 = d8.layerDefinition;
    this._geometryTypeRequiresClientGraphicMapping(u6.inferredGeometryType) && (h2.geometryType = t2.toJSON(u6.inferredGeometryType)), this.sourceJSON = h2, this._requiresClientGraphicMapping() && (this._idToClientGraphic = /* @__PURE__ */ new Map()), u6.finish(d8.assignedObjectIds);
  }
};
e([n2({ Type: g2, ensureType: b(g2) })], G2.prototype, "itemType", void 0), e([d()], G2.prototype, "type", void 0), e([d({ constructOnly: true })], G2.prototype, "layer", void 0), e([d({ readOnly: true })], G2.prototype, "workerGeometryType", null), e([d()], G2.prototype, "sourceJSON", void 0), G2 = e([n("esri.layers.graphics.sources.MemorySource")], G2);

// node_modules/@arcgis/core/layers/support/FeatureIndex.js
var t7;
var c10 = t7 = class extends l2 {
  constructor(o7) {
    super(o7);
  }
  clone() {
    const { name: o7, fields: r6, isAscending: s14, isUnique: e6, description: c12 } = this;
    return new t7({ name: o7, fields: r6, isAscending: s14, isUnique: e6, description: c12 });
  }
};
e([d({ constructOnly: true })], c10.prototype, "name", void 0), e([d({ constructOnly: true })], c10.prototype, "fields", void 0), e([d({ constructOnly: true })], c10.prototype, "isAscending", void 0), e([d({ constructOnly: true })], c10.prototype, "isUnique", void 0), e([d({ constructOnly: true })], c10.prototype, "description", void 0), c10 = t7 = e([n("esri.layers.support.FeatureIndex")], c10);

// node_modules/@arcgis/core/layers/support/GeometryFieldsInfo.js
var a8 = class extends l4(l2) {
  constructor(e6) {
    super(e6), this.shapeAreaField = null, this.shapeLengthField = null, this.units = null;
  }
};
e([d({ type: String, json: { read: { source: "shapeAreaFieldName" } } })], a8.prototype, "shapeAreaField", void 0), e([d({ type: String, json: { read: { source: "shapeLengthFieldName" } } })], a8.prototype, "shapeLengthField", void 0), e([d({ type: String, json: { read: (e6) => me.read(e6) || fe.read(e6) } })], a8.prototype, "units", void 0), a8 = e([n("esri.layers.support.GeometryFieldsInfo")], a8);
var c11 = a8;

// node_modules/@arcgis/core/layers/support/Relationship.js
var a9 = new s({ esriRelCardinalityOneToOne: "one-to-one", esriRelCardinalityOneToMany: "one-to-many", esriRelCardinalityManyToMany: "many-to-many" });
var n12 = new s({ esriRelRoleOrigin: "origin", esriRelRoleDestination: "destination" });
var l8 = class extends l4(l2) {
  constructor(e6) {
    super(e6), this.cardinality = null, this.composite = null, this.id = null, this.keyField = null, this.keyFieldInRelationshipTable = null, this.name = null, this.relatedTableId = null, this.relationshipTableId = null, this.role = null;
  }
};
e([d({ json: { read: a9.read, write: a9.write } })], l8.prototype, "cardinality", void 0), e([d({ json: { read: true, write: true } })], l8.prototype, "composite", void 0), e([d({ json: { read: true, write: true } })], l8.prototype, "id", void 0), e([d({ json: { read: true, write: true } })], l8.prototype, "keyField", void 0), e([d({ json: { read: true, write: true } })], l8.prototype, "keyFieldInRelationshipTable", void 0), e([d({ json: { read: true, write: true } })], l8.prototype, "name", void 0), e([d({ json: { read: true, write: true } })], l8.prototype, "relatedTableId", void 0), e([d({ json: { read: true, write: true } })], l8.prototype, "relationshipTableId", void 0), e([d({ json: { read: n12.read, write: n12.write } })], l8.prototype, "role", void 0), l8 = e([n("esri.layers.support.Relationship")], l8);
var p22 = l8;

// node_modules/@arcgis/core/layers/FeatureLayer.js
var qe = new s({ esriGeometryPoint: "point", esriGeometryMultipoint: "multipoint", esriGeometryPolyline: "polyline", esriGeometryPolygon: "polygon", esriGeometryMultiPatch: "multipatch" });
var Qe = { name: "supportsName", size: "supportsSize", contentType: "supportsContentType", keywords: "supportsKeywords", exifInfo: "supportsExifInfo" };
var Ue = "FeatureLayer";
var Ge = s2.getLogger("esri.layers.FeatureLayer");
function Ve(e6, t8) {
  return new s3("layer:unsupported", `Layer (${e6.title}, ${e6.id}) of type '${e6.declaredClass}' ${t8}`, { layer: e6 });
}
function ze(e6) {
  return e6 && e6 instanceof j;
}
function Be(e6, t8, r6) {
  return !!(e6 && e6.hasOwnProperty(t8) ? e6[t8] : r6);
}
function ke(e6, t8, r6) {
  return e6 && e6.hasOwnProperty(t8) ? e6[t8] : r6;
}
function Ne(e6) {
  var _a;
  const t8 = (_a = e6 == null ? void 0 : e6.supportedSpatialAggregationStatistics) == null ? void 0 : _a.map((e7) => e7.toLowerCase());
  return { envelope: !!(t8 == null ? void 0 : t8.includes("envelopeaggregate")), centroid: !!(t8 == null ? void 0 : t8.includes("centroidaggregate")), convexHull: !!(t8 == null ? void 0 : t8.includes("convexhullaggregate")) };
}
function We(e6, t8) {
  var _a;
  const r6 = (_a = e6 == null ? void 0 : e6.supportedOperationsWithCacheHint) == null ? void 0 : _a.map((e7) => e7.toLowerCase());
  return !!(r6 == null ? void 0 : r6.includes(t8.toLowerCase()));
}
var He = l5();
function Je(e6, t8, r6) {
  const i10 = !!(r6 == null ? void 0 : r6.writeLayerSchema);
  return { enabled: i10, ignoreOrigin: i10 };
}
var Ze = class extends p5(a3(p6(a4(t5(n5(p4(c2(v4(O(o4(i2(l4(b5))))))))))))) {
  constructor(...e6) {
    super(...e6), this._handles = new u(), this.capabilities = null, this.charts = null, this.copyright = null, this.datesInUnknownTimezone = false, this.displayField = null, this.definitionExpression = null, this.dynamicDataSource = null, this.editFieldsInfo = null, this.editingInfo = null, this.elevationInfo = null, this.featureReduction = null, this.fields = null, this.fieldsIndex = null, this.floorInfo = null, this.formTemplate = null, this.fullExtent = null, this.gdbVersion = null, this.geometryFieldsInfo = null, this.geometryType = null, this.hasM = void 0, this.hasZ = void 0, this.heightModelInfo = null, this.historicMoment = null, this.infoFor3D = null, this.isTable = false, this.labelsVisible = true, this.labelingInfo = null, this.layerId = void 0, this.legendEnabled = true, this.minScale = 0, this.maxScale = 0, this.globalIdField = null, this.objectIdField = null, this.outFields = null, this.path = null, this.popupEnabled = true, this.popupTemplate = null, this.relationships = null, this.sourceJSON = null, this.returnM = void 0, this.returnZ = void 0, this.screenSizePerspectiveEnabled = true, this.serviceDefinitionExpression = null, this.spatialReference = k.WGS84, this.subtypeCode = null, this.subtypeField = null, this.templates = null, this.timeInfo = null, this.title = null, this.sublayerTitleMode = "item-title", this.trackIdField = null, this.type = "feature", this.typeIdField = null, this.types = null, this.indexes = new (j.ofType(c10))(), this.userIsAdmin = false, this.version = void 0, this.visible = true;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy(), this._handles = l(this._handles);
  }
  normalizeCtorArgs(e6, t8) {
    return "string" == typeof e6 ? { url: e6, ...t8 } : e6;
  }
  load(e6) {
    const t8 = r(e6) ? e6.signal : null;
    if (this.portalItem && this.portalItem.loaded && this.source)
      return void this.addResolvingPromise(this.createGraphicsSource(t8).then((e7) => this._initLayerProperties(e7)));
    const r6 = this.loadFromPortal({ supportedTypes: ["Feature Service", "Feature Collection"] }, e6).catch(w).then(async () => {
      if (this.url && null == this.layerId && /FeatureServer|MapServer\/*$/i.test(this.url)) {
        const e7 = await this._fetchFirstLayerId(t8);
        null != e7 && (this.layerId = e7);
      }
      if (!this.url && !this._hasMemorySource())
        throw new s3("feature-layer:missing-url-or-source", "Feature layer must be created with either a url or a source");
      return this._initLayerProperties(await this.createGraphicsSource(t8));
    }).then(() => this.finishLoadEditablePortalLayer(e6));
    return this.addResolvingPromise(r6), Promise.resolve(this);
  }
  readCapabilities(e6, t8) {
    return t8 = t8.layerDefinition || t8, { analytics: this._readAnalyticsCapabilities(t8), attachment: this._readAttachmentCapabilities(t8), data: this._readDataCapabilities(t8), metadata: this._readMetadataCapabilities(t8), operations: this._readOperationsCapabilities(t8.capabilities || e6, t8), query: this._readQueryCapabilities(t8), queryRelated: this._readQueryRelatedCapabilities(t8), queryTopFeatures: this._readQueryTopFeaturesCapabilities(t8), editing: this._readEditingCapabilities(t8) };
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("dynamicDataSource"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("gdbVersion"), this.commitProperty("historicMoment"), this.commitProperty("returnZ"), this.commitProperty("capabilities"), this.commitProperty("returnM"), (this._get("createQueryVersion") || 0) + 1;
  }
  get editingEnabled() {
    return !(this.loaded && !this.capabilities.operations.supportsEditing) && (this._isOverridden("editingEnabled") ? this._get("editingEnabled") : this._hasMemorySource() || this.userHasEditingPrivileges);
  }
  set editingEnabled(e6) {
    null != e6 ? this._override("editingEnabled", e6) : this._clearOverride("editingEnabled");
  }
  readEditingEnabled(e6, t8) {
    return this._readEditingEnabled(t8, false);
  }
  readEditingEnabledFromWebMap(e6, t8, r6) {
    return this._readEditingEnabled(t8, true, r6);
  }
  writeEditingEnabled(e6, t8) {
    this._writeEditingEnabled(e6, t8, false);
  }
  writeEditingEnabledToWebMap(e6, t8, r6, i10) {
    this._writeEditingEnabled(e6, t8, true, i10);
  }
  readEditingInfo(e6, t8) {
    const { editingInfo: r6 } = t8;
    return r6 ? { lastEditDate: null != r6.lastEditDate ? new Date(r6.lastEditDate) : null } : null;
  }
  readIsTable(e6, t8) {
    return "Table" === (t8 = t8 && t8.layerDefinition || t8).type || !t8.geometryType;
  }
  writeIsTable(e6, t8, r6, i10) {
    (i10 == null ? void 0 : i10.writeLayerSchema) && o(r6, e6 ? "Table" : "Feature Layer", t8);
  }
  readMinScale(e6, t8) {
    return t8.effectiveMinScale || e6 || 0;
  }
  readMaxScale(e6, t8) {
    return t8.effectiveMaxScale || e6 || 0;
  }
  readGlobalIdFieldFromService(e6, t8) {
    if ((t8 = t8.layerDefinition || t8).globalIdField)
      return t8.globalIdField;
    if (t8.fields) {
      for (const r6 of t8.fields)
        if ("esriFieldTypeGlobalID" === r6.type)
          return r6.name;
    }
  }
  readObjectIdFieldFromService(e6, t8) {
    if ((t8 = t8.layerDefinition || t8).objectIdField)
      return t8.objectIdField;
    if (t8.fields) {
      for (const r6 of t8.fields)
        if ("esriFieldTypeOID" === r6.type)
          return r6.name;
    }
  }
  get parsedUrl() {
    const e6 = this.url ? j2(this.url) : null;
    return null != e6 && (null != this.dynamicDataSource ? e6.path = G(e6.path, "dynamicLayer") : null != this.layerId && (e6.path = G(e6.path, this.layerId.toString()))), e6;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set renderer(e6) {
    c5(e6, this.fieldsIndex), this._set("renderer", e6);
  }
  readRenderer(e6, t8, s14) {
    const a10 = (t8 = t8.layerDefinition || t8).drawingInfo && t8.drawingInfo.renderer || void 0;
    if (a10) {
      const e7 = o3(a10, t8, s14) || void 0;
      return e7 || Ge.error("Failed to create renderer", { rendererDefinition: t8.drawingInfo.renderer, layer: this, context: s14 }), e7;
    }
    if (t8.defaultSymbol)
      return t8.types && t8.types.length ? new P({ defaultSymbol: $e(t8.defaultSymbol, t8, s14), field: t8.typeIdField, uniqueValueInfos: t8.types.map((e7) => ({ id: e7.id, symbol: $e(e7.symbol, e7, s14) })) }) : new p2({ symbol: $e(t8.defaultSymbol, t8, s14) });
  }
  set source(e6) {
    const t8 = this._get("source");
    t8 !== e6 && (ze(t8) && this._resetMemorySource(t8), ze(e6) && this._initMemorySource(e6), this._set("source", e6));
  }
  castSource(e6) {
    return e6 ? Array.isArray(e6) || e6 instanceof j ? new G2({ layer: this, items: e6 }) : e6 : null;
  }
  readSource(e6, t8) {
    const r6 = x.fromJSON(t8.featureSet);
    return new G2({ layer: this, items: r6 && r6.features || [] });
  }
  readServiceDefinitionExpression(e6, t8) {
    return t8.definitionQuery || t8.definitionExpression;
  }
  readTemplates(e6, t8) {
    const r6 = t8.editFieldsInfo, i10 = r6 && r6.creatorField, o7 = r6 && r6.editorField;
    return e6 = e6 && e6.map((e7) => p8.fromJSON(e7)), this._fixTemplates(e6, i10), this._fixTemplates(e6, o7), e6;
  }
  readTitle(e6, t8) {
    const r6 = t8.layerDefinition && t8.layerDefinition.name || t8.name, i10 = t8.title || t8.layerDefinition && t8.layerDefinition.title;
    if (r6) {
      const e7 = this.portalItem && this.portalItem.title;
      if ("item-title" === this.sublayerTitleMode)
        return this.url ? y2(this.url, r6) : r6;
      let t9 = r6;
      if (!t9 && this.url) {
        const e8 = m3(this.url);
        r(e8) && (t9 = e8.title);
      }
      if (!t9)
        return;
      return "item-title-and-service-name" === this.sublayerTitleMode && e7 && e7 !== t9 && (t9 = e7 + " - " + t9), h(t9);
    }
    if ("item-title" === this.sublayerTitleMode && i10)
      return i10;
  }
  readTitleFromWebMap(e6, t8) {
    return t8.title || t8.layerDefinition && t8.layerDefinition.name;
  }
  readTypeIdField(e6, t8) {
    let r6 = (t8 = t8.layerDefinition || t8).typeIdField;
    if (r6 && t8.fields) {
      r6 = r6.toLowerCase();
      const e7 = t8.fields.find((e8) => e8.name.toLowerCase() === r6);
      e7 && (r6 = e7.name);
    }
    return r6;
  }
  readTypes(e6, t8) {
    e6 = (t8 = t8.layerDefinition || t8).types;
    const r6 = t8.editFieldsInfo, i10 = r6 && r6.creatorField, o7 = r6 && r6.editorField;
    return e6 && e6.map((e7) => (e7 = n7.fromJSON(e7), this._fixTemplates(e7.templates, i10), this._fixTemplates(e7.templates, o7), e7));
  }
  set url(e6) {
    const t8 = L({ layer: this, url: e6, nonStandardUrlAllowed: true, logger: Ge });
    this._set("url", t8.url), null != t8.layerId && this._set("layerId", t8.layerId);
  }
  writeUrl(e6, t8, r6, i10) {
    b3(this, e6, null, t8, i10);
  }
  readVersion(e6, t8) {
    return t8.currentVersion ? t8.currentVersion : t8.hasOwnProperty("capabilities") || t8.hasOwnProperty("drawingInfo") || t8.hasOwnProperty("hasAttachments") || t8.hasOwnProperty("htmlPopupType") || t8.hasOwnProperty("relationships") || t8.hasOwnProperty("timeInfo") || t8.hasOwnProperty("typeIdField") || t8.hasOwnProperty("types") ? 10 : 9.3;
  }
  readVisible(e6, t8) {
    return t8.layerDefinition && null != t8.layerDefinition.defaultVisibility ? !!t8.layerDefinition.defaultVisibility : null != t8.visibility ? !!t8.visibility : void 0;
  }
  addAttachment(e6, t8) {
    return this.load().then(() => this._checkAttachmentSupport(e6)).then(() => {
      if (!("addAttachment" in this.source))
        throw new s3(Ue, "Layer source does not support addAttachment capability");
      return this.source.addAttachment(e6, t8);
    });
  }
  updateAttachment(e6, t8, r6) {
    return this.load().then(() => this._checkAttachmentSupport(e6)).then(() => {
      if (!("updateAttachment" in this.source))
        throw new s3(Ue, "Layer source does not support updateAttachment capability");
      return this.source.updateAttachment(e6, t8, r6);
    });
  }
  async applyEdits(e6, t8) {
    const r6 = await import("./editingSupport-ZEPOY3EL.js");
    return await this.load(), r6.applyEdits(this, this.source, e6, t8);
  }
  on(e6, t8) {
    return super.on(e6, t8);
  }
  createPopupTemplate(e6) {
    return d4(this, e6);
  }
  async createGraphicsSource(e6) {
    if (this._hasMemorySource())
      return this.source.load({ signal: e6 });
    const { default: t8 } = await y(import("./FeatureLayerSource-IKOM7CRG.js"), e6);
    return new t8({ layer: this }).load({ signal: e6 });
  }
  createQuery() {
    const e6 = new b2(), t8 = this.get("capabilities.data"), r6 = this.get("capabilities.query");
    e6.dynamicDataSource = this.dynamicDataSource, e6.historicMoment = this.historicMoment, e6.gdbVersion = this.gdbVersion, e6.returnGeometry = true, r6 && (e6.compactGeometryEnabled = r6.supportsCompactGeometry, e6.defaultSpatialReferenceEnabled = r6.supportsDefaultSpatialReference), t8 && (t8.supportsZ && null != this.returnZ && (e6.returnZ = this.returnZ), t8.supportsM && null != this.returnM && (e6.returnM = this.returnM)), e6.outFields = ["*"];
    const i10 = r(this.subtypeCode) ? `${this.subtypeField} = ${this.subtypeCode}` : null, o7 = t6(this.definitionExpression, i10);
    e6.where = o7 || "1=1";
    const { timeOffset: s14, timeExtent: a10 } = this;
    return e6.timeExtent = null != s14 && null != a10 ? a10.offset(-s14.value, s14.unit) : a10 || null, e6.multipatchOption = "multipatch" === this.geometryType ? "xyFootprint" : null, e6;
  }
  deleteAttachments(e6, t8) {
    return this.load().then(() => this._checkAttachmentSupport(e6)).then(() => {
      if (!("deleteAttachments" in this.source))
        throw new s3(Ue, "Layer source does not support deleteAttachments capability");
      return this.source.deleteAttachments(e6, t8);
    });
  }
  fetchRecomputedExtents(e6) {
    return this.load({ signal: e6 == null ? void 0 : e6.signal }).then(() => {
      if (this.source.fetchRecomputedExtents)
        return this.source.fetchRecomputedExtents(e6);
      throw new s3(Ue, "Layer source does not support fetchUpdates capability");
    });
  }
  getFeatureType(e6) {
    const { typeIdField: t8, types: r6 } = this;
    if (!t8 || !e6)
      return null;
    const i10 = e6.attributes ? e6.attributes[t8] : void 0;
    if (null == i10)
      return null;
    let o7 = null;
    return r6.some((e7) => {
      const { id: t9 } = e7;
      return null != t9 && (t9.toString() === i10.toString() && (o7 = e7), !!o7);
    }), o7;
  }
  getFieldDomain(e6, t8) {
    const r6 = t8 && t8.feature, i10 = this.getFeatureType(r6);
    if (i10) {
      const t9 = i10.domains && i10.domains[e6];
      if (t9 && "inherited" !== t9.type)
        return t9;
    }
    return this._getLayerDomain(e6);
  }
  getField(e6) {
    return this.fieldsIndex.get(e6);
  }
  queryAttachments(e6, t8) {
    return e6 = c4.from(e6), this.load().then(() => {
      if (!this.get("capabilities.data.supportsAttachment"))
        throw new s3(Ue, "this layer doesn't support attachments");
      const { attachmentTypes: t9, objectIds: r6, globalIds: i10, num: o7, size: s14, start: a10, where: n13 } = e6;
      if (!this.get("capabilities.operations.supportsQueryAttachments")) {
        const p23 = r6 && r6.length > 1, l9 = t9 && t9.length, u6 = i10 && i10.length, d8 = s14 && s14.length;
        if (p23 || l9 || u6 || d8 || o7 || a10 || n13)
          throw new s3(Ue, "when 'supportsQueryAttachments' is false, only objectIds of length 1 are supported", e6);
      }
      if (!(r6 && r6.length || n13))
        throw new s3(Ue, "'objectIds' or 'where' are required to perform attachment query", e6);
      if (!("queryAttachments" in this.source))
        throw new s3(Ue, "Layer source does not support queryAttachments capability", e6);
      return this.source.queryAttachments(e6);
    });
  }
  queryFeatures(e6, t8) {
    return this.load().then(() => this.source.queryFeatures(b2.from(e6) || this.createQuery(), t8)).then((e7) => {
      if (e7 == null ? void 0 : e7.features)
        for (const t9 of e7.features)
          t9.layer = t9.sourceLayer = this;
      return e7;
    });
  }
  queryObjectIds(e6, t8) {
    return this.load().then(() => {
      if (this.source.queryObjectIds)
        return this.source.queryObjectIds(b2.from(e6) || this.createQuery(), t8);
      throw new s3(Ue, "Layer source does not support queryObjectIds capability");
    });
  }
  queryFeatureCount(e6, t8) {
    return this.load().then(() => {
      if (this.source.queryFeatureCount)
        return this.source.queryFeatureCount(b2.from(e6) || this.createQuery(), t8);
      throw new s3(Ue, "Layer source does not support queryFeatureCount capability");
    });
  }
  queryExtent(e6, t8) {
    return this.load().then(() => {
      if (this.source.queryExtent)
        return this.source.queryExtent(b2.from(e6) || this.createQuery(), t8);
      throw new s3(Ue, "Layer source does not support queryExtent capability");
    });
  }
  queryRelatedFeatures(e6, t8) {
    return this.load().then(() => {
      if ("queryRelatedFeatures" in this.source)
        return this.source.queryRelatedFeatures(d3.from(e6), t8);
      throw new s3(Ue, "Layer source does not support queryRelatedFeatures capability");
    });
  }
  queryRelatedFeaturesCount(e6, t8) {
    return this.load().then(() => {
      if ("queryRelatedFeaturesCount" in this.source)
        return this.source.queryRelatedFeaturesCount(d3.from(e6), t8);
      throw new s3(Ue, "Layer source does not support queryRelatedFeaturesCount capability");
    });
  }
  queryTopFeatures(e6, t8) {
    return this.load().then(() => {
      if ("queryTopFeatures" in this.source && this.get("capabilities.query.supportsTopFeaturesQuery"))
        return this.source.queryTopFeatures(S.from(e6), t8).then((e7) => {
          if (e7 == null ? void 0 : e7.features)
            for (const t9 of e7.features)
              t9.layer = t9.sourceLayer = this;
          return e7;
        });
      throw new s3(Ue, "Layer source does not support queryTopFeatures capability");
    });
  }
  queryTopObjectIds(e6, t8) {
    return this.load().then(() => {
      if ("queryTopObjectIds" in this.source && this.get("capabilities.query.supportsTopFeaturesQuery"))
        return this.source.queryTopObjectIds(S.from(e6), t8);
      throw new s3(Ue, "Layer source does not support queryTopObjectIds capability");
    });
  }
  queryTopFeaturesExtent(e6, t8) {
    return this.load().then(() => {
      if ("queryTopExtents" in this.source && this.get("capabilities.query.supportsTopFeaturesQuery"))
        return this.source.queryTopExtents(S.from(e6), t8);
      throw new s3(Ue, "Layer source does not support queryTopExtents capability");
    });
  }
  queryTopFeatureCount(e6, t8) {
    return this.load().then(() => {
      if ("queryTopCount" in this.source && this.get("capabilities.query.supportsTopFeaturesQuery"))
        return this.source.queryTopCount(S.from(e6), t8);
      throw new s3(Ue, "Layer source does not support queryFeatureCount capability");
    });
  }
  read(e6, t8) {
    const r6 = e6.featureCollection;
    if (r6) {
      const e7 = r6.layers;
      e7 && 1 === e7.length && (super.read(e7[0], t8), null != r6.showLegend && super.read({ showLegend: r6.showLegend }, t8));
    }
    super.read(e6, t8), t8 && "service" === t8.origin && this.revert(["objectIdField", "fields", "timeInfo", "spatialReference"], "service");
  }
  write(e6, t8) {
    t8 = { ...t8, writeLayerSchema: (t8 == null ? void 0 : t8.writeLayerSchema) ?? this._hasMemorySource() };
    const { origin: r6, layerContainerType: i10, messages: o7 } = t8;
    if (this.dynamicDataSource)
      return o7 == null ? void 0 : o7.push(Ve(this, "using a dynamic data source cannot be written to web scenes, web maps and feature service items")), null;
    if (this.isTable) {
      if ("web-scene" === r6 || "web-map" === r6 && "tables" !== i10)
        return o7 == null ? void 0 : o7.push(Ve(this, "using a table source cannot be written to web scenes and web maps")), null;
      if (this._hasMemorySource())
        return o7 == null ? void 0 : o7.push(Ve(this, "using an in-memory table source cannot be written to web scenes and web maps")), null;
    } else if (this.loaded && "web-map" === r6 && "tables" === i10)
      return o7 == null ? void 0 : o7.push(Ve(this, "using a non-table source cannot be written to tables in web maps")), null;
    return super.write(e6, t8);
  }
  clone() {
    if (this._hasMemorySource())
      throw new s3(Ue, `FeatureLayer (title: ${this.title}, id: ${this.id}) created using in-memory source cannot be cloned`);
    return super.clone();
  }
  serviceSupportsSpatialReference(e6) {
    return !!this.loaded && ("memory" === this.source.type || e2(this, e6));
  }
  async save(e6) {
    return (await import("./featureLayerUtils-KERTFHZR.js")).save(this, e6);
  }
  async saveAs(e6, t8) {
    return (await import("./featureLayerUtils-KERTFHZR.js")).saveAs(this, e6, t8);
  }
  _readEditingEnabled(e6, t8, r6) {
    var _a;
    let i10 = (_a = e6.layerDefinition) == null ? void 0 : _a.capabilities;
    return i10 ? this._hasEditingCapability(i10) : (i10 = e6.capabilities, t8 && "web-map" === (r6 == null ? void 0 : r6.origin) && !this._hasMemorySource() && i10 ? this._hasEditingCapability(i10) : void 0);
  }
  _hasEditingCapability(e6) {
    return e6.toLowerCase().split(",").map((e7) => e7.trim()).includes("editing");
  }
  _writeEditingEnabled(e6, t8, r6, i10) {
    var _a, _b;
    if (!e6) {
      const e7 = ((_b = (_a = this.capabilities) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsSync) ? "Query,Sync" : "Query";
      o("layerDefinition.capabilities", e7, t8), r6 && !(i10 == null ? void 0 : i10.writeLayerSchema) && (t8.capabilities = e7);
    }
  }
  _checkAttachmentSupport(e6) {
    const { attributes: t8 } = e6, { objectIdField: r6 } = this;
    return this.get("capabilities.data.supportsAttachment") ? e6 ? t8 ? t8[r6] ? void 0 : Promise.reject(new s3(Ue, `feature is missing the identifying attribute ${r6}`)) : Promise.reject(new s3(Ue, "'attributes' are required on a feature to query attachments")) : Promise.reject(new s3(Ue, "A feature is required to add/delete/update attachments")) : Promise.reject(new s3(Ue, "this layer doesn't support attachments"));
  }
  _getLayerDomain(e6) {
    const t8 = this.fieldsIndex.get(e6);
    return t8 ? t8.domain : null;
  }
  _fetchFirstLayerId(e6) {
    return U(this.url, { query: { f: "json", ...this.customParameters, token: this.apiKey }, responseType: "json", signal: e6 }).then((e7) => {
      const t8 = e7.data;
      if (t8)
        return Array.isArray(t8.layers) && t8.layers.length > 0 ? t8.layers[0].id : Array.isArray(t8.tables) && t8.tables.length > 0 ? t8.tables[0].id : void 0;
    });
  }
  async _initLayerProperties(e6) {
    return this._set("source", e6), e6.sourceJSON && (this.sourceJSON = e6.sourceJSON, this.read(e6.sourceJSON, { origin: "service", url: this.parsedUrl })), this._verifySource(), this._verifyFields(), c5(this.renderer, this.fieldsIndex), m6(this.timeInfo, this.fieldsIndex), t4(this, { origin: "service" });
  }
  async hasDataChanged() {
    var _a, _b;
    if ((_a = this.source) == null ? void 0 : _a.refresh)
      try {
        const { dataChanged: e6, updates: t8 } = await ((_b = this.source) == null ? void 0 : _b.refresh());
        if (r(t8) && (this.sourceJSON = { ...this.sourceJSON, ...t8 }, this.read(t8, { origin: "service", url: this.parsedUrl })), e6)
          return true;
      } catch {
      }
    if (this.definitionExpression)
      try {
        return (await r4(this.definitionExpression, this.fieldsIndex)).hasDateFunctions;
      } catch {
      }
    return false;
  }
  _verifyFields() {
    var _a;
    const e6 = this.parsedUrl && this.parsedUrl.path || "undefined";
    this.objectIdField || console.log("FeatureLayer: 'objectIdField' property is not defined (url: " + e6 + ")"), this.isTable || this._hasMemorySource() || -1 !== e6.search(/\/FeatureServer\//i) || ((_a = this.fields) == null ? void 0 : _a.some((e7) => "geometry" === e7.type)) || console.log("FeatureLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: " + e6 + ")");
  }
  _fixTemplates(e6, t8) {
    e6 && e6.forEach((e7) => {
      const r6 = e7.prototype && e7.prototype.attributes;
      r6 && t8 && delete r6[t8];
    });
  }
  _verifySource() {
    if (this._hasMemorySource()) {
      if (this.url)
        throw new s3("feature-layer:mixed-source-and-url", "FeatureLayer cannot be created with both an in-memory source and a url");
    } else if (!this.url)
      throw new s3("feature-layer:source-or-url-required", "FeatureLayer requires either a url, a valid portal item or a source");
  }
  _initMemorySource(e6) {
    e6.forEach((e7) => {
      e7.layer = this, e7.sourceLayer = this;
    }), this._handles.add([e6.on("after-add", (e7) => {
      e7.item.layer = this, e7.item.sourceLayer = this;
    }), e6.on("after-remove", (e7) => {
      e7.item.layer = null, e7.item.sourceLayer = null;
    })], "fl-source");
  }
  _resetMemorySource(e6) {
    e6.forEach((e7) => {
      e7.layer = null, e7.sourceLayer = null;
    }), this._handles.remove("fl-source");
  }
  _hasMemorySource() {
    return !(this.url || !this.source);
  }
  _readAnalyticsCapabilities(e6) {
    return { supportsCacheHint: We(e6.advancedQueryCapabilities, "queryAnalytics") };
  }
  _readAttachmentCapabilities(e6) {
    const t8 = e6.attachmentProperties, r6 = { supportsName: false, supportsSize: false, supportsContentType: false, supportsKeywords: false, supportsExifInfo: false, supportsCacheHint: We(e6.advancedQueryCapabilities, "queryAttachments"), supportsResize: Be(e6, "supportsAttachmentsResizing", false) };
    return t8 && Array.isArray(t8) && t8.forEach((e7) => {
      const t9 = Qe[e7.name];
      t9 && (r6[t9] = !!e7.isEnabled);
    }), r6;
  }
  _readDataCapabilities(e6) {
    return { isVersioned: Be(e6, "isDataVersioned", false), supportsAttachment: Be(e6, "hasAttachments", false), supportsM: Be(e6, "hasM", false), supportsZ: Be(e6, "hasZ", false) };
  }
  _readMetadataCapabilities(e6) {
    return { supportsAdvancedFieldProperties: Be(e6, "supportsFieldDescriptionProperty", false) };
  }
  _readOperationsCapabilities(e6, t8) {
    const r6 = e6 ? e6.toLowerCase().split(",").map((e7) => e7.trim()) : [], i10 = this.url ? m3(this.url) : null, o7 = r6.includes(r(i10) && "MapServer" === i10.serverType ? "data" : "query"), s14 = r6.includes("editing") && !t8.datesInUnknownTimezone;
    let a10 = s14 && r6.includes("create"), n13 = s14 && r6.includes("delete"), p23 = s14 && r6.includes("update");
    const l9 = r6.includes("changetracking"), u6 = t8.advancedQueryCapabilities;
    return s14 && !(a10 || n13 || p23) && (a10 = n13 = p23 = true), { supportsCalculate: Be(t8, "supportsCalculate", false), supportsTruncate: Be(t8, "supportsTruncate", false), supportsValidateSql: Be(t8, "supportsValidateSql", false), supportsAdd: a10, supportsDelete: n13, supportsEditing: s14, supportsChangeTracking: l9, supportsQuery: o7, supportsQueryAnalytics: Be(u6, "supportsQueryAnalytic", false), supportsQueryAttachments: Be(u6, "supportsQueryAttachments", false), supportsQueryTopFeatures: Be(u6, "supportsTopFeaturesQuery", false), supportsResizeAttachments: Be(t8, "supportsAttachmentsResizing", false), supportsSync: r6.includes("sync"), supportsUpdate: p23, supportsExceedsLimitStatistics: Be(t8, "supportsExceedsLimitStatistics", false) };
  }
  _readQueryCapabilities(e6) {
    var _a;
    const t8 = e6.advancedQueryCapabilities, r6 = e6.ownershipBasedAccessControlForFeatures, i10 = e6.archivingInfo, o7 = (_a = this.url) == null ? void 0 : _a.includes("MapServer"), s14 = !a("mapserver-pbf-enabled") && o7 && this.version < 10.81, a10 = g(this.url), n13 = (e6.supportedQueryFormats || "").split(",").reduce((e7, t9) => {
      const r7 = t9.toLowerCase().trim();
      return r7 && e7.add(r7), e7;
    }, /* @__PURE__ */ new Set());
    return { supportsStatistics: Be(t8, "supportsStatistics", e6.supportsStatistics), supportsPercentileStatistics: Be(t8, "supportsPercentileStatistics", false), supportsSpatialAggregationStatistics: Be(t8, "supportsSpatialAggregationStatistics", false), supportedSpatialAggregationStatistics: Ne(t8), supportsCentroid: Be(t8, "supportsReturningGeometryCentroid", false), supportsDistance: Be(t8, "supportsQueryWithDistance", false), supportsDistinct: Be(t8, "supportsDistinct", e6.supportsAdvancedQueries), supportsExtent: Be(t8, "supportsReturningQueryExtent", false), supportsGeometryProperties: Be(t8, "supportsReturningGeometryProperties", false), supportsHavingClause: Be(t8, "supportsHavingClause", false), supportsOrderBy: Be(t8, "supportsOrderBy", e6.supportsAdvancedQueries), supportsPagination: Be(t8, "supportsPagination", false), supportsQuantization: Be(e6, "supportsCoordinatesQuantization", false), supportsQuantizationEditMode: Be(e6, "supportsQuantizationEditMode", false), supportsQueryGeometry: Be(e6, "supportsReturningQueryGeometry", false), supportsResultType: Be(t8, "supportsQueryWithResultType", false), supportsMaxRecordCountFactor: Be(t8, "supportsMaxRecordCountFactor", false), supportsSqlExpression: Be(t8, "supportsSqlExpression", false), supportsStandardizedQueriesOnly: Be(e6, "useStandardizedQueries", false), supportsTopFeaturesQuery: Be(t8, "supportsTopFeaturesQuery", false), supportsQueryByOthers: Be(r6, "allowOthersToQuery", true), supportsHistoricMoment: Be(i10, "supportsQueryWithHistoricMoment", false), supportsFormatPBF: !s14 && n13.has("pbf"), supportsDisjointSpatialRelationship: Be(t8, "supportsDisjointSpatialRel", false), supportsCacheHint: Be(t8, "supportsQueryWithCacheHint", false) || We(t8, "query"), supportsDefaultSpatialReference: Be(t8, "supportsDefaultSR", false), supportsCompactGeometry: a10, maxRecordCountFactor: ke(e6, "maxRecordCountFactor", void 0), maxRecordCount: ke(e6, "maxRecordCount", void 0), standardMaxRecordCount: ke(e6, "standardMaxRecordCount", void 0), tileMaxRecordCount: ke(e6, "tileMaxRecordCount", void 0) };
  }
  _readQueryRelatedCapabilities(e6) {
    const t8 = e6.advancedQueryCapabilities, r6 = Be(t8, "supportsAdvancedQueryRelated", false);
    return { supportsPagination: Be(t8, "supportsQueryRelatedPagination", false), supportsCount: r6, supportsOrderBy: r6, supportsCacheHint: We(t8, "queryRelated") };
  }
  _readQueryTopFeaturesCapabilities(e6) {
    return { supportsCacheHint: We(e6.advancedQueryCapabilities, "queryTopFilter") };
  }
  _readEditingCapabilities(e6) {
    const t8 = e6.ownershipBasedAccessControlForFeatures;
    return { supportsGeometryUpdate: Be(e6, "allowGeometryUpdates", true), supportsGlobalId: Be(e6, "supportsApplyEditsWithGlobalIds", false), supportsReturnServiceEditsInSourceSpatialReference: Be(e6, "supportsReturnServiceEditsInSourceSR", false), supportsRollbackOnFailure: Be(e6, "supportsRollbackOnFailureParameter", false), supportsUpdateWithoutM: Be(e6, "allowUpdateWithoutMValues", false), supportsUploadWithItemId: Be(e6, "supportsAttachmentsByUploadId", false), supportsDeleteByAnonymous: Be(t8, "allowAnonymousToDelete", true), supportsDeleteByOthers: Be(t8, "allowOthersToDelete", true), supportsUpdateByAnonymous: Be(t8, "allowAnonymousToUpdate", true), supportsUpdateByOthers: Be(t8, "allowOthersToUpdate", true) };
  }
};
e([d({ readOnly: true, json: { read: false } })], Ze.prototype, "capabilities", void 0), e([o2("service", "capabilities", ["advancedQueryCapabilities", "allowGeometryUpdates", "allowUpdateWithoutMValues", "archivingInfo", "capabilities", "datesInUnknownTimezone", "hasAttachments", "hasM", "hasZ", "maxRecordCount", "maxRecordCountFactor", "ownershipBasedAccessControlForFeatures", "standardMaxRecordCount", "supportedQueryFormats", "supportsAdvancedQueries", "supportsApplyEditsWithGlobalIds", "supportsAttachmentsByUploadId", "supportsAttachmentsResizing", "supportsCalculate", "supportsCoordinatesQuantization", "supportsExceedsLimitStatistics", "supportsFieldDescriptionProperty", "supportsQuantizationEditMode", "supportsRollbackOnFailureParameter", "supportsStatistics", "supportsTruncate", "supportsValidateSql", "tileMaxRecordCount", "useStandardizedQueries"])], Ze.prototype, "readCapabilities", null), e([d({ json: { origins: { "portal-item": { write: true }, "web-map": { write: true } } } })], Ze.prototype, "charts", void 0), e([d({ readOnly: true })], Ze.prototype, "createQueryVersion", null), e([d({ type: String, json: { read: { source: "layerDefinition.copyrightText" }, origins: { service: { read: { source: "copyrightText" } } } } })], Ze.prototype, "copyright", void 0), e([d({ type: Boolean })], Ze.prototype, "datesInUnknownTimezone", void 0), e([d({ type: String, json: { read: { source: "layerDefinition.displayField" }, origins: { service: { read: { source: "displayField" } } } } })], Ze.prototype, "displayField", void 0), e([d({ type: String, json: { origins: { service: { read: false, write: false } }, name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], Ze.prototype, "definitionExpression", void 0), e([d({ types: j3, readOnly: true })], Ze.prototype, "defaultSymbol", void 0), e([d({ type: K })], Ze.prototype, "dynamicDataSource", void 0), e([d({ readOnly: true })], Ze.prototype, "editFieldsInfo", void 0), e([d({ type: Boolean })], Ze.prototype, "editingEnabled", null), e([o2(["portal-item", "web-scene"], "editingEnabled", ["layerDefinition.capabilities"])], Ze.prototype, "readEditingEnabled", null), e([o2("web-map", "editingEnabled", ["capabilities", "layerDefinition.capabilities"])], Ze.prototype, "readEditingEnabledFromWebMap", null), e([r2(["portal-item", "web-scene"], "editingEnabled", { "layerDefinition.capabilities": { type: String } })], Ze.prototype, "writeEditingEnabled", null), e([r2("web-map", "editingEnabled", { capabilities: { type: String }, "layerDefinition.capabilities": { type: String } })], Ze.prototype, "writeEditingEnabledToWebMap", null), e([d({ readOnly: true })], Ze.prototype, "editingInfo", void 0), e([o2("editingInfo")], Ze.prototype, "readEditingInfo", null), e([d((() => {
  const e6 = m(d2), t8 = e6.json.origins;
  return t8["web-map"] = { read: false, write: false }, t8["portal-item"] = { read: false, write: false }, e6;
})())], Ze.prototype, "elevationInfo", void 0), e([d(p7)], Ze.prototype, "featureReduction", void 0), e([d({ ...He.fields, json: { read: { source: "layerDefinition.fields" }, origins: { service: { name: "fields" }, "web-map": { write: { target: "layerDefinition.fields", overridePolicy: Je } } } } })], Ze.prototype, "fields", void 0), e([d(He.fieldsIndex)], Ze.prototype, "fieldsIndex", void 0), e([d({ type: p9, json: { read: { source: "layerDefinition.floorInfo" }, write: { target: "layerDefinition.floorInfo" } } })], Ze.prototype, "floorInfo", void 0), e([d({ type: E, json: { name: "formInfo", write: true, origins: { "web-scene": { read: false, write: false } } } })], Ze.prototype, "formTemplate", void 0), e([d({ type: M, json: { origins: { service: { read: { source: "extent" } } }, read: { source: "layerDefinition.extent" } } })], Ze.prototype, "fullExtent", void 0), e([d()], Ze.prototype, "gdbVersion", void 0), e([d({ readOnly: true, type: c11, json: { read: { source: "geometryProperties" } } })], Ze.prototype, "geometryFieldsInfo", void 0), e([d({ type: ["point", "polygon", "polyline", "multipoint", "multipatch", "mesh"], json: { origins: { service: { read: qe.read }, "web-map": { write: { target: "layerDefinition.geometryType", overridePolicy: Je, writer(e6, t8, r6) {
  const i10 = e6 ? qe.toJSON(e6) : null;
  i10 && o(r6, i10, t8);
} } } }, read: { source: "layerDefinition.geometryType", reader: qe.read } } })], Ze.prototype, "geometryType", void 0), e([d({ type: Boolean, json: { origins: { service: { read: true } }, read: { source: "layerDefinition.hasM" } } })], Ze.prototype, "hasM", void 0), e([d({ type: Boolean, json: { origins: { service: { read: true } }, read: { source: "layerDefinition.hasZ" } } })], Ze.prototype, "hasZ", void 0), e([d({ readOnly: true, type: v5 })], Ze.prototype, "heightModelInfo", void 0), e([d({ type: Date })], Ze.prototype, "historicMoment", void 0), e([d(v3)], Ze.prototype, "id", void 0), e([d({ readOnly: true, json: { origins: { service: { read: true } }, read: false } })], Ze.prototype, "infoFor3D", void 0), e([d({ readOnly: true, json: { origins: { "web-map": { write: { target: "layerDefinition.type" } } } } })], Ze.prototype, "isTable", void 0), e([o2("service", "isTable", ["type", "geometryType"]), o2("isTable", ["layerDefinition.type", "layerDefinition.geometryType"])], Ze.prototype, "readIsTable", null), e([r2("web-map", "isTable")], Ze.prototype, "writeIsTable", null), e([d(m5)], Ze.prototype, "labelsVisible", void 0), e([d({ type: [j4], json: { origins: { service: { read: { source: "drawingInfo.labelingInfo", reader: r5 }, write: { target: "drawingInfo.labelingInfo", enabled: false } } }, read: { source: "layerDefinition.drawingInfo.labelingInfo", reader: r5 }, write: { target: "layerDefinition.drawingInfo.labelingInfo" } } })], Ze.prototype, "labelingInfo", void 0), e([d((() => {
  const e6 = m(u2);
  return e6.json.origins["portal-item"] = { write: { target: "layerDefinition.drawingInfo.transparency", writer(e7, t8, r6) {
    o(r6, n4(e7), t8);
  } } }, e6;
})())], Ze.prototype, "opacity", void 0), e([d({ type: Number, json: { origins: { service: { read: { source: "id" } }, "portal-item": { read: false, write: { target: "id" } } }, read: false } })], Ze.prototype, "layerId", void 0), e([d(c)], Ze.prototype, "legendEnabled", void 0), e([d({ type: ["show", "hide"], json: (() => {
  const e6 = m(D.json);
  return e6.origins["portal-item"] = { read: false, write: false }, e6;
})() })], Ze.prototype, "listMode", void 0), e([d(b4)], Ze.prototype, "minScale", void 0), e([o2("service", "minScale", ["minScale", "effectiveMinScale"])], Ze.prototype, "readMinScale", null), e([d(I)], Ze.prototype, "maxScale", void 0), e([o2("service", "maxScale", ["maxScale", "effectiveMaxScale"])], Ze.prototype, "readMaxScale", null), e([d({ type: String })], Ze.prototype, "globalIdField", void 0), e([o2("globalIdField", ["layerDefinition.globalIdField", "layerDefinition.fields"]), o2("service", "globalIdField", ["globalIdField", "fields"])], Ze.prototype, "readGlobalIdFieldFromService", null), e([d({ type: String, json: { origins: { "web-map": { write: { target: "layerDefinition.objectIdField", overridePolicy: Je } } } } })], Ze.prototype, "objectIdField", void 0), e([o2("objectIdField", ["layerDefinition.objectIdField", "layerDefinition.fields"]), o2("service", "objectIdField", ["objectIdField", "fields"])], Ze.prototype, "readObjectIdFieldFromService", null), e([d({ value: "ArcGISFeatureLayer", type: ["ArcGISFeatureLayer"] })], Ze.prototype, "operationalLayerType", void 0), e([d(He.outFields)], Ze.prototype, "outFields", void 0), e([d({ readOnly: true })], Ze.prototype, "parsedUrl", null), e([d({ type: String, json: { origins: { "web-scene": { read: true, write: true } }, read: false } })], Ze.prototype, "path", void 0), e([d(p)], Ze.prototype, "popupEnabled", void 0), e([d({ type: B, json: { name: "popupInfo", write: true } })], Ze.prototype, "popupTemplate", void 0), e([d({ readOnly: true })], Ze.prototype, "defaultPopupTemplate", null), e([d({ type: [p22], readOnly: true })], Ze.prototype, "relationships", void 0), e([d({ types: p3, json: { origins: { service: { write: { target: "drawingInfo.renderer", enabled: false } }, "web-scene": { types: n6, name: "layerDefinition.drawingInfo.renderer", write: { overridePolicy: (e6, t8, r6) => ({ ignoreOrigin: r6 == null ? void 0 : r6.writeLayerSchema }) } } }, write: { target: "layerDefinition.drawingInfo.renderer", overridePolicy: (e6, t8, r6) => ({ ignoreOrigin: r6 == null ? void 0 : r6.writeLayerSchema }) } } })], Ze.prototype, "renderer", null), e([o2("service", "renderer", ["drawingInfo.renderer", "defaultSymbol"]), o2("renderer", ["layerDefinition.drawingInfo.renderer", "layerDefinition.defaultSymbol"])], Ze.prototype, "readRenderer", null), e([d()], Ze.prototype, "sourceJSON", void 0), e([d({ type: Boolean })], Ze.prototype, "returnM", void 0), e([d({ type: Boolean })], Ze.prototype, "returnZ", void 0), e([d((() => {
  const e6 = m(l3);
  return e6.json.origins["portal-item"] = { read: false, write: false }, e6;
})())], Ze.prototype, "screenSizePerspectiveEnabled", void 0), e([d({ clonable: false })], Ze.prototype, "source", null), e([s5("source")], Ze.prototype, "castSource", null), e([o2("portal-item", "source", ["featureSet"]), o2("web-map", "source", ["featureSet"])], Ze.prototype, "readSource", null), e([d({ readOnly: true })], Ze.prototype, "serviceDefinitionExpression", void 0), e([o2("service", "serviceDefinitionExpression", ["definitionQuery", "definitionExpression"])], Ze.prototype, "readServiceDefinitionExpression", null), e([d({ type: k, json: { origins: { service: { read: { source: "extent.spatialReference" } } }, read: { source: "layerDefinition.extent.spatialReference" } } })], Ze.prototype, "spatialReference", void 0), e([d({ type: Number })], Ze.prototype, "subtypeCode", void 0), e([d({ type: String, json: { origins: { service: { read: true } } } })], Ze.prototype, "subtypeField", void 0), e([d({ type: [p8] })], Ze.prototype, "templates", void 0), e([o2("templates", ["editFieldsInfo", "creatorField", "editorField", "templates"])], Ze.prototype, "readTemplates", null), e([d({ type: v2 })], Ze.prototype, "timeInfo", void 0), e([d()], Ze.prototype, "title", void 0), e([o2("service", "title", ["name"]), o2("portal-item", "title", ["layerDefinition.title", "layerDefinition.name", "title"])], Ze.prototype, "readTitle", null), e([o2("web-map", "title", ["layerDefinition.name", "title"])], Ze.prototype, "readTitleFromWebMap", null), e([d({ type: String })], Ze.prototype, "sublayerTitleMode", void 0), e([d({ type: String, json: { read: { source: "timeInfo.trackIdField" } } })], Ze.prototype, "trackIdField", void 0), e([d({ json: { read: false } })], Ze.prototype, "type", void 0), e([d({ type: String })], Ze.prototype, "typeIdField", void 0), e([o2("service", "typeIdField"), o2("typeIdField", ["layerDefinition.typeIdField"])], Ze.prototype, "readTypeIdField", null), e([d({ type: [n7] })], Ze.prototype, "types", void 0), e([o2("service", "types", ["types"]), o2("types", ["layerDefinition.types"])], Ze.prototype, "readTypes", null), e([d({ readOnly: true, json: { write: false } })], Ze.prototype, "serverGens", void 0), e([d({ type: j.ofType(c10), readOnly: true })], Ze.prototype, "indexes", void 0), e([d(f)], Ze.prototype, "url", null), e([r2("url")], Ze.prototype, "writeUrl", null), e([d({ readOnly: true })], Ze.prototype, "userIsAdmin", void 0), e([d({ json: { origins: { service: { read: true } }, read: false } })], Ze.prototype, "version", void 0), e([o2("service", "version", ["currentVersion", "capabilities", "drawingInfo", "hasAttachments", "htmlPopupType", "relationships", "timeInfo", "typeIdField", "types"])], Ze.prototype, "readVersion", null), e([d({ type: Boolean, json: { origins: { "portal-item": { write: { target: "layerDefinition.defaultVisibility" } } } } })], Ze.prototype, "visible", void 0), e([o2("portal-item", "visible", ["visibility", "layerDefinition.defaultVisibility"])], Ze.prototype, "readVisible", null), Ze = e([n("esri.layers.FeatureLayer")], Ze);
var $e = s4({ types: M2 });
var Ke = Ze;

export {
  Ke
};
//# sourceMappingURL=chunk-7LOJJ46D.js.map
