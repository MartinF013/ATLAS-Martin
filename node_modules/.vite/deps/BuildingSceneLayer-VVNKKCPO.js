import {
  d as d3
} from "./chunk-CVV43JR7.js";
import {
  E
} from "./chunk-2FLJ43TR.js";
import {
  l as l2
} from "./chunk-E6HTI5QN.js";
import "./chunk-EY24INV2.js";
import "./chunk-3DTDACBY.js";
import {
  A,
  K
} from "./chunk-G4NYIT2C.js";
import "./chunk-ZG7SHSSS.js";
import "./chunk-CNBLQ5VM.js";
import "./chunk-WRJQ7542.js";
import "./chunk-QFYBIFWB.js";
import {
  t
} from "./chunk-PNUWGOXY.js";
import {
  n as n2
} from "./chunk-POPR7XUB.js";
import "./chunk-7LOJJ46D.js";
import "./chunk-VNR743PA.js";
import "./chunk-JJ7VMWJT.js";
import "./chunk-SWCA522B.js";
import "./chunk-YPIBZ3CH.js";
import "./chunk-XLCZFN6R.js";
import "./chunk-OMNBM2E4.js";
import "./chunk-WKHS6QIX.js";
import "./chunk-6O7ZZEV7.js";
import "./chunk-M2WA2LMI.js";
import "./chunk-UQDLDM54.js";
import "./chunk-YL26MZEL.js";
import "./chunk-OBCAVCXI.js";
import "./chunk-RFOZTYJH.js";
import "./chunk-J6DXGG2A.js";
import "./chunk-L2YBXQTH.js";
import "./chunk-S4ZKPFDU.js";
import "./chunk-YG6VFATO.js";
import "./chunk-WBX2MY5R.js";
import "./chunk-3DZ4BNVJ.js";
import "./chunk-4XBERLPX.js";
import "./chunk-SZPDY7KN.js";
import {
  i
} from "./chunk-Y6YGVGFR.js";
import {
  p as p2
} from "./chunk-GKRQ3NBT.js";
import "./chunk-OXEYQYNR.js";
import "./chunk-OXRBYKVX.js";
import "./chunk-6O2ARNGD.js";
import "./chunk-YLU2PLJS.js";
import "./chunk-MZX3HN4G.js";
import "./chunk-T47JAOQZ.js";
import "./chunk-6GPADSSO.js";
import "./chunk-CQ47VEUP.js";
import "./chunk-FU5UMT3R.js";
import "./chunk-ODX6X222.js";
import "./chunk-GSFXXEAM.js";
import "./chunk-QZTJM4HG.js";
import {
  p
} from "./chunk-TMSBC6BS.js";
import "./chunk-RIWDMEW4.js";
import "./chunk-C7S44TP4.js";
import "./chunk-KUWW4YJ7.js";
import "./chunk-P6I5J7W6.js";
import "./chunk-ORGMKDYR.js";
import "./chunk-F2DXUUYL.js";
import "./chunk-EGR3VVZG.js";
import "./chunk-F5A4XAOJ.js";
import "./chunk-4TDLPK3D.js";
import "./chunk-U7B2WKBH.js";
import "./chunk-T7SYNS2R.js";
import "./chunk-WODSLTZT.js";
import "./chunk-JMZLJZMP.js";
import {
  v
} from "./chunk-OG6CQEZJ.js";
import {
  c
} from "./chunk-X5Z3DJQ4.js";
import {
  O
} from "./chunk-BUWXVMJU.js";
import {
  d as d2,
  j as j2,
  y
} from "./chunk-JT3LXQ47.js";
import "./chunk-P3QN5DXX.js";
import "./chunk-QKRZMDWG.js";
import "./chunk-TBT57L4K.js";
import "./chunk-D3XXPCBB.js";
import {
  t as t2
} from "./chunk-OWBMOIIV.js";
import {
  b
} from "./chunk-SIH2IMSA.js";
import "./chunk-2AGPHSDM.js";
import "./chunk-JGSSQ5FR.js";
import "./chunk-5OEHY3VV.js";
import "./chunk-LJLQIETB.js";
import "./chunk-WKRVG5MO.js";
import "./chunk-GRILTTJT.js";
import "./chunk-JJRJ6TV3.js";
import "./chunk-K2FQEYBG.js";
import "./chunk-G4IZ2HTT.js";
import "./chunk-T7BEWVV3.js";
import "./chunk-ASC3X65B.js";
import "./chunk-KVF4M6PZ.js";
import "./chunk-IZCP5QP4.js";
import "./chunk-QFTOW2ST.js";
import "./chunk-I4USSDLI.js";
import "./chunk-VI3TTBSC.js";
import "./chunk-B42HXLDM.js";
import "./chunk-TVXPO7T5.js";
import "./chunk-2EZYA7VW.js";
import "./chunk-OEQ3EDRD.js";
import "./chunk-Z6EP2GTZ.js";
import "./chunk-P6G64ARX.js";
import "./chunk-GD6ALUPQ.js";
import "./chunk-RN2KRYDN.js";
import "./chunk-BLINZ65M.js";
import {
  t as t3
} from "./chunk-TADZYUVR.js";
import "./chunk-C5ULLWJ7.js";
import "./chunk-HFDYAQZS.js";
import "./chunk-HJHWUUQQ.js";
import "./chunk-TMBOFNWA.js";
import "./chunk-ZNEGSJWK.js";
import "./chunk-EI4MOLML.js";
import "./chunk-4SBWV5M2.js";
import "./chunk-CF56UYH2.js";
import "./chunk-5TRUGQDM.js";
import "./chunk-PZG7CR4Y.js";
import {
  r as r2
} from "./chunk-2HDG7SIE.js";
import "./chunk-56RHM4A6.js";
import "./chunk-ACJD5XFJ.js";
import "./chunk-OO2JXX7L.js";
import "./chunk-6DWU2ZQF.js";
import "./chunk-Q3R7XFM5.js";
import "./chunk-JCPK2OXG.js";
import {
  m as m3
} from "./chunk-HVM5D6S5.js";
import "./chunk-JYHTO6QC.js";
import {
  m as m2
} from "./chunk-FTLBKDGL.js";
import "./chunk-5Z5455ZY.js";
import "./chunk-D7DLEBS2.js";
import "./chunk-H7JF6Q7A.js";
import {
  j
} from "./chunk-TT2HIXWQ.js";
import "./chunk-OIPX3EDD.js";
import "./chunk-NWRK6QLX.js";
import "./chunk-HPH3FMVB.js";
import "./chunk-OOZMA7DN.js";
import "./chunk-Y7FSCP47.js";
import {
  U
} from "./chunk-65A2N4LL.js";
import "./chunk-GVELBHGI.js";
import {
  G
} from "./chunk-5N3FSR63.js";
import "./chunk-C4LU7RDX.js";
import "./chunk-EPCCNF3D.js";
import "./chunk-4PRVTUEZ.js";
import "./chunk-DMJWTK32.js";
import "./chunk-FVPTCNCX.js";
import "./chunk-BPZGJQOB.js";
import "./chunk-ZOKX6UGH.js";
import "./chunk-PKZEO23A.js";
import "./chunk-43S7PUMG.js";
import "./chunk-AIRC226G.js";
import "./chunk-BNPOKP6A.js";
import "./chunk-CHNDTVQJ.js";
import "./chunk-VLCG72SW.js";
import "./chunk-Q72YFZUL.js";
import "./chunk-YPZEGNLG.js";
import {
  k2 as k
} from "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import "./chunk-XRL56EGK.js";
import "./chunk-ZIHDQYKE.js";
import {
  o
} from "./chunk-GSRNZQFV.js";
import {
  l
} from "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import {
  w
} from "./chunk-U3PSONS6.js";
import {
  s2
} from "./chunk-HFTNOKM2.js";
import "./chunk-23NWA6WL.js";
import {
  s
} from "./chunk-CVWDM4C7.js";
import {
  m
} from "./chunk-G5JBUC5N.js";
import {
  r
} from "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfo.js
var e2 = class extends l {
  constructor() {
    super(...arguments), this.type = null;
  }
};
e([d({ type: String, readOnly: true, json: { write: true } })], e2.prototype, "type", void 0), e2 = e([n("esri.layers.support.BuildingFilterAuthoringInfo")], e2);
var p3 = e2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoType.js
var p4;
var i2 = p4 = class extends l {
  constructor() {
    super(...arguments), this.filterType = null, this.filterValues = null;
  }
  clone() {
    return new p4({ filterType: this.filterType, filterValues: m(this.filterValues) });
  }
};
e([d({ type: String, json: { write: true } })], i2.prototype, "filterType", void 0), e([d({ type: [String], json: { write: true } })], i2.prototype, "filterValues", void 0), i2 = p4 = e([n("esri.layers.support.BuildingFilterAuthoringInfoType")], i2);
var l3 = i2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoBlock.js
var c2;
var l4 = j.ofType(l3);
var n3 = c2 = class extends l {
  clone() {
    return new c2({ filterTypes: m(this.filterTypes) });
  }
};
e([d({ type: l4, json: { write: true } })], n3.prototype, "filterTypes", void 0), n3 = c2 = e([n("esri.layers.support.BuildingFilterAuthoringInfoBlock")], n3);
var m4 = n3;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoCheckbox.js
var p5;
var l5 = j.ofType(m4);
var n4 = p5 = class extends p3 {
  constructor() {
    super(...arguments), this.type = "checkbox";
  }
  clone() {
    return new p5({ filterBlocks: m(this.filterBlocks) });
  }
};
e([d({ type: ["checkbox"] })], n4.prototype, "type", void 0), e([d({ type: l5, json: { write: true } })], n4.prototype, "filterBlocks", void 0), n4 = p5 = e([n("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")], n4);
var u = n4;

// node_modules/@arcgis/core/layers/support/BuildingFilterMode.js
var t4 = class extends l {
};
e([d({ readOnly: true, json: { read: false } })], t4.prototype, "type", void 0), t4 = e([n("esri.layers.support.BuildingFilterMode")], t4);
var p6 = t4;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeSolid.js
var t5;
var p7 = t5 = class extends p6 {
  constructor() {
    super(...arguments), this.type = "solid";
  }
  clone() {
    return new t5();
  }
};
e([d({ type: ["solid"], readOnly: true, json: { write: true } })], p7.prototype, "type", void 0), p7 = t5 = e([n("esri.layers.support.BuildingFilterModeSolid")], p7);
var i3 = p7;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeWireFrame.js
var c3;
var m5 = c3 = class extends p6 {
  constructor() {
    super(...arguments), this.type = "wire-frame", this.edges = null;
  }
  clone() {
    return new c3({ edges: m(this.edges) });
  }
};
e([r2({ wireFrame: "wire-frame" })], m5.prototype, "type", void 0), e([d(t3)], m5.prototype, "edges", void 0), m5 = c3 = e([n("esri.layers.support.BuildingFilterModeWireFrame")], m5);
var a = m5;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeXRay.js
var t6;
var p8 = t6 = class extends p6 {
  constructor() {
    super(...arguments), this.type = "x-ray";
  }
  clone() {
    return new t6();
  }
};
e([d({ type: ["x-ray"], readOnly: true, json: { write: true } })], p8.prototype, "type", void 0), p8 = t6 = e([n("esri.layers.support.BuildingFilterModeXRay")], p8);
var c4 = p8;

// node_modules/@arcgis/core/layers/support/BuildingFilterBlock.js
var d4;
var a2 = { nonNullable: true, types: { key: "type", base: p6, typeMap: { solid: i3, "wire-frame": a, "x-ray": c4 } }, json: { read: (e3) => {
  switch (e3 && e3.type) {
    case "solid":
      return i3.fromJSON(e3);
    case "wireFrame":
      return a.fromJSON(e3);
    case "x-ray":
      return c4.fromJSON(e3);
    default:
      return;
  }
}, write: { enabled: true, isRequired: true } } };
var u2 = d4 = class extends l {
  constructor() {
    super(...arguments), this.filterExpression = null, this.filterMode = new i3(), this.title = "";
  }
  clone() {
    return new d4({ filterExpression: this.filterExpression, filterMode: m(this.filterMode), title: this.title });
  }
};
e([d({ type: String, json: { write: { enabled: true, isRequired: true } } })], u2.prototype, "filterExpression", void 0), e([d(a2)], u2.prototype, "filterMode", void 0), e([d({ type: String, json: { write: { enabled: true, isRequired: true } } })], u2.prototype, "title", void 0), u2 = d4 = e([n("esri.layers.support.BuildingFilterBlock")], u2);
var c5 = u2;

// node_modules/@arcgis/core/layers/support/BuildingFilter.js
var u3;
var d5 = j.ofType(c5);
var m6 = u3 = class extends l {
  constructor() {
    super(...arguments), this.description = null, this.filterBlocks = null, this.id = t(), this.name = null;
  }
  clone() {
    return new u3({ description: this.description, filterBlocks: m(this.filterBlocks), id: this.id, name: this.name, filterAuthoringInfo: m(this.filterAuthoringInfo) });
  }
};
e([d({ type: String, json: { write: true } })], m6.prototype, "description", void 0), e([d({ type: d5, json: { write: { enabled: true, isRequired: true } } })], m6.prototype, "filterBlocks", void 0), e([d({ types: { key: "type", base: p3, typeMap: { checkbox: u } }, json: { read: (o2) => "checkbox" === (o2 && o2.type) ? u.fromJSON(o2) : null, write: true } })], m6.prototype, "filterAuthoringInfo", void 0), e([d({ type: String, constructOnly: true, json: { write: { enabled: true, isRequired: true } } })], m6.prototype, "id", void 0), e([d({ type: String, json: { write: { enabled: true, isRequired: true } } })], m6.prototype, "name", void 0), m6 = u3 = e([n("esri.layers.support.BuildingFilter")], m6);
var f = m6;

// node_modules/@arcgis/core/layers/support/BuildingSummaryStatistics.js
var u4 = s.getLogger("esri.layers.support.BuildingSummaryStatistics");
var n5 = class extends l {
  constructor() {
    super(...arguments), this.fieldName = null, this.modelName = null, this.label = null, this.min = null, this.max = null, this.mostFrequentValues = null, this.subLayerIds = null;
  }
};
e([d({ type: String })], n5.prototype, "fieldName", void 0), e([d({ type: String })], n5.prototype, "modelName", void 0), e([d({ type: String })], n5.prototype, "label", void 0), e([d({ type: Number })], n5.prototype, "min", void 0), e([d({ type: Number })], n5.prototype, "max", void 0), e([d({ json: { read: (e3) => Array.isArray(e3) && (e3.every((e4) => "string" == typeof e4) || e3.every((e4) => "number" == typeof e4)) ? e3.slice() : null } })], n5.prototype, "mostFrequentValues", void 0), e([d({ type: [Number] })], n5.prototype, "subLayerIds", void 0), n5 = e([n("esri.layers.support.BuildingFieldStatistics")], n5);
var m7 = class extends m3.LoadableMixin(m2(l)) {
  constructor() {
    super(...arguments), this.url = null;
  }
  get fields() {
    return this.loaded || "loading" === this.loadStatus ? this._get("fields") : (u4.error("building summary statistics are not loaded"), null);
  }
  load(e3) {
    const r3 = r(e3) ? e3.signal : null;
    return this.addResolvingPromise(this._fetchService(r3)), Promise.resolve(this);
  }
  async _fetchService(e3) {
    const t7 = (await U(this.url, { query: { f: "json" }, responseType: "json", signal: e3 })).data;
    this.read(t7, { origin: "service" });
  }
};
e([d({ constructOnly: true, type: String })], m7.prototype, "url", void 0), e([d({ readOnly: true, type: [n5], json: { read: { source: "summary" } } })], m7.prototype, "fields", null), m7 = e([n("esri.layers.support.BuildingSummaryStatistics")], m7);
var c6 = m7;

// node_modules/@arcgis/core/layers/BuildingSceneLayer.js
var B = s.getLogger("esri.layers.BuildingSceneLayer");
var _ = j.ofType(f);
var P = m(d3.sublayersProperty);
P.json.origins["web-scene"] = { type: [E], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } }, P.json.origins["portal-item"] = { type: [E], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } };
var K2 = class extends A(p2(c(v(t2(O(i(b))))))) {
  constructor(e3) {
    super(e3), this.operationalLayerType = "BuildingSceneLayer", this.allSublayers = new p({ getCollections: () => [this.sublayers], getChildrenFunction: (e4) => "building-group" === e4.type ? e4.sublayers : null }), this.sublayers = null, this.sublayerOverrides = null, this.filters = new _(), this.activeFilterId = null, this.summaryStatistics = null, this.outFields = null, this.type = "building-scene";
  }
  normalizeCtorArgs(e3) {
    return "string" == typeof e3 ? { url: e3 } : e3;
  }
  destroy() {
    this.allSublayers.destroy();
  }
  readSublayers(e3, r3, t7) {
    const s3 = d3.readSublayers(e3, r3, t7);
    return d3.forEachSublayer(s3, (e4) => e4.layer = this), this.sublayerOverrides && (this.applySublayerOverrides(s3, this.sublayerOverrides), this.sublayerOverrides = null), s3;
  }
  applySublayerOverrides(e3, { overrides: r3, context: t7 }) {
    d3.forEachSublayer(e3, (e4) => e4.read(r3.get(e4.id), t7));
  }
  readSublayerOverrides(e3, r3) {
    const t7 = /* @__PURE__ */ new Map();
    for (const i4 of e3)
      null != i4 && "object" == typeof i4 && "number" == typeof i4.id ? t7.set(i4.id, i4) : r3.messages.push(new s2("building-scene-layer:invalid-sublayer-override", "Invalid value for sublayer override. Not an object or no id specified.", { value: i4 }));
    return { overrides: t7, context: r3 };
  }
  writeSublayerOverrides(e3, r3, t7) {
    const s3 = [];
    d3.forEachSublayer(this.sublayers, (e4) => {
      const r4 = e4.write({}, t7);
      Object.keys(r4).length > 1 && s3.push(r4);
    }), s3.length > 0 && (r3.sublayers = s3);
  }
  writeUnappliedOverrides(e3, r3) {
    r3.sublayers = [], e3.overrides.forEach((e4) => {
      r3.sublayers.push(m(e4));
    });
  }
  write(e3, r3) {
    return e3 = super.write(e3, r3), !r3 || "web-scene" !== r3.origin && "portal-item" !== r3.origin || (this.sublayers ? this.writeSublayerOverrides(this.sublayers, e3, r3) : this.sublayerOverrides && this.writeUnappliedOverrides(this.sublayerOverrides, e3)), e3;
  }
  read(e3, r3) {
    if (super.read(e3, r3), r3 && ("web-scene" === r3.origin || "portal-item" === r3.origin) && null != e3 && Array.isArray(e3.sublayers)) {
      const t7 = this.readSublayerOverrides(e3.sublayers, r3);
      this.sublayers ? this.applySublayerOverrides(this.sublayers, t7) : this.sublayerOverrides = t7;
    }
  }
  readSummaryStatistics(e3, r3) {
    if ("string" == typeof r3.statisticsHRef) {
      const e4 = G(this.parsedUrl.path, r3.statisticsHRef);
      return new c6({ url: e4 });
    }
    return null;
  }
  set elevationInfo(e3) {
    this._set("elevationInfo", e3), this._validateElevationInfo();
  }
  load(e3) {
    const r3 = r(e3) ? e3.signal : null, t7 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e3).catch(w).then(() => this._fetchService(r3)).then(() => this._fetchAssociatedFeatureService(r3));
    return this.addResolvingPromise(t7), Promise.resolve(this);
  }
  loadAll() {
    return n2(this, (e3) => {
      d3.forEachSublayer(this.sublayers, (r3) => {
        "building-group" !== r3.type && e3(r3);
      }), this.summaryStatistics && e3(this.summaryStatistics);
    });
  }
  async saveAs(e3, r3) {
    return this._debouncedSaveOperations(K.SAVE_AS, { ...r3, getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" }, e3);
  }
  async save() {
    const e3 = { getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" };
    return this._debouncedSaveOperations(K.SAVE, e3);
  }
  validateLayer(e3) {
    if (!e3.layerType || "Building" !== e3.layerType)
      throw new s2("buildingscenelayer:layer-type-not-supported", "BuildingSceneLayer does not support this layer type", { layerType: e3.layerType });
  }
  _getTypeKeywords() {
    return ["Building"];
  }
  _validateElevationInfo() {
    const e3 = this.elevationInfo;
    e3 && ("absolute-height" !== e3.mode && B.warn(".elevationInfo=", "Building scene layers only support absolute-height elevation mode"), e3.featureExpressionInfo && "0" !== e3.featureExpressionInfo.expression && B.warn(".elevationInfo=", "Building scene layers do not support featureExpressionInfo"));
  }
  async _fetchAssociatedFeatureService(e3) {
    const r3 = new l2(this.parsedUrl, this.portalItem, this.apiKey, e3);
    try {
      this.associatedFeatureServiceItem = await r3.fetchPortalItem();
    } catch (t7) {
      B.warn("Associated feature service item could not be loaded", t7);
    }
  }
};
e([d({ type: ["BuildingSceneLayer"] })], K2.prototype, "operationalLayerType", void 0), e([d({ readOnly: true })], K2.prototype, "allSublayers", void 0), e([d(P)], K2.prototype, "sublayers", void 0), e([o("service", "sublayers")], K2.prototype, "readSublayers", null), e([d({ type: _, nonNullable: true, json: { write: true } })], K2.prototype, "filters", void 0), e([d({ type: String, json: { write: true } })], K2.prototype, "activeFilterId", void 0), e([d({ readOnly: true, type: c6 })], K2.prototype, "summaryStatistics", void 0), e([o("summaryStatistics", ["statisticsHRef"])], K2.prototype, "readSummaryStatistics", null), e([d({ type: [String], json: { read: false } })], K2.prototype, "outFields", void 0), e([d(j2)], K2.prototype, "fullExtent", void 0), e([d({ type: ["show", "hide", "hide-children"] })], K2.prototype, "listMode", void 0), e([d(y(k))], K2.prototype, "spatialReference", void 0), e([d(d2)], K2.prototype, "elevationInfo", null), e([d({ json: { read: false }, readOnly: true })], K2.prototype, "type", void 0), e([d()], K2.prototype, "associatedFeatureServiceItem", void 0), K2 = e([n("esri.layers.BuildingSceneLayer")], K2);
var R = K2;
export {
  R as default
};
//# sourceMappingURL=BuildingSceneLayer-VVNKKCPO.js.map
