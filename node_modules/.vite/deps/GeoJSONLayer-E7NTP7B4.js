import {
  c
} from "./chunk-NCMBCUFA.js";
import "./chunk-EZ4QR7V3.js";
import {
  p as p4
} from "./chunk-SWCA522B.js";
import {
  p as p3,
  p3 as p5,
  r as r2
} from "./chunk-YPIBZ3CH.js";
import "./chunk-XLCZFN6R.js";
import "./chunk-OMNBM2E4.js";
import {
  l as l2
} from "./chunk-WKHS6QIX.js";
import {
  a as a3
} from "./chunk-6O7ZZEV7.js";
import {
  u
} from "./chunk-M2WA2LMI.js";
import "./chunk-UQDLDM54.js";
import "./chunk-YL26MZEL.js";
import "./chunk-J6DXGG2A.js";
import "./chunk-WBX2MY5R.js";
import "./chunk-3DZ4BNVJ.js";
import {
  x as x2
} from "./chunk-4XBERLPX.js";
import {
  n as n4,
  p as p6
} from "./chunk-OXEYQYNR.js";
import {
  j as j2
} from "./chunk-OXRBYKVX.js";
import "./chunk-6O2ARNGD.js";
import "./chunk-YLU2PLJS.js";
import {
  o
} from "./chunk-MZX3HN4G.js";
import {
  d as d3
} from "./chunk-T47JAOQZ.js";
import "./chunk-CQ47VEUP.js";
import "./chunk-FU5UMT3R.js";
import {
  b
} from "./chunk-GSFXXEAM.js";
import "./chunk-QZTJM4HG.js";
import {
  n as n2
} from "./chunk-RIWDMEW4.js";
import {
  n as n3,
  p as p2
} from "./chunk-C7S44TP4.js";
import "./chunk-KUWW4YJ7.js";
import "./chunk-P6I5J7W6.js";
import "./chunk-ORGMKDYR.js";
import "./chunk-F2DXUUYL.js";
import "./chunk-EGR3VVZG.js";
import "./chunk-F5A4XAOJ.js";
import "./chunk-4TDLPK3D.js";
import "./chunk-U7B2WKBH.js";
import "./chunk-T7SYNS2R.js";
import {
  y
} from "./chunk-WODSLTZT.js";
import "./chunk-JMZLJZMP.js";
import {
  c as c3
} from "./chunk-X5Z3DJQ4.js";
import {
  O
} from "./chunk-BUWXVMJU.js";
import {
  c as c2,
  d as d2,
  f,
  l,
  m as m2,
  p,
  v as v2,
  w
} from "./chunk-JT3LXQ47.js";
import "./chunk-TBT57L4K.js";
import {
  a as a2
} from "./chunk-D3XXPCBB.js";
import {
  t as t2
} from "./chunk-OWBMOIIV.js";
import {
  b as b2
} from "./chunk-SIH2IMSA.js";
import "./chunk-2AGPHSDM.js";
import "./chunk-JGSSQ5FR.js";
import "./chunk-5OEHY3VV.js";
import "./chunk-LJLQIETB.js";
import "./chunk-WKRVG5MO.js";
import "./chunk-GRILTTJT.js";
import "./chunk-ASC3X65B.js";
import "./chunk-KVF4M6PZ.js";
import "./chunk-IZCP5QP4.js";
import "./chunk-QFTOW2ST.js";
import "./chunk-I4USSDLI.js";
import "./chunk-VI3TTBSC.js";
import "./chunk-B42HXLDM.js";
import "./chunk-TVXPO7T5.js";
import "./chunk-2EZYA7VW.js";
import "./chunk-OEQ3EDRD.js";
import "./chunk-Z6EP2GTZ.js";
import "./chunk-P6G64ARX.js";
import "./chunk-GD6ALUPQ.js";
import "./chunk-RN2KRYDN.js";
import "./chunk-BLINZ65M.js";
import "./chunk-TADZYUVR.js";
import "./chunk-C5ULLWJ7.js";
import "./chunk-HFDYAQZS.js";
import "./chunk-HJHWUUQQ.js";
import "./chunk-TMBOFNWA.js";
import "./chunk-ZNEGSJWK.js";
import {
  B
} from "./chunk-EI4MOLML.js";
import "./chunk-4SBWV5M2.js";
import "./chunk-CF56UYH2.js";
import "./chunk-5TRUGQDM.js";
import "./chunk-PZG7CR4Y.js";
import "./chunk-2HDG7SIE.js";
import "./chunk-56RHM4A6.js";
import "./chunk-ACJD5XFJ.js";
import "./chunk-OO2JXX7L.js";
import "./chunk-6DWU2ZQF.js";
import "./chunk-Q3R7XFM5.js";
import "./chunk-JCPK2OXG.js";
import {
  m
} from "./chunk-HVM5D6S5.js";
import "./chunk-JYHTO6QC.js";
import "./chunk-FTLBKDGL.js";
import {
  c as c4,
  m as m3
} from "./chunk-5Z5455ZY.js";
import "./chunk-D7DLEBS2.js";
import "./chunk-H7JF6Q7A.js";
import "./chunk-TT2HIXWQ.js";
import "./chunk-OIPX3EDD.js";
import "./chunk-NWRK6QLX.js";
import "./chunk-HPH3FMVB.js";
import "./chunk-OOZMA7DN.js";
import "./chunk-Y7FSCP47.js";
import "./chunk-65A2N4LL.js";
import "./chunk-GVELBHGI.js";
import {
  j
} from "./chunk-5N3FSR63.js";
import "./chunk-C4LU7RDX.js";
import {
  i
} from "./chunk-EPCCNF3D.js";
import "./chunk-4PRVTUEZ.js";
import "./chunk-DMJWTK32.js";
import "./chunk-FVPTCNCX.js";
import "./chunk-BPZGJQOB.js";
import "./chunk-ZOKX6UGH.js";
import "./chunk-PKZEO23A.js";
import "./chunk-43S7PUMG.js";
import "./chunk-AIRC226G.js";
import "./chunk-BNPOKP6A.js";
import "./chunk-CHNDTVQJ.js";
import {
  v2 as v
} from "./chunk-VLCG72SW.js";
import {
  M
} from "./chunk-Q72YFZUL.js";
import "./chunk-YPZEGNLG.js";
import {
  k2 as k
} from "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import "./chunk-XRL56EGK.js";
import "./chunk-ZIHDQYKE.js";
import "./chunk-GSRNZQFV.js";
import "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import {
  x
} from "./chunk-U3PSONS6.js";
import {
  s2
} from "./chunk-HFTNOKM2.js";
import "./chunk-23NWA6WL.js";
import {
  s
} from "./chunk-CVWDM4C7.js";
import "./chunk-G5JBUC5N.js";
import {
  a,
  r,
  t
} from "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/layers/graphics/sources/GeoJSONSource.js
var f2 = s.getLogger("esri.layers.graphics.sources.GeoJSONSource");
var g = class extends m {
  constructor() {
    super(...arguments), this.type = "geojson", this.refresh = x(async (e2) => {
      await this.load();
      const { extent: t3, timeExtent: r3 } = await this._connection.invoke("refresh", e2);
      return this.sourceJSON.extent = t3, r3 && (this.sourceJSON.timeInfo.timeExtent = [r3.start, r3.end]), { dataChanged: true, updates: { extent: this.sourceJSON.extent, timeInfo: this.sourceJSON.timeInfo } };
    });
  }
  load(e2) {
    const t3 = r(e2) ? e2.signal : null;
    return this.addResolvingPromise(this._startWorker(t3)), Promise.resolve(this);
  }
  destroy() {
    var _a;
    (_a = this._connection) == null ? void 0 : _a.close(), this._connection = null;
  }
  applyEdits(e2) {
    return this.load().then(() => this._applyEdits(e2));
  }
  openPorts() {
    return this.load().then(() => this._connection.openPorts());
  }
  queryFeatures(e2, t3 = {}) {
    return this.load(t3).then(() => this._connection.invoke("queryFeatures", e2 ? e2.toJSON() : null, t3)).then((e3) => x2.fromJSON(e3));
  }
  queryFeaturesJSON(e2, t3 = {}) {
    return this.load(t3).then(() => this._connection.invoke("queryFeatures", e2 ? e2.toJSON() : null, t3));
  }
  queryFeatureCount(e2, t3 = {}) {
    return this.load(t3).then(() => this._connection.invoke("queryFeatureCount", e2 ? e2.toJSON() : null, t3));
  }
  queryObjectIds(e2, t3 = {}) {
    return this.load(t3).then(() => this._connection.invoke("queryObjectIds", e2 ? e2.toJSON() : null, t3));
  }
  queryExtent(e2, t3 = {}) {
    return this.load(t3).then(() => this._connection.invoke("queryExtent", e2 ? e2.toJSON() : null, t3)).then((e3) => ({ count: e3.count, extent: M.fromJSON(e3.extent) }));
  }
  querySnapping(e2, t3 = {}) {
    return this.load(t3).then(() => this._connection.invoke("querySnapping", e2, t3));
  }
  _applyEdits(e2) {
    if (!this._connection)
      throw new s2("geojson-layer-source:edit-failure", "Memory source not loaded");
    const r3 = this.layer.objectIdField, o2 = [], s3 = [], i2 = [];
    if (e2.addFeatures)
      for (const t3 of e2.addFeatures)
        o2.push(this._serializeFeature(t3));
    if (e2.deleteFeatures)
      for (const t3 of e2.deleteFeatures)
        "objectId" in t3 && null != t3.objectId ? s3.push(t3.objectId) : "attributes" in t3 && null != t3.attributes[r3] && s3.push(t3.attributes[r3]);
    if (e2.updateFeatures)
      for (const t3 of e2.updateFeatures)
        i2.push(this._serializeFeature(t3));
    return this._connection.invoke("applyEdits", { adds: o2, updates: i2, deletes: s3 }).then(({ extent: e3, timeExtent: t3, featureEditResults: r4 }) => (this.sourceJSON.extent = e3, t3 && (this.sourceJSON.timeInfo.timeExtent = [t3.start, t3.end]), this._createEditsResult(r4)));
  }
  _createEditsResult(e2) {
    return { addFeatureResults: e2.addResults ? e2.addResults.map(this._createFeatureEditResult, this) : [], updateFeatureResults: e2.updateResults ? e2.updateResults.map(this._createFeatureEditResult, this) : [], deleteFeatureResults: e2.deleteResults ? e2.deleteResults.map(this._createFeatureEditResult, this) : [], addAttachmentResults: [], updateAttachmentResults: [], deleteAttachmentResults: [] };
  }
  _createFeatureEditResult(e2) {
    const r3 = true === e2.success ? null : e2.error || { code: void 0, description: void 0 };
    return { objectId: e2.objectId, globalId: e2.globalId, error: r3 ? new s2("geojson-layer-source:edit-failure", r3.description, { code: r3.code }) : null };
  }
  _serializeFeature(e2) {
    const { attributes: t3 } = e2, r3 = this._geometryForSerialization(e2);
    return r3 ? { geometry: r3.toJSON(), attributes: t3 } : { attributes: t3 };
  }
  _geometryForSerialization(e2) {
    const { geometry: t3 } = e2;
    return t(t3) ? null : "mesh" === t3.type || "extent" === t3.type ? v.fromExtent(t3.extent) : t3;
  }
  async _startWorker(e2) {
    this._connection = await u("GeoJSONSourceWorker", { strategy: a("feature-layers-workers") ? "dedicated" : "local", signal: e2 });
    const { fields: t3, spatialReference: o2, hasZ: s3, geometryType: i2, objectIdField: n5, url: a4, timeInfo: l3, customParameters: c5 } = this.layer, p7 = "defaults" === this.layer.originOf("spatialReference"), h = { url: a4, customParameters: c5, fields: t3 && t3.map((e3) => e3.toJSON()), geometryType: i.toJSON(i2), hasZ: s3, objectIdField: n5, timeInfo: l3 ? l3.toJSON() : null, spatialReference: p7 ? null : o2 && o2.toJSON() }, m4 = await this._connection.invoke("load", h, { signal: e2 });
    for (const r3 of m4.warnings)
      f2.warn(r3.message, { layer: this.layer, warning: r3 });
    m4.featureErrors.length && f2.warn(`Encountered ${m4.featureErrors.length} validation errors while loading features`, m4.featureErrors), this.sourceJSON = m4.layerDefinition, this.capabilities = c(this.sourceJSON.hasZ, true);
  }
};
e([d()], g.prototype, "capabilities", void 0), e([d()], g.prototype, "type", void 0), e([d({ constructOnly: true })], g.prototype, "layer", void 0), e([d()], g.prototype, "sourceJSON", void 0), g = e([n("esri.layers.graphics.sources.GeoJSONSource")], g);

// node_modules/@arcgis/core/layers/GeoJSONLayer.js
var V = l2();
var B2 = class extends p4(o(p3(a2(a3(t2(n2(c3(O(b2))))))))) {
  constructor(e2) {
    super(e2), this.copyright = null, this.definitionExpression = null, this.displayField = null, this.editingEnabled = false, this.elevationInfo = null, this.featureReduction = null, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.hasZ = void 0, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.objectIdField = null, this.operationalLayerType = "GeoJSON", this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new g({ layer: this }), this.spatialReference = k.WGS84, this.templates = null, this.title = "GeoJSON", this.type = "geojson", this.typeIdField = null, this.types = null;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e2) {
    return this.addResolvingPromise(this.source.load(e2).then(() => {
      this.read(this.source.sourceJSON, { origin: "service", url: this.parsedUrl }), this.revert(["objectIdField", "fields", "timeInfo"], "service"), c4(this.renderer, this.fieldsIndex), m3(this.timeInfo, this.fieldsIndex);
    })), Promise.resolve(this);
  }
  get capabilities() {
    return this.source ? this.source.capabilities : null;
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("capabilities"), (this._get("createQueryVersion") || 0) + 1;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  get isTable() {
    return this.loaded && null == this.geometryType;
  }
  get parsedUrl() {
    return this.url ? j(this.url) : null;
  }
  set renderer(e2) {
    c4(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  set url(e2) {
    if (!e2)
      return void this._set("url", e2);
    const t3 = j(e2);
    this._set("url", t3.path), t3.query && (this.customParameters = { ...this.customParameters, ...t3.query });
  }
  async applyEdits(e2, t3) {
    const r3 = await import("./editingSupport-ZEPOY3EL.js");
    await this.load();
    const i2 = await r3.applyEdits(this, this.source, e2, t3);
    return this.read({ extent: this.source.sourceJSON.extent, timeInfo: this.source.sourceJSON.timeInfo }, { origin: "service", ignoreDefaults: true }), i2;
  }
  on(e2, t3) {
    return super.on(e2, t3);
  }
  createPopupTemplate(e2) {
    return d3(this, e2);
  }
  createQuery() {
    const e2 = new b(), t3 = this.get("capabilities.data");
    e2.returnGeometry = true, t3 && t3.supportsZ && (e2.returnZ = true), e2.outFields = ["*"], e2.where = this.definitionExpression || "1=1";
    const { timeOffset: r3, timeExtent: i2 } = this;
    return e2.timeExtent = null != r3 && null != i2 ? i2.offset(-r3.value, r3.unit) : i2 || null, e2;
  }
  getFieldDomain(e2, t3) {
    let r3, i2 = false;
    const o2 = t3 && t3.feature, s3 = o2 && o2.attributes, p7 = this.typeIdField && s3 && s3[this.typeIdField];
    return null != p7 && this.types && (i2 = this.types.some((t4) => t4.id == p7 && (r3 = t4.domains && t4.domains[e2], r3 && "inherited" === r3.type && (r3 = this._getLayerDomain(e2)), true))), i2 || r3 || (r3 = this._getLayerDomain(e2)), r3;
  }
  getField(e2) {
    return this.fieldsIndex.get(e2);
  }
  queryFeatures(e2, t3) {
    return this.load().then(() => this.source.queryFeatures(b.from(e2) || this.createQuery(), t3)).then((e3) => {
      if (e3 == null ? void 0 : e3.features)
        for (const t4 of e3.features)
          t4.layer = t4.sourceLayer = this;
      return e3;
    });
  }
  queryObjectIds(e2, t3) {
    return this.load().then(() => this.source.queryObjectIds(b.from(e2) || this.createQuery(), t3));
  }
  queryFeatureCount(e2, t3) {
    return this.load().then(() => this.source.queryFeatureCount(b.from(e2) || this.createQuery(), t3));
  }
  queryExtent(e2, t3) {
    return this.load().then(() => this.source.queryExtent(b.from(e2) || this.createQuery(), t3));
  }
  async hasDataChanged() {
    try {
      const { dataChanged: e2, updates: t3 } = await this.source.refresh(this.customParameters);
      return r(t3) && this.read(t3, { origin: "service", url: this.parsedUrl, ignoreDefaults: true }), e2;
    } catch {
    }
    return false;
  }
  _getLayerDomain(e2) {
    if (!this.fields)
      return null;
    let t3 = null;
    return this.fields.some((r3) => (r3.name === e2 && (t3 = r3.domain), !!t3)), t3;
  }
};
e([d({ readOnly: true, json: { read: false, write: false } })], B2.prototype, "capabilities", null), e([d({ type: String })], B2.prototype, "copyright", void 0), e([d({ readOnly: true })], B2.prototype, "createQueryVersion", null), e([d({ readOnly: true })], B2.prototype, "defaultPopupTemplate", null), e([d({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], B2.prototype, "definitionExpression", void 0), e([d({ type: String })], B2.prototype, "displayField", void 0), e([d({ type: Boolean })], B2.prototype, "editingEnabled", void 0), e([d(d2)], B2.prototype, "elevationInfo", void 0), e([d(p5)], B2.prototype, "featureReduction", void 0), e([d({ type: [y], json: { name: "layerDefinition.fields", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "fields" } } } })], B2.prototype, "fields", void 0), e([d(V.fieldsIndex)], B2.prototype, "fieldsIndex", void 0), e([d({ type: M, json: { name: "extent" } })], B2.prototype, "fullExtent", void 0), e([d({ type: ["point", "polygon", "polyline", "multipoint"], json: { read: { reader: i.read } } })], B2.prototype, "geometryType", void 0), e([d({ type: Boolean })], B2.prototype, "hasZ", void 0), e([d(v2)], B2.prototype, "id", void 0), e([d({ type: Boolean, readOnly: true })], B2.prototype, "isTable", null), e([d(m2)], B2.prototype, "labelsVisible", void 0), e([d({ type: [j2], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: r2 }, write: true } })], B2.prototype, "labelingInfo", void 0), e([d(c2)], B2.prototype, "legendEnabled", void 0), e([d({ type: ["show", "hide"] })], B2.prototype, "listMode", void 0), e([d({ type: String, json: { name: "layerDefinition.objectIdField", write: { ignoreOrigin: true, isRequired: true }, origins: { service: { name: "objectIdField" } } } })], B2.prototype, "objectIdField", void 0), e([d(w)], B2.prototype, "opacity", void 0), e([d({ type: ["GeoJSON"] })], B2.prototype, "operationalLayerType", void 0), e([d({ readOnly: true })], B2.prototype, "parsedUrl", null), e([d(p)], B2.prototype, "popupEnabled", void 0), e([d({ type: B, json: { name: "popupInfo", write: true } })], B2.prototype, "popupTemplate", void 0), e([d({ types: p2, json: { name: "layerDefinition.drawingInfo.renderer", write: true, origins: { service: { name: "drawingInfo.renderer" }, "web-scene": { types: n3 } } } })], B2.prototype, "renderer", null), e([d(l)], B2.prototype, "screenSizePerspectiveEnabled", void 0), e([d({ readOnly: true })], B2.prototype, "source", void 0), e([d({ type: k })], B2.prototype, "spatialReference", void 0), e([d({ type: [p6] })], B2.prototype, "templates", void 0), e([d()], B2.prototype, "title", void 0), e([d({ json: { read: false }, readOnly: true })], B2.prototype, "type", void 0), e([d({ type: String, readOnly: true })], B2.prototype, "typeIdField", void 0), e([d({ type: [n4] })], B2.prototype, "types", void 0), e([d(f)], B2.prototype, "url", null), B2 = e([n("esri.layers.GeoJSONLayer")], B2);
var Z = B2;
export {
  Z as default
};
//# sourceMappingURL=GeoJSONLayer-E7NTP7B4.js.map
