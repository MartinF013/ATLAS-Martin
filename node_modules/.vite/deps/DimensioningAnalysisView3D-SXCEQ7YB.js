import {
  g as g3
} from "./chunk-Q5PPQF2L.js";
import "./chunk-PVL2NLPX.js";
import "./chunk-ZIG56NBC.js";
import {
  B,
  z as z3
} from "./chunk-RED2ALFM.js";
import {
  l as l5,
  v as v2
} from "./chunk-WFV6S5JH.js";
import "./chunk-2RRRGIMY.js";
import {
  r as r6
} from "./chunk-UJ2QT226.js";
import "./chunk-7ZQJSAEA.js";
import "./chunk-3UQ4HI6Q.js";
import "./chunk-TVBLDFP3.js";
import {
  c as c3,
  m as m4,
  s as s3
} from "./chunk-GAAASXOF.js";
import {
  a as a4
} from "./chunk-R5LRVAQP.js";
import {
  y as y2
} from "./chunk-EEPTXXKK.js";
import {
  n as n6
} from "./chunk-KQRXZVEP.js";
import {
  C
} from "./chunk-OGZ4KF5L.js";
import "./chunk-JYMQQ22E.js";
import "./chunk-JYWDI7GA.js";
import "./chunk-MQZSD3AZ.js";
import "./chunk-5CAQC3RU.js";
import "./chunk-A5WV4QY7.js";
import "./chunk-PH7BQFVK.js";
import {
  _ as _2,
  p as p2
} from "./chunk-D7PQAHH6.js";
import {
  l as l4
} from "./chunk-A2XF5TZW.js";
import {
  e2 as e3
} from "./chunk-73VW7LOZ.js";
import {
  E
} from "./chunk-EMETVH63.js";
import "./chunk-V56SVRSV.js";
import "./chunk-XZHFGTRH.js";
import "./chunk-2I27THZD.js";
import "./chunk-X64NQ2GK.js";
import "./chunk-NVOCHKIH.js";
import "./chunk-DGELARKE.js";
import "./chunk-WN3KE5M2.js";
import {
  d as d3,
  h as h4,
  m as m3
} from "./chunk-7TCJ26U5.js";
import {
  e as e2
} from "./chunk-T6BL6FYR.js";
import "./chunk-U7I6IKUN.js";
import {
  S,
  g as g2,
  x
} from "./chunk-GVCSP4OP.js";
import {
  v
} from "./chunk-7LOTF6IL.js";
import "./chunk-PJI2LYU5.js";
import {
  p,
  z as z2
} from "./chunk-22MSECLU.js";
import "./chunk-PTJ3MGYO.js";
import "./chunk-ILEVWNLM.js";
import {
  r as r4
} from "./chunk-3HMF3PNP.js";
import "./chunk-N5C77AAH.js";
import {
  m as m2
} from "./chunk-DSCM4HDL.js";
import {
  n as n7
} from "./chunk-RLOG5P3F.js";
import "./chunk-WGMCNMOI.js";
import "./chunk-UV5UBITC.js";
import {
  r as r5
} from "./chunk-KYD2B4O6.js";
import "./chunk-Y7MFFYJY.js";
import "./chunk-KW6WHTET.js";
import "./chunk-PUU4QXN5.js";
import "./chunk-EHWEX2VK.js";
import {
  Z
} from "./chunk-HPO2NV7P.js";
import "./chunk-22O7HU3A.js";
import "./chunk-Y75V5CF3.js";
import "./chunk-PQM6RARY.js";
import "./chunk-2Y5KPYOJ.js";
import "./chunk-BBUIX72C.js";
import "./chunk-5ZS6RUSM.js";
import "./chunk-R3PFJUIG.js";
import "./chunk-7LH2XNVI.js";
import "./chunk-PXOPYXIX.js";
import "./chunk-WSQIVEW5.js";
import "./chunk-ZTFWVZTL.js";
import "./chunk-ELZC3DZT.js";
import "./chunk-TGUQXVQU.js";
import "./chunk-4LQ6NAOX.js";
import "./chunk-K37I5IIG.js";
import "./chunk-GKYJJGE3.js";
import "./chunk-AWIG2DGF.js";
import "./chunk-3236UEJN.js";
import "./chunk-KSOWE6GO.js";
import "./chunk-TCYVDK2B.js";
import "./chunk-ZLORWBMB.js";
import "./chunk-LJAT5UYW.js";
import "./chunk-CNL2CHF7.js";
import "./chunk-HRAEK6P4.js";
import "./chunk-K6UIDSFF.js";
import "./chunk-52W4YMC2.js";
import "./chunk-AIONJO5O.js";
import "./chunk-YLSPLHY5.js";
import "./chunk-4GGQTXXY.js";
import "./chunk-2DP653N7.js";
import "./chunk-QZCFKQOH.js";
import "./chunk-QMP4VG7M.js";
import "./chunk-5RP42VZJ.js";
import "./chunk-KD6KBT2L.js";
import "./chunk-XEWFCJLT.js";
import "./chunk-ZEDAE7EU.js";
import "./chunk-YXFNNKMT.js";
import "./chunk-7OZR6JFF.js";
import "./chunk-NXOQBIK7.js";
import "./chunk-ERNXFM5T.js";
import "./chunk-6ITXWFMK.js";
import "./chunk-SV4VP57N.js";
import "./chunk-5LWMNFCG.js";
import "./chunk-PWYPPSAW.js";
import "./chunk-5EXPMKQP.js";
import "./chunk-B7F3T673.js";
import "./chunk-QXYW5CVF.js";
import "./chunk-Z7AZMEL6.js";
import "./chunk-FUKESVWQ.js";
import "./chunk-T3KDRLPE.js";
import "./chunk-EJ7RFMRW.js";
import "./chunk-VQLKKADV.js";
import "./chunk-XEIRRA3E.js";
import "./chunk-B3IXFXV6.js";
import "./chunk-XNOIZLCR.js";
import "./chunk-I22L7HNU.js";
import "./chunk-44UD36FH.js";
import "./chunk-ODYLXHP4.js";
import "./chunk-Y5AGUEHG.js";
import "./chunk-DVE4HUBR.js";
import "./chunk-RC6OMMF6.js";
import "./chunk-AWPZQDE5.js";
import "./chunk-OYNEZ5VG.js";
import "./chunk-R67CDTDF.js";
import "./chunk-UCWSHVC4.js";
import "./chunk-DHZ2TSD5.js";
import "./chunk-ZV3LDRB3.js";
import "./chunk-FAF3GP2W.js";
import "./chunk-YSWURJZW.js";
import "./chunk-5JKCNCL2.js";
import "./chunk-2YDCEMEJ.js";
import "./chunk-O7YSDCZE.js";
import "./chunk-767LZ6IM.js";
import "./chunk-TTKSAULB.js";
import "./chunk-WJDUBZ7S.js";
import "./chunk-DNPZNIDB.js";
import "./chunk-WW7VYUQW.js";
import "./chunk-FCDEMPPS.js";
import "./chunk-TEJEYVH4.js";
import "./chunk-HEZ2ATGC.js";
import "./chunk-ECNFP4CF.js";
import "./chunk-AALA53RH.js";
import "./chunk-BOVIIQLB.js";
import "./chunk-IJHFAZOW.js";
import "./chunk-DMGVDNFD.js";
import "./chunk-YAQGRU5B.js";
import "./chunk-M3GMIUQS.js";
import "./chunk-BMA2CXVS.js";
import "./chunk-46N7XS5M.js";
import "./chunk-4MKQUQD4.js";
import "./chunk-A3QLZKCF.js";
import "./chunk-OYAHQ564.js";
import "./chunk-LGILR4HN.js";
import "./chunk-I5UNY2WQ.js";
import {
  n as n4
} from "./chunk-KETNREBT.js";
import "./chunk-EYJ2F5XB.js";
import "./chunk-5EPJG7SL.js";
import "./chunk-QUUJFQ73.js";
import "./chunk-TR3U55RZ.js";
import "./chunk-3DCTMZI6.js";
import "./chunk-33INAWJA.js";
import "./chunk-5WOO2FX6.js";
import "./chunk-FPMD6IB4.js";
import "./chunk-J73IXFNW.js";
import "./chunk-MQBVOUKB.js";
import "./chunk-PLLZPG4O.js";
import {
  t as t4,
  x as x2
} from "./chunk-WQLER7IU.js";
import "./chunk-7GTYHKA3.js";
import "./chunk-MOXYEJRV.js";
import {
  h as h3
} from "./chunk-EEJIELE6.js";
import "./chunk-Y55TYMBP.js";
import "./chunk-NAB3NF54.js";
import "./chunk-MHB3L22D.js";
import "./chunk-MDCKEJ7B.js";
import "./chunk-MLAOYRDT.js";
import "./chunk-VMF4NMEB.js";
import "./chunk-NAIF4GWX.js";
import "./chunk-72PB636Q.js";
import "./chunk-RIOXX6J2.js";
import "./chunk-SOZCO2CU.js";
import "./chunk-53KI6WDE.js";
import {
  L,
  n as n5
} from "./chunk-W2HLA6I3.js";
import "./chunk-Q6AASANP.js";
import {
  c
} from "./chunk-ZYIEYKCD.js";
import "./chunk-DLM6NKXW.js";
import "./chunk-TQLSOIYV.js";
import "./chunk-YFBAFAZ2.js";
import "./chunk-LUU3J646.js";
import "./chunk-Z7BSDVJ3.js";
import "./chunk-RB3LJE4I.js";
import "./chunk-MV2XZ5BA.js";
import "./chunk-3NPGGTI6.js";
import "./chunk-G4ERZR5M.js";
import "./chunk-GRW2GUB3.js";
import {
  c as c2
} from "./chunk-RBVTRJPJ.js";
import "./chunk-YZNDHJDJ.js";
import "./chunk-ZZCCRN4U.js";
import "./chunk-TWQ374WD.js";
import "./chunk-GT2OBOXC.js";
import "./chunk-Z3S5X75I.js";
import "./chunk-YK4ZKK2Q.js";
import "./chunk-NMRWU44S.js";
import "./chunk-LBBA3SFR.js";
import "./chunk-2KZBVPWA.js";
import "./chunk-CXIMLSDF.js";
import "./chunk-ZDSMRGKC.js";
import "./chunk-I6H66HCE.js";
import "./chunk-4P4OV7G6.js";
import "./chunk-ZUDEVIXR.js";
import "./chunk-RRFFPL7N.js";
import "./chunk-JYR7GBAU.js";
import "./chunk-IG4CY4XM.js";
import "./chunk-HB4HVKJV.js";
import "./chunk-CC32E45Q.js";
import "./chunk-V7M26XZ7.js";
import "./chunk-ZN2MGN4S.js";
import "./chunk-JZY7CGEI.js";
import "./chunk-2LGANX7J.js";
import "./chunk-RTHP2LNT.js";
import "./chunk-XZTXACPW.js";
import "./chunk-EHYYP2L2.js";
import "./chunk-ZUEYZA7M.js";
import "./chunk-74GUBHRJ.js";
import "./chunk-E447OCKN.js";
import "./chunk-LPU5TMA4.js";
import "./chunk-25QHXOZB.js";
import "./chunk-AA7FGPNP.js";
import "./chunk-UHJVTABQ.js";
import "./chunk-W66LN57L.js";
import "./chunk-PNUWGOXY.js";
import {
  s as s2
} from "./chunk-FUQI3AAI.js";
import "./chunk-22YODLVL.js";
import "./chunk-TB42IUV7.js";
import "./chunk-ZWMYDR2G.js";
import "./chunk-ZZY5IDKU.js";
import "./chunk-6SWQ7R36.js";
import "./chunk-Z4FD36CT.js";
import "./chunk-OZT6RDST.js";
import "./chunk-4I3W4KD5.js";
import "./chunk-JNXH4TTS.js";
import "./chunk-6FKG7JUE.js";
import "./chunk-PZWU5EHT.js";
import "./chunk-7LOJJ46D.js";
import "./chunk-VNR743PA.js";
import "./chunk-JJ7VMWJT.js";
import "./chunk-SWCA522B.js";
import "./chunk-YPIBZ3CH.js";
import "./chunk-XLCZFN6R.js";
import "./chunk-OMNBM2E4.js";
import "./chunk-WKHS6QIX.js";
import "./chunk-6O7ZZEV7.js";
import "./chunk-M2WA2LMI.js";
import "./chunk-UQDLDM54.js";
import "./chunk-YL26MZEL.js";
import "./chunk-OBCAVCXI.js";
import "./chunk-RFOZTYJH.js";
import "./chunk-J6DXGG2A.js";
import "./chunk-L2YBXQTH.js";
import "./chunk-S4ZKPFDU.js";
import "./chunk-YG6VFATO.js";
import "./chunk-WBX2MY5R.js";
import "./chunk-3DZ4BNVJ.js";
import "./chunk-4XBERLPX.js";
import "./chunk-7ZPDA3EC.js";
import "./chunk-SZPDY7KN.js";
import "./chunk-Y6YGVGFR.js";
import "./chunk-GKRQ3NBT.js";
import "./chunk-OXEYQYNR.js";
import "./chunk-OXRBYKVX.js";
import "./chunk-6O2ARNGD.js";
import "./chunk-YLU2PLJS.js";
import "./chunk-MZX3HN4G.js";
import "./chunk-T47JAOQZ.js";
import "./chunk-6GPADSSO.js";
import "./chunk-CQ47VEUP.js";
import "./chunk-FU5UMT3R.js";
import "./chunk-ODX6X222.js";
import "./chunk-GSFXXEAM.js";
import "./chunk-QZTJM4HG.js";
import "./chunk-RIWDMEW4.js";
import "./chunk-C7S44TP4.js";
import "./chunk-KUWW4YJ7.js";
import "./chunk-P6I5J7W6.js";
import "./chunk-ORGMKDYR.js";
import "./chunk-F2DXUUYL.js";
import "./chunk-EGR3VVZG.js";
import "./chunk-F5A4XAOJ.js";
import "./chunk-4TDLPK3D.js";
import {
  r as r3
} from "./chunk-U7B2WKBH.js";
import "./chunk-T7SYNS2R.js";
import "./chunk-WODSLTZT.js";
import "./chunk-JMZLJZMP.js";
import "./chunk-OG6CQEZJ.js";
import "./chunk-X5Z3DJQ4.js";
import "./chunk-BUWXVMJU.js";
import "./chunk-JT3LXQ47.js";
import "./chunk-P3QN5DXX.js";
import "./chunk-QKRZMDWG.js";
import "./chunk-TBT57L4K.js";
import "./chunk-D3XXPCBB.js";
import "./chunk-OWBMOIIV.js";
import "./chunk-SIH2IMSA.js";
import "./chunk-2AGPHSDM.js";
import "./chunk-JGSSQ5FR.js";
import "./chunk-5OEHY3VV.js";
import "./chunk-LJLQIETB.js";
import "./chunk-WKRVG5MO.js";
import "./chunk-GRILTTJT.js";
import {
  d as d2
} from "./chunk-JJRJ6TV3.js";
import "./chunk-K2FQEYBG.js";
import {
  u
} from "./chunk-G4IZ2HTT.js";
import {
  U,
  a as a2,
  h as h2,
  l as l3,
  w
} from "./chunk-T7BEWVV3.js";
import "./chunk-ASC3X65B.js";
import "./chunk-KVF4M6PZ.js";
import "./chunk-IZCP5QP4.js";
import "./chunk-QFTOW2ST.js";
import "./chunk-I4USSDLI.js";
import "./chunk-VI3TTBSC.js";
import "./chunk-B42HXLDM.js";
import "./chunk-TVXPO7T5.js";
import "./chunk-2EZYA7VW.js";
import "./chunk-OEQ3EDRD.js";
import "./chunk-Z6EP2GTZ.js";
import "./chunk-P6G64ARX.js";
import "./chunk-GD6ALUPQ.js";
import "./chunk-CLGCKZUR.js";
import "./chunk-RN2KRYDN.js";
import "./chunk-BLINZ65M.js";
import "./chunk-TADZYUVR.js";
import "./chunk-C5ULLWJ7.js";
import "./chunk-HFDYAQZS.js";
import "./chunk-HJHWUUQQ.js";
import "./chunk-TMBOFNWA.js";
import "./chunk-ZNEGSJWK.js";
import "./chunk-EI4MOLML.js";
import "./chunk-4SBWV5M2.js";
import {
  a as a3
} from "./chunk-CF56UYH2.js";
import "./chunk-5TRUGQDM.js";
import "./chunk-PZG7CR4Y.js";
import "./chunk-2HDG7SIE.js";
import "./chunk-56RHM4A6.js";
import "./chunk-ACJD5XFJ.js";
import "./chunk-OO2JXX7L.js";
import "./chunk-6DWU2ZQF.js";
import "./chunk-Q3R7XFM5.js";
import "./chunk-JCPK2OXG.js";
import "./chunk-HVM5D6S5.js";
import "./chunk-JYHTO6QC.js";
import "./chunk-FTLBKDGL.js";
import "./chunk-5Z5455ZY.js";
import "./chunk-D7DLEBS2.js";
import "./chunk-H7JF6Q7A.js";
import {
  j as j3
} from "./chunk-TT2HIXWQ.js";
import "./chunk-OIPX3EDD.js";
import {
  u as u2
} from "./chunk-NWRK6QLX.js";
import "./chunk-HPH3FMVB.js";
import {
  m
} from "./chunk-OOZMA7DN.js";
import "./chunk-Y7FSCP47.js";
import "./chunk-65A2N4LL.js";
import "./chunk-GVELBHGI.js";
import "./chunk-5N3FSR63.js";
import "./chunk-C4LU7RDX.js";
import "./chunk-EPCCNF3D.js";
import "./chunk-4PRVTUEZ.js";
import "./chunk-DMJWTK32.js";
import {
  l as l2
} from "./chunk-FVPTCNCX.js";
import "./chunk-BPZGJQOB.js";
import "./chunk-ZOKX6UGH.js";
import {
  G,
  J,
  P,
  _,
  g,
  r as r2,
  z
} from "./chunk-PKZEO23A.js";
import "./chunk-43S7PUMG.js";
import {
  f,
  n as n3
} from "./chunk-AIRC226G.js";
import "./chunk-BNPOKP6A.js";
import "./chunk-CHNDTVQJ.js";
import "./chunk-VLCG72SW.js";
import {
  M
} from "./chunk-Q72YFZUL.js";
import {
  j2
} from "./chunk-YPZEGNLG.js";
import "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import {
  s
} from "./chunk-XRL56EGK.js";
import "./chunk-ZIHDQYKE.js";
import "./chunk-GSRNZQFV.js";
import "./chunk-ICD7AJSY.js";
import {
  d,
  n2 as n,
  n8 as n2,
  t2,
  y3 as y
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  t as t3
} from "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import {
  j
} from "./chunk-U3PSONS6.js";
import "./chunk-HFTNOKM2.js";
import {
  a
} from "./chunk-23NWA6WL.js";
import "./chunk-CVWDM4C7.js";
import "./chunk-G5JBUC5N.js";
import {
  h,
  l,
  o,
  r,
  t
} from "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/analysis/dimensionUtils.js
var t5 = ["horizontal", "vertical", "direct"];

// node_modules/@arcgis/core/analysis/LengthDimension.js
var y3 = class extends a3 {
  constructor(t8) {
    super(t8), this.type = "length", this.startPoint = null, this.endPoint = null, this.axis = "horizontal", this.offset = 0, this.heading = 0;
  }
  get extent() {
    if (t(this.startPoint))
      return null;
    const t8 = M.fromPoint(this.startPoint);
    return r(this.endPoint) && t8.union(M.fromPoint(this.endPoint)), t8;
  }
};
e([d({ type: ["length"] })], y3.prototype, "type", void 0), e([d({ type: j2 })], y3.prototype, "startPoint", void 0), e([d({ type: j2 })], y3.prototype, "endPoint", void 0), e([d({ type: t5, nonNullable: true })], y3.prototype, "axis", void 0), e([d({ type: Number, nonNullable: true })], y3.prototype, "offset", void 0), e([d({ type: Number, nonNullable: true }), s((t8) => s2.normalize(a(t8), 0, true))], y3.prototype, "heading", void 0), e([d({ readOnly: true })], y3.prototype, "extent", null), y3 = e([n2("esri.analysis.LengthDimension")], y3);
var u3 = y3;

// node_modules/@arcgis/core/views/3d/analysis/Dimensioning/settings.js
var o2 = { main: new l2([255, 127, 0]) };
var i = class {
  constructor() {
    this.color = o2.main, this.opacity = 0.5, this.radius = 5;
  }
};
var r7 = class {
  constructor() {
    this.fontSize = 14;
  }
  get height() {
    return 1.5 * u2(this.fontSize);
  }
  get offset() {
    return this.height + 20;
  }
};
var e4 = class {
  constructor() {
    this.pointManipulators = new i(), this.labels = new r7();
  }
};
var n8 = new e4();

// node_modules/@arcgis/core/views/interactive/snapping/featureSources/sceneLayerSource/SceneLayerSnappingSourceWorkerHandle.js
var p3 = class extends d2 {
  constructor(e5) {
    super(e5), this.availability = 0, this._ids = /* @__PURE__ */ new Set(), this.tmpP = n3();
  }
  destroy() {
    this.workerHandle.destroy(), this.workerHandle = null;
  }
  initialize() {
    this.workerHandle = new l6(this.schedule, { fetchAllEdgeLocations: (e5, t8) => this._fetchAllEdgeLocations(e5, t8) });
  }
  async fetchCandidates(e5, t8) {
    const r9 = e5.coordinateHelper.toXYZ(e5.point);
    this.view.renderCoordsHelper.toRenderCoords(r9, e5.coordinateHelper.spatialReference, r9);
    const o3 = "number" == typeof e5.distance ? e5.distance : e5.distance.pixelSize, s4 = await this.workerHandle.invoke({ bounds: L(r9[0], r9[1], r9[2], o3), types: e5.types }, t8), i3 = e5.coordinateHelper;
    return s4.candidates.sort((e6, t9) => e6.distance - t9.distance), s4.candidates.map((e6) => this._convertCandidate(i3, e6));
  }
  async add(e5, t8) {
    this._ids.add(e5.id), await this.workerHandle.invokeMethod("add", e5, t8);
  }
  async remove(e5, t8) {
    this._ids.delete(e5.id), await this.workerHandle.invokeMethod("remove", e5, t8);
  }
  _convertCandidate(e5, t8) {
    switch (t8.type) {
      case "edge":
        return new e3({ coordinateHelper: e5, objectId: t8.objectId, targetPoint: this._convertRenderCoordinate(e5, t8.target), edgeStart: this._convertRenderCoordinate(e5, t8.start), edgeEnd: this._convertRenderCoordinate(e5, t8.end), elevationInfo: m2 });
      case "vertex":
        return new r6({ coordinateHelper: e5, objectId: t8.objectId, targetPoint: this._convertRenderCoordinate(e5, t8.target), elevationInfo: m2 });
    }
  }
  _convertRenderCoordinate(e5, t8) {
    return this.view.renderCoordsHelper.fromRenderCoords(t8, this.tmpP, e5.spatialReference), e5.fromXYZ(this.tmpP);
  }
  async _fetchAllEdgeLocations(e5, t8) {
    const r9 = [], o3 = [];
    for (const { id: s4, uid: i3 } of e5.components)
      this._ids.has(s4) && r9.push((async () => {
        const e6 = await this.fetchEdgeLocations(s4, t8.signal);
        return o3.push(e6.locations.buffer), { id: s4, uid: i3, objectIds: e6.objectIds, locations: e6.locations.buffer, origin: e6.origin, type: e6.type };
      })());
    return { result: { components: (await Promise.all(r9)).filter(({ id: e6 }) => this._ids.has(e6)) }, transferList: o3 };
  }
};
e([d({ constructOnly: true })], p3.prototype, "view", void 0), e([d({ constructOnly: true })], p3.prototype, "fetchEdgeLocations", void 0), e([d({ constructOnly: true })], p3.prototype, "schedule", void 0), e([d({ readOnly: true })], p3.prototype, "availability", void 0), p3 = e([n2("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")], p3);
var l6 = class extends n4 {
  constructor(e5, t8) {
    super("SceneLayerSnappingSourceWorker", "fetchCandidates", {}, e5, { strategy: "dedicated", client: t8 });
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/featureSources/SceneLayerSnappingSource.js
var c4 = class extends d2 {
  constructor(e5) {
    super(e5), this.availability = 1, this.abortController = new AbortController();
  }
  get updating() {
    return this.updatingHandles.updating;
  }
  get layer() {
    return this.layerSource.layer;
  }
  destroy() {
    this.abortController = h(this.abortController);
  }
  initialize() {
    const e5 = this.view.resourceController;
    this.edgeWorker = new n7((r9) => e5.schedule(r9)), this.workerHandle = new p3({ view: this.view, schedule: (r9) => e5.schedule(r9), fetchEdgeLocations: async (e6, r9) => {
      if (t(this.tracker))
        throw new Error("tracker-not-initialized");
      return this.tracker.fetchEdgeLocations(e6, this.edgeWorker, r9);
    } }), this.updatingHandles.addPromise(this._setupLayerView()), this.handles.add([t2(this.workerHandle), t2(this.edgeWorker)]);
  }
  async fetchCandidates(e5, r9) {
    return this.workerHandle.fetchCandidates(e5, r9);
  }
  refresh() {
  }
  async _setupLayerView() {
    const e5 = await this.view.whenLayerView(this.layer);
    if ("scene-layer-graphics-3d" === e5.type)
      return;
    const r9 = { add: (e6, r10) => this.updatingHandles.addPromise(this.workerHandle.add({ id: e6, bounds: r10 }, this.abortController.signal)), remove: (e6) => this.updatingHandles.addPromise(this.workerHandle.remove({ id: e6 }, this.abortController.signal)) };
    this.tracker = e5.trackSnappingSources(r9), this.handles.add(this.tracker);
  }
};
e([d({ constructOnly: true })], c4.prototype, "layerSource", void 0), e([d({ constructOnly: true })], c4.prototype, "view", void 0), e([d({ readOnly: true })], c4.prototype, "updating", null), e([d({ readOnly: true })], c4.prototype, "availability", void 0), c4 = e([n2("esri.views.interactive.snapping.featureSources.SceneLayerSnappingSource")], c4);

// node_modules/@arcgis/core/views/interactive/snapping/SceneSnappingEngine.js
var m5 = class extends y {
  constructor(e5) {
    super(e5), this.options = null, this._snappingSources = new j3();
  }
  initialize() {
    this.own([this.view.on("layerview-create", ({ layerView: e5 }) => this._createSource(e5)), this.view.on("layerview-destroy", ({ layerView: e5 }) => this._removeSource(e5))]);
    for (const e5 of this.view.allLayerViews.items)
      this._createSource(e5);
  }
  destroy() {
    this.options = null, this._snappingSources.drain((e5) => e5.destroy());
  }
  get updating() {
    return this._snappingSources.some((e5) => e5.updating);
  }
  get _types() {
    return E.EDGE | E.VERTEX;
  }
  async fetchCandidates(e5, r9, t8) {
    const { view: s4, options: i3 } = this, { coordinateHelper: n9, elevationInfo: a6 } = r9, u4 = r(i3) ? i3.distance : 1, m6 = l4(e5, n9, a6, s4, c.get()), y5 = u4 * s4.state.camera.computeScreenPixelSizeAt(m6), S2 = this._types, d5 = this._snappingSources.items.map((r10) => r10.fetchCandidates({ point: e5, coordinateHelper: n9, distance: y5, types: S2 }, t8)), h5 = (await Promise.all(d5)).flat();
    return r4(e5, h5), h5;
  }
  _createSource(e5) {
    if ("scene-layer-3d" !== e5.type)
      return;
    const r9 = new c4({ layerSource: new p2({ layer: e5.layer }), view: this.view });
    this._snappingSources.push(r9);
  }
  _removeSource(e5) {
    const r9 = this._snappingSources.findIndex((r10) => r10.layerSource.layer === e5.layer);
    -1 !== r9 && this._snappingSources.removeAt(r9).destroy();
  }
};
e([d({ constructOnly: true })], m5.prototype, "view", void 0), e([d()], m5.prototype, "updating", null), e([d()], m5.prototype, "options", void 0), e([d()], m5.prototype, "_snappingSources", void 0), m5 = e([n2("esri.views.interactive.snapping.SceneSnappingEngine")], m5);

// node_modules/@arcgis/core/views/interactive/snapping/SceneSnappingManagerPool.js
var t6 = /* @__PURE__ */ new Map();
function a5(e5) {
  t6.has(e5) || t6.set(e5, { referenceCount: 0, snappingManager: p4(e5) });
  const r9 = t6.get(e5);
  r9.referenceCount++;
  const o3 = n(() => i2(e5, r9));
  return { snappingManager: r9.snappingManager, ...o3 };
}
function i2(n9, r9) {
  r9.referenceCount--, r9.referenceCount > 0 || t3(() => {
    0 === r9.referenceCount && (r9.snappingManager.destroy(), t6.delete(n9));
  });
}
function p4(n9) {
  return new _2({ view: n9, snappingEnginesFactory: (e5, o3) => [new m5({ view: n9, options: o3 })] });
}

// node_modules/@arcgis/core/views/3d/analysis/Dimensioning/LengthDimensionSubTool.js
var T = class extends d2 {
  constructor(n9) {
    super(n9), this.stagedDimension = null, this._dimensionManipulators = /* @__PURE__ */ new Map(), this._dimensionHandles = new u(), this._snappingPipeline = new d3(), this._snappingManagerResult = a5(n9.view), this.own(this._snappingManagerResult);
  }
  initialize() {
    this._snappingOperation = new h4({ view: this.view }), this.own([this._dimensionHandles, l3(() => this._snappingOperation.stagedPoint, (n9) => {
      r(this.stagedDimension) && (this.stagedDimension.endPoint = o(n9, (n10) => Z(n10, new j2())));
    }, U)]);
  }
  destroy() {
    this._snappingOperation = l(this._snappingOperation);
  }
  get updating() {
    return this.updatingHandles.updating || this._snappingManager.updating;
  }
  get _snappingManager() {
    return this._snappingManagerResult.snappingManager;
  }
  addDimension(n9, i3) {
    if (this._dimensionManipulators.has(n9))
      return;
    const t8 = this._createPointManipulator(n9, { isStart: true }), e5 = this._createPointManipulator(n9, { isStart: false }), s4 = { startManipulator: t8, endManipulator: e5 };
    this._setupDimensionToManipulatorsSync(n9, s4), this._dimensionManipulators.set(n9, s4), i3.add(t8), i3.add(e5);
  }
  removeDimension(n9, i3) {
    const t8 = this._dimensionManipulators.get(n9);
    if (t(t8))
      return;
    this._dimensionHandles.remove(n9);
    const { startManipulator: e5, endManipulator: s4 } = t8;
    this._dimensionManipulators.delete(n9), i3.remove(e5), i3.remove(s4);
  }
  getManipulatorsForDimension(n9) {
    return this._dimensionManipulators.get(n9);
  }
  onDeactivate() {
    this._snappingManager.doneSnapping();
  }
  onUnstagedClick({ mapPoint: n9, pointerType: i3 }) {
    const e5 = this._snappingContext(i3), s4 = Z(this._snappingManager.update(n9, e5), new j2()), a6 = new u3({ startPoint: s4, endPoint: null });
    return this.stagedDimension = a6, this._snappingManager.doneSnapping(), a6;
  }
  onStagedClick({ mapPoint: n9, pointerType: i3 }) {
    if (t(this.stagedDimension))
      return;
    const t8 = this._snappingContext(i3), e5 = Z(this._snappingManager.update(n9, t8), new j2());
    this.stagedDimension.endPoint = e5, this.stagedDimension = null, this._snappingManager.doneSnapping();
  }
  onPointerMove({ mapPoint: n9, pointerType: i3 }) {
    const t8 = this._snappingContext(i3);
    this.updatingHandles.addPromise(j(this._snappingOperation.snap(n9, this._snappingManager, t8)));
  }
  _setupDimensionToManipulatorsSync(n9, i3) {
    const { startManipulator: t8, endManipulator: e5 } = i3;
    this._dimensionHandles.add([l3(() => ({ startPoint: n9.startPoint, endPoint: n9.endPoint, stagedDimension: this.stagedDimension }), ({ startPoint: i4, endPoint: s4, stagedDimension: o3 }) => {
      r(i4) ? (t8.available = t(o3) || o3 === n9, t8.location = i4) : t8.available = false, r(s4) ? (e5.available = t(o3), e5.location = s4) : e5.available = false;
    }, w)], n9);
  }
  _createPointManipulator(n9, t8) {
    const { isStart: e5 } = t8, s4 = e5 ? "startPoint" : "endPoint", a6 = y2(this.view, l2.toUnitRGB(n8.pointManipulators.color), n8.pointManipulators.opacity);
    a6.available = false, a6.radius = n8.pointManipulators.radius;
    const o3 = p(a6, (i3, t9, e6, a7) => {
      const o4 = z3(i3);
      t9.next(o4).next(B(this.view)).next(this._snappingPipeline.createSnapDragEventPipelineStep({ snappingContext: this._snappingContext(a7), snappingManager: this._snappingManager, cancel: e6, updatingHandles: this.updatingHandles }), this._snappingPipeline.next).next((i4) => {
        const t10 = Z(i4.mapEnd, new j2());
        n9[s4] = t10;
      }), e6.next(o4).next(z2(n9, [s4]));
    });
    return this._dimensionHandles.add(o3, n9), a6;
  }
  _snappingContext(n9) {
    return new e2({ elevationInfo: { mode: "absolute-height", offset: 0 }, pointer: n9, editGeometryOperations: new S(new g2("point", x(true, false, this.view.spatialReference))), visualizer: new g3() });
  }
};
e([d({ constructOnly: true, nonNullable: true })], T.prototype, "view", void 0), e([d({ readOnly: true })], T.prototype, "updating", null), e([d()], T.prototype, "stagedDimension", void 0), T = e([n2("esri.views.3d.analysis.Dimensioning.LengthDimensionSubTool")], T);

// node_modules/@arcgis/core/views/3d/analysis/Dimensioning/DimensioningTool.js
var d4;
!function(e5) {
  e5.Ready = "ready", e5.Creating = "creating", e5.Created = "created";
}(d4 || (d4 = {}));
var v3 = class extends a4 {
  constructor(e5) {
    super(e5), this.preferManipulatorCursor = true, this.analysisViewData = null;
  }
  initialize() {
    this._intersector = x2(this.view.state.viewingMode), this._intersector.options.store = t4.MIN, this._lengthDimensionSubTool = new T({ view: this.view }), this.own(t2(this._lengthDimensionSubTool));
    for (const e5 of this.analysis.dimensions.items)
      this._addDimension(e5);
    this.own(this.analysis.dimensions.on("change", (e5) => {
      for (const t8 of e5.added)
        this._addDimension(t8);
      for (const t8 of e5.removed)
        this._removeDimension(t8);
    })), this.own(l3(() => this.state, (e5) => {
      e5 === d4.Created && this.finishToolCreation();
    }, w));
  }
  get state() {
    return this.analysis.dimensions.some((e5) => "length" === e5.type) ? r(this._activeSubTool) ? d4.Creating : d4.Created : d4.Ready;
  }
  get updating() {
    return this._lengthDimensionSubTool.updating;
  }
  get cursor() {
    return this.active ? "crosshair" : null;
  }
  getManipulatorsForDimension(e5) {
    return this._lengthDimensionSubTool.getManipulatorsForDimension(e5);
  }
  onInputEvent(e5) {
    switch (e5.type) {
      case "immediate-click":
        this._clickHandler(e5);
        break;
      case "immediate-double-click":
        this._doubleClickHandler(e5);
        break;
      case "pointer-move":
        this._pointerMoveHandler(e5);
    }
  }
  onActivate() {
    this._activeSubTool = this._lengthDimensionSubTool;
  }
  onDeactivate() {
    r(this._activeSubTool) && (this._activeSubTool.onDeactivate(), r(this._activeSubTool.stagedDimension) && (this.analysis.dimensions.remove(this._activeSubTool.stagedDimension), this._activeSubTool.stagedDimension = null), this._activeSubTool = null);
  }
  _clickHandler(e5) {
    if (t(this._activeSubTool))
      return;
    const t8 = this._intersectScreen(e5);
    if (!t(t8)) {
      if (t(this._activeSubTool.stagedDimension)) {
        const i3 = this._activeSubTool.onUnstagedClick({ mapPoint: t8, pointerType: e5.pointerType });
        this.analysis.dimensions.add(i3);
      } else
        this._activeSubTool.onStagedClick({ mapPoint: t8, pointerType: e5.pointerType });
      e5.stopPropagation();
    }
  }
  _doubleClickHandler(e5) {
    this.view.activeTool = null, e5.stopPropagation();
  }
  _pointerMoveHandler(e5) {
    if (t(this._activeSubTool))
      return;
    if (this.hasFocusedManipulators)
      return;
    const t8 = this._intersectScreen(e5);
    t(t8) || this._activeSubTool.onPointerMove({ mapPoint: t8, pointerType: e5.pointerType });
  }
  _intersectScreen(e5) {
    const t8 = c2(e5);
    this.view.sceneIntersectionHelper.intersectToolIntersectorScreen(t8, this._intersector);
    const i3 = this._intersector.results.min, o3 = c.get();
    return i3.getIntersectionPoint(o3) ? this.view.renderCoordsHelper.fromRenderCoords(o3, this.view.spatialReference) : null;
  }
  _addDimension(e5) {
    this._lengthDimensionSubTool.addDimension(e5, this.manipulators);
  }
  _removeDimension(e5) {
    this._lengthDimensionSubTool.removeDimension(e5, this.manipulators);
  }
};
e([d({ constructOnly: true })], v3.prototype, "view", void 0), e([d({ constructOnly: true })], v3.prototype, "analysis", void 0), e([d({ readOnly: true })], v3.prototype, "state", null), e([d({ readOnly: true })], v3.prototype, "updating", null), e([d({ readOnly: true })], v3.prototype, "cursor", null), e([d({ readOnly: true })], v3.prototype, "preferManipulatorCursor", void 0), e([d({ constructOnly: true })], v3.prototype, "analysisViewData", void 0), e([d()], v3.prototype, "_activeSubTool", void 0), e([d()], v3.prototype, "_lengthDimensionSubTool", void 0), v3 = e([n2("esri.views.3d.analysis.Dimensioning.DimensioningTool")], v3);

// node_modules/@arcgis/core/views/3d/analysis/Dimensioning/LengthDimensionVisualization.js
var G2 = class extends y {
  constructor(e5) {
    super(e5), this._directSegment = new l5(), this._dimensionSegment = new l5(), this._offsetAxis = n3(), this._startOffsetSegment = new l5(this._directSegment.startRenderSpace, this._dimensionSegment.startRenderSpace), this._endOffsetSegment = new l5(this._directSegment.endRenderSpace, this._dimensionSegment.endRenderSpace), this._labelSegment = new l5(), this._hasValidGeometry = false;
    const t8 = { view: e5.view, attached: true, width: 1, color: r3(1, 0.5, 0, 1), renderOccluded: h3.OccludeAndTransparent }, s4 = { ...t8, stipplePattern: r5(5) };
    this._dimensionVisualElement = new C(t8), this._startOffsetVisualElement = new C(s4), this._endOffsetVisualElement = new C(s4), this._label = new v2({ view: e5.view, attached: true, distance: 0, fontSize: n8.labels.fontSize });
  }
  initialize() {
    this.own([t2(this._dimensionVisualElement), t2(this._startOffsetVisualElement), t2(this._endOffsetVisualElement), t2(this._label)]);
    const { computation: e5, view: t8 } = this, { dimension: i3 } = e5;
    this.own([l3(() => ({ startPoint: i3.startPoint, endPoint: i3.endPoint, offset: i3.offset, axis: i3.axis, heading: i3.heading }), (e6) => {
      this._updateGeometry(e6), this._updateLines(), this._updateLabelGeometry(t8.state.camera);
    }, h2), l3(() => e5.length, (e6) => this._updateLabelContent(e6), h2), l3(() => t8.state.camera, (e6) => this._updateLabelGeometry(e6), h2)]);
  }
  get testInfo() {
    return { dimensionVisualElement: this._dimensionVisualElement, label: this._label };
  }
  _updateGeometry({ startPoint: e5, endPoint: t8, offset: s4, axis: n9 }) {
    const { renderCoordsHelper: r9 } = this.view, o3 = this._directSegment;
    if (t(e5) || t(t8) || !r9.toRenderCoords(e5, o3.startRenderSpace) || !r9.toRenderCoords(t8, o3.endRenderSpace))
      return void (this._hasValidGeometry = false);
    const { startRenderSpace: a6, endRenderSpace: m6 } = o3, d5 = o3.eval(0.5, c.get()), c6 = r9.worldUpAtPosition(d5, c.get()), h5 = r9.worldBasisAtPosition(d5, n5.X, c.get()), p6 = this._offsetAxis;
    x3(p6, a6, m6, c6, n9, h5);
    const f2 = s4 / r9.unitInMeters, [u4, _4] = L2(a6, m6, p6, f2), S2 = this._dimensionSegment;
    g(S2.startRenderSpace, o3.startRenderSpace, p6, u4), g(S2.endRenderSpace, o3.endRenderSpace, p6, _4), this._hasValidGeometry = true;
  }
  _updateLines() {
    if (!this._hasValidGeometry)
      return this._dimensionVisualElement.visible = false, this._startOffsetVisualElement.visible = false, void (this._endOffsetVisualElement.visible = false);
    this._dimensionVisualElement.setGeometryFromSegment(this._dimensionSegment), this._startOffsetVisualElement.setGeometryFromSegment(this._startOffsetSegment), this._endOffsetVisualElement.setGeometryFromSegment(this._endOffsetSegment), this._dimensionVisualElement.visible = true, this._startOffsetVisualElement.visible = true, this._endOffsetVisualElement.visible = true;
  }
  _updateLabelContent(e5) {
    if (t(e5) || !this._hasValidGeometry)
      return this._label.text = "", void (this._label.visible = false);
    const { value: t8 } = v(e5, "meters");
    this._label.text = `${m(t8, { minimumFractionDigits: 2, maximumFractionDigits: 2 })} m`, this._label.visible = true;
  }
  _updateLabelGeometry(e5) {
    if (!this._hasValidGeometry)
      return void (this._label.visible = false);
    const { offset: t8 } = this.computation.dimension, s4 = e5.computeRenderPixelSizeAt(this._dimensionSegment.eval(0.5, c.get())), i3 = (Math.sign(t8) >= 0 ? 1 : -1) * n8.labels.offset * s4;
    P2(this._labelSegment, this._dimensionSegment, this._offsetAxis, i3), this._label.geometry = { type: "segment", sampleLocation: "center", segment: this._labelSegment, callout: false };
  }
};
function x3(e5, t8, s4, i3, n9, r9) {
  switch (n9) {
    case "horizontal":
      return r2(e5, i3);
    case "vertical":
      return P(t8, i3) < P(s4, i3) ? J(e5, s4, t8) : J(e5, t8, s4), _(e5, e5, i3), G(e5, f) ? r2(e5, r9) : (_(e5, e5, i3), z(e5, e5), e5);
    case "direct":
      return P(t8, r9) > P(s4, r9) ? J(e5, s4, t8) : J(e5, t8, s4), _(e5, e5, i3), G(e5, f) ? r2(e5, r9) : (z(e5, e5), e5);
  }
}
function L2(e5, t8, s4, i3 = 0) {
  const n9 = P(t8, s4), r9 = P(e5, s4), o3 = Math.abs(n9 - r9) + i3;
  return n9 > r9 ? [o3, i3] : [i3, o3];
}
function P2(e5, t8, s4, i3) {
  g(e5.startRenderSpace, t8.startRenderSpace, s4, i3), g(e5.endRenderSpace, t8.endRenderSpace, s4, i3);
}
e([d({ constructOnly: true, nonNullable: true })], G2.prototype, "computation", void 0), e([d({ constructOnly: true, nonNullable: true })], G2.prototype, "view", void 0), G2 = e([n2("esri.views.3d.analysis.Dimensioning.LengthDimensionVisualization")], G2);

// node_modules/@arcgis/core/views/3d/analysis/Dimensioning/DimensioningVisualization.js
var r8 = class extends y {
  constructor(o3) {
    super(o3), this._dimensionVisualizations = /* @__PURE__ */ new Map();
  }
  initialize() {
    for (const o3 of this.computations)
      this._addComputation(o3);
    this.own(this.computations.on("change", ({ added: o3, removed: i3 }) => {
      for (const s4 of i3)
        this._removeComputation(s4);
      for (const s4 of o3)
        this._addComputation(s4);
    }));
  }
  destroy() {
    this._dimensionVisualizations.forEach((o3) => {
      o3.destroy();
    }), this._dimensionVisualizations.clear();
  }
  get testInfo() {
    return { visualizations: Array.from(this._dimensionVisualizations.values()) };
  }
  _addComputation(o3) {
    this._dimensionVisualizations.has(o3) || this._dimensionVisualizations.set(o3, new G2({ computation: o3, view: this.view }));
  }
  _removeComputation(o3) {
    const i3 = this._dimensionVisualizations.get(o3);
    t(i3) || (i3.destroy(), this._dimensionVisualizations.delete(o3));
  }
};
e([d({ constructOnly: true, nonNullable: true })], r8.prototype, "view", void 0), e([d({ constructOnly: true, nonNullable: true })], r8.prototype, "computations", void 0), r8 = e([n2("esri.views.3d.analysis.Dimensioning.DimensioningVisualization")], r8);

// node_modules/@arcgis/core/views/3d/analysis/LengthDimensionResult.js
var t7 = class extends y {
  constructor(s4) {
    super(s4), this.dimension = null;
  }
};
e([d({ constructOnly: true, nonNullable: true })], t7.prototype, "dimension", void 0), t7 = e([n2("esri.views.3d.analysis.LengthDimensionResult")], t7);
var c5 = t7;

// node_modules/@arcgis/core/views/3d/analysis/Dimensioning/LengthDimensionComputation.js
var p5 = class extends y {
  constructor(o3) {
    super(o3);
  }
  initialize() {
    this._set("result", new c5({ dimension: this.dimension }));
  }
  get length() {
    const { startPoint: o3, endPoint: r9, axis: t8 } = this.dimension;
    if (t(o3) || t(r9))
      return null;
    const e5 = m3(o3, r9);
    if (t(e5))
      return null;
    return e5[t8];
  }
};
e([d({ constructOnly: true, nonNullable: true })], p5.prototype, "dimension", void 0), e([d({ constructOnly: true, nonNullable: true })], p5.prototype, "result", void 0), e([d()], p5.prototype, "length", null), p5 = e([n2("esri.views.3d.analysis.LengthDimensionComputation")], p5);

// node_modules/@arcgis/core/views/3d/analysis/DimensioningAnalysisView3D.js
var y4 = class extends n6(y) {
  constructor(s4) {
    super(s4), this.type = "dimensioning-view-3d", this.tool = null, this._computations = new j3(), this._dimensionsToResults = /* @__PURE__ */ new Map(), this._placementTask = null;
  }
  initialize() {
    this.own([c3(this, v3), a2(() => this.analysis.dimensions, "change", ({ added: s4, removed: i3 }) => {
      for (const o3 of i3)
        this._removeDimension(o3);
      for (const o3 of s4)
        this._addDimension(o3);
    }, { onListenerAdd: (s4) => {
      for (const i3 of s4)
        this._addDimension(i3);
    }, onListenerRemove: (s4) => {
      for (const i3 of s4)
        this._removeDimension(i3);
    } })]), this._analysisVisualization = new r8({ view: this.view, computations: this._computations });
  }
  destroy() {
    this._placementTask = h(this._placementTask), this._analysisVisualization = l(this._analysisVisualization), this._computations.drain((s4) => s4.destroy()), m4(this);
  }
  get results() {
    return this.analysis.dimensions.map((s4) => this._dimensionsToResults.get(s4));
  }
  get testInfo() {
    return { visualization: this._analysisVisualization };
  }
  async createLengthDimensions(s4) {
    return this._placementTask = h(this._placementTask), this._placementTask = s3(this, v3, s4), this._placementTask.promise;
  }
  _addDimension(s4) {
    const i3 = this._dimensionsToResults;
    if (i3.has(s4))
      return;
    const o3 = this._computations, t8 = new p5({ dimension: s4 });
    o3.add(t8), i3.set(s4, t8.result);
  }
  _removeDimension(s4) {
    const i3 = this._computations, o3 = this._dimensionsToResults, t8 = i3.findIndex((i4) => i4.dimension === s4), n9 = i3.removeAt(t8);
    o3.delete(s4), l(n9);
  }
};
e([d({ readOnly: true })], y4.prototype, "type", void 0), e([d({ constructOnly: true, nonNullable: true })], y4.prototype, "analysis", void 0), e([d()], y4.prototype, "tool", void 0), e([d({ readOnly: true })], y4.prototype, "results", null), e([d()], y4.prototype, "_analysisVisualization", void 0), e([d()], y4.prototype, "_computations", void 0), e([d()], y4.prototype, "_dimensionsToResults", void 0), e([d()], y4.prototype, "_placementTask", void 0), y4 = e([n2("esri.views.3d.analysis.DimensioningAnalysisView3D")], y4);
var _3 = y4;
export {
  _3 as default
};
//# sourceMappingURL=DimensioningAnalysisView3D-SXCEQ7YB.js.map
