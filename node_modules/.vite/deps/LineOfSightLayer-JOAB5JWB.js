import {
  c as c2
} from "./chunk-SUK6SE2D.js";
import {
  f,
  u as u2
} from "./chunk-XXIV5GSE.js";
import "./chunk-7Y6VVOP3.js";
import "./chunk-QFYBIFWB.js";
import {
  s
} from "./chunk-DSCM4HDL.js";
import "./chunk-PNUWGOXY.js";
import {
  un
} from "./chunk-PZWU5EHT.js";
import "./chunk-YG6VFATO.js";
import {
  c
} from "./chunk-X5Z3DJQ4.js";
import {
  O
} from "./chunk-BUWXVMJU.js";
import "./chunk-JT3LXQ47.js";
import "./chunk-TBT57L4K.js";
import {
  b
} from "./chunk-SIH2IMSA.js";
import "./chunk-LJLQIETB.js";
import "./chunk-WKRVG5MO.js";
import {
  l,
  w
} from "./chunk-T7BEWVV3.js";
import "./chunk-ASC3X65B.js";
import "./chunk-KVF4M6PZ.js";
import "./chunk-GD6ALUPQ.js";
import "./chunk-CLGCKZUR.js";
import "./chunk-RN2KRYDN.js";
import {
  h,
  m,
  u
} from "./chunk-TMBOFNWA.js";
import "./chunk-CF56UYH2.js";
import "./chunk-56RHM4A6.js";
import "./chunk-ACJD5XFJ.js";
import "./chunk-OO2JXX7L.js";
import {
  n as n2,
  t as t2
} from "./chunk-6DWU2ZQF.js";
import "./chunk-HVM5D6S5.js";
import "./chunk-FTLBKDGL.js";
import "./chunk-5Z5455ZY.js";
import "./chunk-D7DLEBS2.js";
import "./chunk-H7JF6Q7A.js";
import {
  j
} from "./chunk-TT2HIXWQ.js";
import "./chunk-OIPX3EDD.js";
import "./chunk-HPH3FMVB.js";
import "./chunk-65A2N4LL.js";
import "./chunk-GVELBHGI.js";
import "./chunk-5N3FSR63.js";
import "./chunk-C4LU7RDX.js";
import "./chunk-EPCCNF3D.js";
import "./chunk-4PRVTUEZ.js";
import "./chunk-DMJWTK32.js";
import "./chunk-BPZGJQOB.js";
import "./chunk-ZOKX6UGH.js";
import "./chunk-PKZEO23A.js";
import "./chunk-AIRC226G.js";
import "./chunk-BNPOKP6A.js";
import "./chunk-CHNDTVQJ.js";
import "./chunk-VLCG72SW.js";
import "./chunk-Q72YFZUL.js";
import "./chunk-YPZEGNLG.js";
import "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import "./chunk-XRL56EGK.js";
import "./chunk-ZIHDQYKE.js";
import "./chunk-GSRNZQFV.js";
import "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import "./chunk-U3PSONS6.js";
import "./chunk-HFTNOKM2.js";
import "./chunk-23NWA6WL.js";
import "./chunk-CVWDM4C7.js";
import "./chunk-G5JBUC5N.js";
import {
  e as e2,
  o,
  r,
  t
} from "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/analysis/LineOfSightAnalysis.js
var j2 = j.ofType(f);
var x = class extends c2 {
  constructor(e3) {
    super(e3), this.type = "line-of-sight", this.observer = null, this.extent = null, this.nonEditableMessage = "Assign an observer location to the analysis to allow editing.";
  }
  initialize() {
    this.own(l(() => this._computeExtent(), (e3) => {
      (t(e3) || t(e3.pending)) && this._set("extent", r(e3) ? e3.extent : null);
    }, w));
  }
  get targets() {
    return this._get("targets") || new j2();
  }
  set targets(e3) {
    this._set("targets", n2(e3, this.targets, j2));
  }
  get spatialReference() {
    return r(this.observer) && r(this.observer.position) ? this.observer.position.spatialReference : null;
  }
  get requiredPropertiesForEditing() {
    return [o(this.observer, (e3) => e3.position)];
  }
  async waitComputeExtent() {
    const e3 = this._computeExtent();
    return r(e3) ? e2(e3.pending) : null;
  }
  _computeExtent() {
    const e3 = this.spatialReference;
    if (t(this.observer) || t(this.observer.position) || t(e3))
      return null;
    const t3 = (e4) => "absolute-height" === s(e4.position, e4.elevationInfo), o2 = this.observer.position, r2 = u(o2.x, o2.y, o2.z, o2.x, o2.y, o2.z);
    for (const i of this.targets)
      if (r(i.position)) {
        const t4 = un(i.position, e3);
        if (r(t4.pending))
          return { pending: t4.pending, extent: null };
        if (r(t4.geometry)) {
          const { x: e4, y: o3, z: s3 } = t4.geometry;
          h(r2, [e4, o3, s3]);
        }
      }
    const s2 = m(r2, e3);
    return t3(this.observer) && this.targets.every(t3) || (s2.zmin = null, s2.zmax = null), { pending: null, extent: s2 };
  }
  clear() {
    this.observer = null, this.targets.removeAll();
  }
};
e([d({ type: ["line-of-sight"] })], x.prototype, "type", void 0), e([d({ type: u2, json: { read: true, write: true } })], x.prototype, "observer", void 0), e([d({ cast: t2, type: j2, nonNullable: true, json: { read: true, write: true } })], x.prototype, "targets", null), e([d({ value: null, readOnly: true })], x.prototype, "extent", void 0), e([d({ readOnly: true })], x.prototype, "spatialReference", null), e([d({ readOnly: true })], x.prototype, "requiredPropertiesForEditing", null), e([d({ readOnly: true })], x.prototype, "nonEditableMessage", void 0), x = e([n("esri.analysis.LineOfSightAnalysis")], x);
var E = x;

// node_modules/@arcgis/core/layers/LineOfSightLayer.js
var u3 = j.ofType(f);
var d2 = class extends c(O(b)) {
  constructor(e3) {
    super(e3), this.type = "line-of-sight", this.operationalLayerType = "LineOfSightLayer", this.analysis = new E(), this.opacity = 1;
  }
  initialize() {
    this.own(l(() => this.analysis, (e3, t3) => {
      r(t3) && t3.parent === this && (t3.parent = null), r(e3) && (e3.parent = this);
    }, w));
  }
  async load() {
    return r(this.analysis) && this.addResolvingPromise(this.analysis.waitComputeExtent()), this;
  }
  get observer() {
    return o(this.analysis, (e3) => e3.observer);
  }
  set observer(e3) {
    o(this.analysis, (t3) => t3.observer = e3);
  }
  get targets() {
    return r(this.analysis) ? this.analysis.targets : null;
  }
  set targets(e3) {
    o(this.analysis, (t3) => t3.targets = e3);
  }
  get fullExtent() {
    return r(this.analysis) ? this.analysis.extent : null;
  }
  get spatialReference() {
    return r(this.analysis) ? this.analysis.spatialReference : null;
  }
  removeAnalysis(e3) {
    this.analysis === e3 && (this.analysis = new E());
  }
};
e([d({ json: { read: false }, readOnly: true })], d2.prototype, "type", void 0), e([d({ type: ["LineOfSightLayer"] })], d2.prototype, "operationalLayerType", void 0), e([d({ type: u2, json: { read: true, write: { ignoreOrigin: true } } })], d2.prototype, "observer", null), e([d({ type: u3, json: { read: true, write: { ignoreOrigin: true } } })], d2.prototype, "targets", null), e([d({ nonNullable: true, json: { read: false, write: false } })], d2.prototype, "analysis", void 0), e([d({ readOnly: true })], d2.prototype, "fullExtent", null), e([d({ readOnly: true })], d2.prototype, "spatialReference", null), e([d({ readOnly: true, json: { read: false, write: false, origins: { service: { read: false, write: false }, "portal-item": { read: false, write: false }, "web-document": { read: false, write: false } } } })], d2.prototype, "opacity", void 0), e([d({ type: ["show", "hide"] })], d2.prototype, "listMode", void 0), d2 = e([n("esri.layers.LineOfSightLayer")], d2);
var f2 = d2;
export {
  f2 as default
};
//# sourceMappingURL=LineOfSightLayer-JOAB5JWB.js.map
