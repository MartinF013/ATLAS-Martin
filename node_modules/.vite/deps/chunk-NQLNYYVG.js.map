{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/ShadowHighlight.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{isSome as e}from\"../core/maybe.js\";import{a as o,j as r}from\"./mat4.js\";import{c as i}from\"./mat4f64.js\";import{a as t}from\"./vec2.js\";import{Z as a,a as l}from\"./vec2f64.js\";import{n as s,m as h}from\"./vec3.js\";import{c as d}from\"./vec3f64.js\";import{ScreenSpacePass as n}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.js\";import{unoccludedHighlightFlag as c}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{ReadLinearDepth as p}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js\";import{ReadShadowMapDraw as g}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{CameraSpace as m}from\"../views/3d/webgl-engine/core/shaderLibrary/util/CameraSpace.glsl.js\";import{RgbaFloatEncoding as f}from\"../views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{Float2PassUniform as v}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float3PassUniform as u}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as w}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as x}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as P}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4PassUniform as D}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4PassUniform.js\";import{ShaderBuilder as b}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as M}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{SnapshotSlot as S}from\"../views/3d/webgl-engine/lib/ShadowMap.js\";const F={highlightedThreshold:.99999,selfShadowThreshold:.025};function y(){const i=new b;i.include(g,{receiveShadows:!0});const l=i.fragment;return l.include(f),l.include(p),i.include(m),i.include(n),l.uniforms.add([new M(\"defaultDepthTex\",((e,o)=>o.shadowMap.getSnapshot(S.Default))),new M(\"highlightDepthTex\",((e,o)=>o.shadowMap.getSnapshot(S.Highlight))),new M(\"depthMap\",((e,o)=>o.linearDepthTexture)),new M(\"highlightMap\",((e,o)=>o.highlightColorTexture)),new w(\"uColor\",(e=>e.shadowColor)),new v(\"nearFar\",((e,o)=>o.camera.nearFar)),new x(\"opacity\",(e=>e.shadowOpacity)),new x(\"occludedOpacity\",(e=>e.occludedShadowOpacity)),new x(\"terminationFactor\",(e=>e.opacityElevation*e.dayNightTerminator)),new u(\"lightingMainDirectionView\",((e,o)=>s(z,h(z,o.lighting.lightingMainDirection,o.camera.viewInverseTransposeMatrix)))),new v(\"texelSize\",((o,r)=>e(r.linearDepthTexture)?t(T,1/r.linearDepthTexture.descriptor.width,1/r.linearDepthTexture.descriptor.height):a)),new D(\"inverseViewMatrix\",((e,i)=>o(j,r(j,i.camera.viewMatrix,i.camera.center))))]),l.constants.add(\"unoccludedHighlightFlag\",\"vec4\",c).add(\"highlightedThreshold\",\"float\",F.highlightedThreshold).add(\"selfShadowThreshold\",\"float\",F.selfShadowThreshold),l.code.add(P`vec3 normalFromDepth(vec3 pixelPos, vec2 fragCoord, vec2 uv, vec2 texelSize, sampler2D depthMap, vec2 nearFar) {\nfloat leftPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(-1.0, 0.0) * texelSize, nearFar);\nfloat rightPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(1.0, 0.0) * texelSize, nearFar);\nfloat bottomPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(0.0, -1.0) * texelSize, nearFar);\nfloat topPixelDepth = linearDepthFromTexture(depthMap, uv + vec2(0.0, 1.0) * texelSize, nearFar);\nbool pickLeft = abs(pixelPos.z - leftPixelDepth) < abs(pixelPos.z - rightPixelDepth);\nbool pickBottom = abs(pixelPos.z - bottomPixelDepth) < abs(pixelPos.z - topPixelDepth);\nvec3 fragCoordHorizontal = pickLeft\n? vec3(fragCoord + vec2(-1.0, 0.0), leftPixelDepth)\n: vec3(fragCoord + vec2(1.0, 0.0), rightPixelDepth);\nvec3 fragCoordVertical = pickBottom\n? vec3(fragCoord + vec2(0.0, -1.0), bottomPixelDepth)\n: vec3(fragCoord + vec2(0.0, 1.0), topPixelDepth);\nvec3 verticalPixelPos = reconstructPosition(fragCoordHorizontal.xy, fragCoordHorizontal.z);\nvec3 horizontalPixelPos = reconstructPosition(fragCoordVertical.xy, fragCoordVertical.z);\nvec3 normal = normalize(cross(verticalPixelPos - pixelPos, horizontalPixelPos - pixelPos));\nreturn pickLeft == pickBottom ? normal : -normal;\n}`),l.code.add(P`void main(void) {\nvec4 highlightInfo = texture2D(highlightMap, uv);\nfloat visiblyHighlighted = (1.0 - clamp(distance(unoccludedHighlightFlag, highlightInfo), 0.0, 1.0)) * highlightInfo.a;\nif (visiblyHighlighted > highlightedThreshold) {\ndiscard;\n}\nfloat depth = rgba2float(texture2D(depthMap, uv));\nif (depth == 0.0) {\ndiscard;\n}\nfloat currentPixelDepth = linearDepthFromFloat(depth, nearFar);\nif (-currentPixelDepth>nearFar.y || -currentPixelDepth<nearFar.x) {\ndiscard;\n}\nvec4 currentPixelPos = vec4(reconstructPosition(gl_FragCoord.xy, currentPixelDepth), 1.0);\nvec4 worldSpacePos = inverseViewMatrix * currentPixelPos;\nmat4 shadowMatrix;\nfloat linearDepth = -currentPixelDepth;\nint i = chooseCascade(linearDepth, shadowMatrix);\nif (i >= numCascades) {\ndiscard;\n}\nvec3 lvpos = lightSpacePosition(worldSpacePos.xyz, shadowMatrix);\nif (lvpos.z >= 1.0 || lvpos.x < 0.0 || lvpos.x > 1.0 || lvpos.y < 0.0 || lvpos.y > 1.0) {\ndiscard;\n}\nvec2 uvShadow = cascadeCoordinates(i, lvpos);\nfloat depthHighlight = readShadowMapDepth(uvShadow, highlightDepthTex);\nbool shadowHighlight = depthHighlight < lvpos.z;\nif (!shadowHighlight) {\ndiscard;\n}\nfloat depthDefault = readShadowMapDepth(uvShadow, defaultDepthTex);\nbool shadowDefault = depthDefault < lvpos.z;\nvec3 normal = normalFromDepth(currentPixelPos.xyz, gl_FragCoord.xy, uv, texelSize, depthMap, nearFar);\nbool shaded = dot(normal, lightingMainDirectionView) < selfShadowThreshold;\nfloat fragOpacity = (shadowDefault || shaded) ? occludedOpacity : opacity;\ngl_FragColor = vec4(uColor.rgb, uColor.a * fragOpacity * terminationFactor);\n}`),i}const j=i(),z=d(),T=l(),C=Object.freeze(Object.defineProperty({__proto__:null,build:y},Symbol.toStringTag,{value:\"Module\"}));export{C as S,y as b};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAI0tD,IAAM,IAAE,EAAC,sBAAqB,SAAO,qBAAoB,MAAI;AAAE,SAAS,IAAG;AAAC,QAAMA,KAAE,IAAI;AAAE,EAAAA,GAAE,QAAQC,IAAE,EAAC,gBAAe,KAAE,CAAC;AAAE,QAAM,IAAED,GAAE;AAAS,SAAO,EAAE,QAAQ,CAAC,GAAE,EAAE,QAAQE,EAAC,GAAEF,GAAE,QAAQG,EAAC,GAAEH,GAAE,QAAQI,EAAC,GAAE,EAAE,SAAS,IAAI,CAAC,IAAIH,GAAE,mBAAmB,CAACI,IAAED,OAAIA,GAAE,UAAU,YAAY,EAAE,OAAO,CAAE,GAAE,IAAIH,GAAE,qBAAqB,CAACI,IAAED,OAAIA,GAAE,UAAU,YAAY,EAAE,SAAS,CAAE,GAAE,IAAIH,GAAE,YAAY,CAACI,IAAED,OAAIA,GAAE,kBAAmB,GAAE,IAAIH,GAAE,gBAAgB,CAACI,IAAED,OAAIA,GAAE,qBAAsB,GAAE,IAAIC,GAAE,UAAU,CAAAA,OAAGA,GAAE,WAAY,GAAE,IAAIA,GAAE,WAAW,CAACA,IAAED,OAAIA,GAAE,OAAO,OAAQ,GAAE,IAAI,EAAE,WAAW,CAAAC,OAAGA,GAAE,aAAc,GAAE,IAAI,EAAE,mBAAmB,CAAAA,OAAGA,GAAE,qBAAsB,GAAE,IAAI,EAAE,qBAAqB,CAAAA,OAAGA,GAAE,mBAAiBA,GAAE,kBAAmB,GAAE,IAAIA,GAAE,6BAA6B,CAACA,IAAED,OAAI,EAAEE,IAAE,EAAEA,IAAEF,GAAE,SAAS,uBAAsBA,GAAE,OAAO,0BAA0B,CAAC,CAAE,GAAE,IAAIC,GAAE,aAAa,CAACD,IAAEG,OAAI,EAAEA,GAAE,kBAAkB,IAAEA,GAAE,GAAE,IAAEA,GAAE,mBAAmB,WAAW,OAAM,IAAEA,GAAE,mBAAmB,WAAW,MAAM,IAAE,CAAE,GAAE,IAAIF,GAAE,qBAAqB,CAACA,IAAEL,OAAI,EAAE,GAAE,EAAE,GAAEA,GAAE,OAAO,YAAWA,GAAE,OAAO,MAAM,CAAC,CAAE,CAAC,CAAC,GAAE,EAAE,UAAU,IAAI,2BAA0B,QAAO,CAAC,EAAE,IAAI,wBAAuB,SAAQ,EAAE,oBAAoB,EAAE,IAAI,uBAAsB,SAAQ,EAAE,mBAAmB,GAAE,EAAE,KAAK,IAAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBt6F,GAAE,EAAE,KAAK,IAAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAsCb,GAAEH;AAAC;AAAC,IAAM,IAAE,EAAE;AAAV,IAAYM,KAAE,EAAE;AAAhB,IAAkB,IAAEH,GAAE;AAAtB,IAAwB,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAM,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["i", "c", "a", "n", "o", "e", "z", "r"]
}
