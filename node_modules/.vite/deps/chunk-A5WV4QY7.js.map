{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/Laserlines.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{deg2rad as e}from\"../core/mathUtils.js\";import{isSome as i}from\"../core/maybe.js\";import{a as n}from\"./vec2.js\";import{a as t}from\"./vec2f64.js\";import{Laserline as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js\";import{ScreenSpacePass as o}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.js\";import{Float2PassUniform as s}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{Float3Uniform as l}from\"../views/3d/webgl-engine/core/shaderModules/Float3Uniform.js\";import{Float4Uniform as r}from\"../views/3d/webgl-engine/core/shaderModules/Float4Uniform.js\";import{FloatPassUniform as d}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{FloatUniform as c}from\"../views/3d/webgl-engine/core/shaderModules/FloatUniform.js\";import{glsl as f}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as p}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";const h=e(6);function m(e){const i=new p;i.extensions.add(\"GL_OES_standard_derivatives\"),i.include(o),i.include(a,e);const n=i.fragment;return e.heightManifoldEnabled&&n.uniforms.add(new r(\"heightPlane\")),e.pointDistanceEnabled&&n.uniforms.add(new r(\"pointDistanceSphere\")),e.lineVerticalPlaneEnabled&&(n.uniforms.add(new r(\"lineVerticalPlane\")),n.uniforms.add(new l(\"lineVerticalStart\")),n.uniforms.add(new l(\"lineVerticalEnd\"))),(e.heightManifoldEnabled||e.pointDistanceEnabled||e.lineVerticalPlaneEnabled)&&n.uniforms.add(new c(\"maxPixelDistance\")),(e.lineVerticalPlaneEnabled||e.heightManifoldEnabled)&&n.code.add(f`float planeDistancePixels(vec4 plane, vec3 pos) {\nfloat dist = dot(plane.xyz, pos) + plane.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`),e.pointDistanceEnabled&&n.code.add(f`float sphereDistancePixels(vec4 sphere, vec3 pos) {\nfloat dist = distance(sphere.xyz, pos) - sphere.w;\nfloat width = fwidth(dist);\ndist /= min(width, maxPixelDistance);\nreturn abs(dist);\n}`),e.intersectsLineEnabled&&(n.uniforms.add(new l(\"intersectsLineStart\")),n.uniforms.add(new l(\"intersectsLineEnd\")),n.uniforms.add(new l(\"intersectsLineDirection\")),n.uniforms.add(new c(\"intersectsLineRadius\")),n.uniforms.add(new d(\"perScreenPixelRatio\",((e,i)=>i.camera.perScreenPixelRatio))),n.code.add(f`float lineDistancePixels(vec3 start, vec3 dir, float radius, vec3 pos) {\nfloat dist = length(cross(dir, pos - start)) / (length(pos) * perScreenPixelRatio);\nreturn abs(dist) - radius;\n}`)),(e.lineVerticalPlaneEnabled||e.intersectsLineEnabled)&&n.code.add(f`bool pointIsWithinLine(vec3 pos, vec3 start, vec3 end) {\nvec3 dir = end - start;\nfloat t2 = dot(dir, pos - start);\nfloat l2 = dot(dir, dir);\nreturn t2 >= 0.0 && t2 <= l2;\n}`),n.code.add(f`void main() {\nvec3 pos;\nvec3 normal;\nfloat depthDiscontinuityAlpha;\nif (!laserlineReconstructFromDepth(pos, normal, depthDiscontinuityAlpha)) {\ndiscard;\n}\nvec4 color = vec4(0, 0, 0, 0);`),e.heightManifoldEnabled&&(n.uniforms.add(new s(\"angleCutoff\",(e=>u(e)))),n.code.add(f`{\nfloat heightManifoldAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, heightPlane.xyz)));\nvec4 heightManifoldColor = laserlineProfile(planeDistancePixels(heightPlane, pos));\ncolor = max(color, heightManifoldColor * heightManifoldAlpha);\n}`)),e.pointDistanceEnabled&&(n.uniforms.add(new s(\"angleCutoff\",(e=>u(e)))),n.code.add(f`{\nfloat pointDistanceSphereDistance = sphereDistancePixels(pointDistanceSphere, pos);\nvec4 pointDistanceSphereColor = laserlineProfile(pointDistanceSphereDistance);\nfloat pointDistanceSphereAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, normalize(pos - pointDistanceSphere.xyz))));\ncolor = max(color, pointDistanceSphereColor * pointDistanceSphereAlpha);\n}`)),e.lineVerticalPlaneEnabled&&(n.uniforms.add(new s(\"angleCutoff\",(e=>u(e)))),n.code.add(f`{\nif (pointIsWithinLine(pos, lineVerticalStart, lineVerticalEnd)) {\nfloat lineVerticalDistance = planeDistancePixels(lineVerticalPlane, pos);\nvec4 lineVerticalColor = laserlineProfile(lineVerticalDistance);\nfloat lineVerticalAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, abs(dot(normal, lineVerticalPlane.xyz)));\ncolor = max(color, lineVerticalColor * lineVerticalAlpha);\n}\n}`)),e.intersectsLineEnabled&&(n.uniforms.add(new s(\"angleCutoff\",(e=>u(e)))),n.code.add(f`{\nif (pointIsWithinLine(pos, intersectsLineStart, intersectsLineEnd)) {\nfloat intersectsLineDistance = lineDistancePixels(intersectsLineStart, intersectsLineDirection, intersectsLineRadius, pos);\nvec4 intersectsLineColor = laserlineProfile(intersectsLineDistance);\nfloat intersectsLineAlpha = 1.0 - smoothstep(angleCutoff.x, angleCutoff.y, 1.0 - abs(dot(normal, intersectsLineDirection)));\ncolor = max(color, intersectsLineColor * intersectsLineAlpha);\n}\n}`)),n.code.add(f`gl_FragColor = laserlineOutput(color * depthDiscontinuityAlpha);\n}`),i}function u(t){const a=i(t.angleCutoff)?t.angleCutoff:h;return n(g,Math.cos(a),Math.cos(Math.max(0,a-e(2))))}const g=t(),w=Object.freeze(Object.defineProperty({__proto__:null,defaultAngleCutoff:h,build:m},Symbol.toStringTag,{value:\"Module\"}));export{w as L,m as b,h as d};\n"],
  "mappings": "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",
  "names": ["e", "i", "o", "n", "r"]
}
