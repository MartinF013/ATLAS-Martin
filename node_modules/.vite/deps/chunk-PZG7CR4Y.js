import {
  s
} from "./chunk-DMJWTK32.js";
import {
  l as l2
} from "./chunk-FVPTCNCX.js";
import {
  o
} from "./chunk-GSRNZQFV.js";
import {
  l
} from "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";

// node_modules/@arcgis/core/symbols/Symbol.js
var p = new s({ esriSMS: "simple-marker", esriPMS: "picture-marker", esriSLS: "simple-line", esriSFS: "simple-fill", esriPFS: "picture-fill", esriTS: "text", esriSHD: "shield-label-symbol", PointSymbol3D: "point-3d", LineSymbol3D: "line-3d", PolygonSymbol3D: "polygon-3d", WebStyleSymbol: "web-style", MeshSymbol3D: "mesh-3d", LabelSymbol3D: "label-3d", CIMSymbolReference: "cim" });
var c = 0;
var m = class extends l {
  constructor(r) {
    super(r), this.id = "sym" + c++, this.type = null, this.color = new l2([0, 0, 0, 1]);
  }
  readColor(r) {
    return r && null != r[0] ? [r[0], r[1], r[2], r[3] / 255] : r;
  }
  async collectRequiredFields(r, o2) {
  }
  hash() {
    return JSON.stringify(this.toJSON());
  }
  clone() {
  }
};
e([d({ type: p.apiValues, readOnly: true, json: { read: false, write: { ignoreOrigin: true, writer: p.write } } })], m.prototype, "type", void 0), e([d({ type: l2, json: { write: { allowNull: true } } })], m.prototype, "color", void 0), e([o("color")], m.prototype, "readColor", null), m = e([n("esri.symbols.Symbol")], m);
var a = m;

export {
  a
};
//# sourceMappingURL=chunk-PZG7CR4Y.js.map
