import {
  a,
  c as c2,
  g as g2,
  i,
  i2
} from "./chunk-BIG2N653.js";
import {
  c
} from "./chunk-PR4JSHVD.js";
import {
  C,
  f,
  n as n4,
  p
} from "./chunk-T6YZ2CRM.js";
import {
  p as p2
} from "./chunk-5XRPB3CU.js";
import {
  I,
  L as L2,
  pt,
  u
} from "./chunk-536JSWCC.js";
import "./chunk-XVC34HIT.js";
import "./chunk-5SHHATAH.js";
import "./chunk-3ITGQWSQ.js";
import {
  n as n3
} from "./chunk-WLVMYWO2.js";
import "./chunk-7S6G3GM7.js";
import "./chunk-6UGZAJSY.js";
import "./chunk-AZ33IVEJ.js";
import {
  n as n2
} from "./chunk-23E5E222.js";
import "./chunk-DYRM6FXE.js";
import "./chunk-7Y6VVOP3.js";
import "./chunk-UQFAHV7T.js";
import "./chunk-COK4R22F.js";
import "./chunk-T6XN76GI.js";
import "./chunk-EZ4QR7V3.js";
import "./chunk-25Y2OKSP.js";
import "./chunk-DJFBTMGM.js";
import {
  o as o2
} from "./chunk-QJN4GT4E.js";
import "./chunk-E452MYWA.js";
import "./chunk-QFYBIFWB.js";
import "./chunk-EMETVH63.js";
import "./chunk-V56SVRSV.js";
import "./chunk-XZHFGTRH.js";
import "./chunk-2I27THZD.js";
import {
  m
} from "./chunk-X64NQ2GK.js";
import "./chunk-NVOCHKIH.js";
import "./chunk-DGELARKE.js";
import "./chunk-WN3KE5M2.js";
import "./chunk-KBCUY3VB.js";
import "./chunk-UVXRU6XP.js";
import "./chunk-PMQUXI6L.js";
import {
  le,
  ve
} from "./chunk-RHH23PAT.js";
import "./chunk-PUR7HIYZ.js";
import "./chunk-O2JKFSHC.js";
import "./chunk-76A4CWFG.js";
import "./chunk-KYD2B4O6.js";
import "./chunk-Y7MFFYJY.js";
import "./chunk-KW6WHTET.js";
import "./chunk-PUU4QXN5.js";
import "./chunk-EHWEX2VK.js";
import "./chunk-HPO2NV7P.js";
import "./chunk-22O7HU3A.js";
import "./chunk-Y75V5CF3.js";
import "./chunk-PQM6RARY.js";
import "./chunk-2Y5KPYOJ.js";
import "./chunk-BBUIX72C.js";
import "./chunk-5ZS6RUSM.js";
import "./chunk-HTS3HEEU.js";
import "./chunk-CYT6A5IX.js";
import "./chunk-R3PFJUIG.js";
import "./chunk-QWEWSWF7.js";
import "./chunk-7LH2XNVI.js";
import "./chunk-PXOPYXIX.js";
import "./chunk-WSQIVEW5.js";
import "./chunk-ZTFWVZTL.js";
import "./chunk-ELZC3DZT.js";
import "./chunk-TGUQXVQU.js";
import "./chunk-4LQ6NAOX.js";
import "./chunk-K37I5IIG.js";
import "./chunk-GKYJJGE3.js";
import "./chunk-AWIG2DGF.js";
import "./chunk-3236UEJN.js";
import "./chunk-KSOWE6GO.js";
import "./chunk-TCYVDK2B.js";
import "./chunk-PGSJOMCO.js";
import "./chunk-ZLORWBMB.js";
import "./chunk-LJAT5UYW.js";
import "./chunk-OZAI2STL.js";
import "./chunk-CNL2CHF7.js";
import "./chunk-HRAEK6P4.js";
import "./chunk-K6UIDSFF.js";
import {
  t as t2
} from "./chunk-LAHCYKZK.js";
import "./chunk-52W4YMC2.js";
import "./chunk-MHEQOIKQ.js";
import "./chunk-AIONJO5O.js";
import "./chunk-YLSPLHY5.js";
import "./chunk-4GGQTXXY.js";
import "./chunk-MCSRSOMA.js";
import "./chunk-2DP653N7.js";
import "./chunk-QZCFKQOH.js";
import "./chunk-QMP4VG7M.js";
import "./chunk-5RP42VZJ.js";
import "./chunk-7CXXTQLM.js";
import "./chunk-XEWFCJLT.js";
import "./chunk-ZEDAE7EU.js";
import "./chunk-ZEIWFXXO.js";
import "./chunk-YXFNNKMT.js";
import "./chunk-X7CKOX5Z.js";
import "./chunk-7OZR6JFF.js";
import "./chunk-NXOQBIK7.js";
import "./chunk-ERNXFM5T.js";
import "./chunk-6ITXWFMK.js";
import "./chunk-SV4VP57N.js";
import "./chunk-5LWMNFCG.js";
import "./chunk-PWYPPSAW.js";
import "./chunk-5EXPMKQP.js";
import "./chunk-B7F3T673.js";
import "./chunk-QXYW5CVF.js";
import "./chunk-Z7AZMEL6.js";
import "./chunk-FUKESVWQ.js";
import "./chunk-T3KDRLPE.js";
import "./chunk-EJ7RFMRW.js";
import "./chunk-SQ4XLXZO.js";
import "./chunk-6YT7XVZA.js";
import "./chunk-444THZYK.js";
import "./chunk-E3V32BOJ.js";
import "./chunk-VQLKKADV.js";
import "./chunk-D764DGF2.js";
import "./chunk-XEIRRA3E.js";
import "./chunk-PZHH54V6.js";
import "./chunk-PZFKIJU3.js";
import "./chunk-2A3F5J6D.js";
import "./chunk-B3IXFXV6.js";
import "./chunk-EPNT7GPS.js";
import "./chunk-MQLLOFWM.js";
import "./chunk-XNOIZLCR.js";
import "./chunk-PMOPLTRU.js";
import "./chunk-I22L7HNU.js";
import "./chunk-44UD36FH.js";
import "./chunk-ODYLXHP4.js";
import "./chunk-Y5AGUEHG.js";
import "./chunk-DVE4HUBR.js";
import "./chunk-RC6OMMF6.js";
import "./chunk-AWPZQDE5.js";
import "./chunk-OYNEZ5VG.js";
import "./chunk-R67CDTDF.js";
import "./chunk-UCWSHVC4.js";
import "./chunk-DHZ2TSD5.js";
import "./chunk-ZV3LDRB3.js";
import "./chunk-FAF3GP2W.js";
import "./chunk-YSWURJZW.js";
import "./chunk-5JKCNCL2.js";
import "./chunk-2YDCEMEJ.js";
import "./chunk-O7YSDCZE.js";
import "./chunk-767LZ6IM.js";
import "./chunk-TTKSAULB.js";
import "./chunk-WJDUBZ7S.js";
import "./chunk-DNPZNIDB.js";
import "./chunk-WW7VYUQW.js";
import "./chunk-FCDEMPPS.js";
import "./chunk-TEJEYVH4.js";
import "./chunk-HEZ2ATGC.js";
import "./chunk-ECNFP4CF.js";
import "./chunk-AALA53RH.js";
import "./chunk-BOVIIQLB.js";
import "./chunk-IJHFAZOW.js";
import "./chunk-DMGVDNFD.js";
import "./chunk-YAQGRU5B.js";
import "./chunk-M3GMIUQS.js";
import "./chunk-BMA2CXVS.js";
import "./chunk-46N7XS5M.js";
import "./chunk-4MKQUQD4.js";
import "./chunk-A3QLZKCF.js";
import "./chunk-OYAHQ564.js";
import "./chunk-LGILR4HN.js";
import "./chunk-I5UNY2WQ.js";
import "./chunk-KETNREBT.js";
import "./chunk-GKICNYWA.js";
import "./chunk-EYJ2F5XB.js";
import "./chunk-5EPJG7SL.js";
import "./chunk-XXEJXJP4.js";
import "./chunk-MFOJFHT7.js";
import "./chunk-TR3U55RZ.js";
import "./chunk-3DCTMZI6.js";
import "./chunk-33INAWJA.js";
import "./chunk-5WOO2FX6.js";
import "./chunk-FPMD6IB4.js";
import "./chunk-J73IXFNW.js";
import "./chunk-FFHGE66H.js";
import "./chunk-MOZ4GR2L.js";
import "./chunk-MQBVOUKB.js";
import "./chunk-S5PZEGLP.js";
import "./chunk-PLLZPG4O.js";
import "./chunk-WQLER7IU.js";
import "./chunk-7GTYHKA3.js";
import "./chunk-MOXYEJRV.js";
import "./chunk-EEJIELE6.js";
import "./chunk-Y55TYMBP.js";
import "./chunk-NAB3NF54.js";
import "./chunk-MHB3L22D.js";
import "./chunk-MDCKEJ7B.js";
import "./chunk-MLAOYRDT.js";
import "./chunk-VMF4NMEB.js";
import "./chunk-NAIF4GWX.js";
import "./chunk-72PB636Q.js";
import "./chunk-RIOXX6J2.js";
import "./chunk-SOZCO2CU.js";
import "./chunk-53KI6WDE.js";
import "./chunk-W2HLA6I3.js";
import "./chunk-Q6AASANP.js";
import "./chunk-ZYIEYKCD.js";
import "./chunk-DLM6NKXW.js";
import "./chunk-TQLSOIYV.js";
import "./chunk-YFBAFAZ2.js";
import "./chunk-LUU3J646.js";
import "./chunk-Z7BSDVJ3.js";
import "./chunk-2EPPX4WN.js";
import "./chunk-MEW2XKT2.js";
import "./chunk-RB3LJE4I.js";
import "./chunk-MV2XZ5BA.js";
import "./chunk-MZ4JF5C6.js";
import "./chunk-3NPGGTI6.js";
import "./chunk-YZNDHJDJ.js";
import "./chunk-NMRWU44S.js";
import "./chunk-RRFFPL7N.js";
import "./chunk-JYR7GBAU.js";
import "./chunk-IG4CY4XM.js";
import "./chunk-CC32E45Q.js";
import "./chunk-V7M26XZ7.js";
import "./chunk-ZN2MGN4S.js";
import {
  L
} from "./chunk-JZY7CGEI.js";
import "./chunk-2LGANX7J.js";
import "./chunk-RTHP2LNT.js";
import "./chunk-PNUWGOXY.js";
import "./chunk-6SWQ7R36.js";
import "./chunk-Z4FD36CT.js";
import "./chunk-OZT6RDST.js";
import "./chunk-4I3W4KD5.js";
import "./chunk-JNXH4TTS.js";
import "./chunk-PZWU5EHT.js";
import "./chunk-CQSGZXR7.js";
import "./chunk-JJ7VMWJT.js";
import {
  y
} from "./chunk-OMNBM2E4.js";
import "./chunk-M2WA2LMI.js";
import "./chunk-UQDLDM54.js";
import "./chunk-YL26MZEL.js";
import "./chunk-YG6VFATO.js";
import "./chunk-WBX2MY5R.js";
import "./chunk-3DZ4BNVJ.js";
import "./chunk-4XBERLPX.js";
import "./chunk-D7AOY7GH.js";
import "./chunk-7ZPDA3EC.js";
import "./chunk-6O2ARNGD.js";
import "./chunk-6GPADSSO.js";
import "./chunk-CQ47VEUP.js";
import "./chunk-FU5UMT3R.js";
import {
  b
} from "./chunk-GSFXXEAM.js";
import "./chunk-QZTJM4HG.js";
import "./chunk-C7S44TP4.js";
import "./chunk-KUWW4YJ7.js";
import "./chunk-P6I5J7W6.js";
import "./chunk-ORGMKDYR.js";
import "./chunk-F2DXUUYL.js";
import "./chunk-EGR3VVZG.js";
import "./chunk-F5A4XAOJ.js";
import "./chunk-4TDLPK3D.js";
import "./chunk-U7B2WKBH.js";
import "./chunk-T7SYNS2R.js";
import "./chunk-WODSLTZT.js";
import "./chunk-JMZLJZMP.js";
import "./chunk-QKRZMDWG.js";
import "./chunk-TBT57L4K.js";
import "./chunk-SIH2IMSA.js";
import "./chunk-2AGPHSDM.js";
import "./chunk-JGSSQ5FR.js";
import "./chunk-5OEHY3VV.js";
import "./chunk-WKRVG5MO.js";
import "./chunk-GRILTTJT.js";
import "./chunk-JJRJ6TV3.js";
import "./chunk-K2FQEYBG.js";
import "./chunk-G4IZ2HTT.js";
import {
  h
} from "./chunk-T7BEWVV3.js";
import "./chunk-ASC3X65B.js";
import "./chunk-KVF4M6PZ.js";
import "./chunk-IZCP5QP4.js";
import "./chunk-QFTOW2ST.js";
import "./chunk-I4USSDLI.js";
import "./chunk-VI3TTBSC.js";
import "./chunk-B42HXLDM.js";
import "./chunk-TVXPO7T5.js";
import "./chunk-2EZYA7VW.js";
import "./chunk-OEQ3EDRD.js";
import "./chunk-Z6EP2GTZ.js";
import "./chunk-P6G64ARX.js";
import "./chunk-GD6ALUPQ.js";
import "./chunk-CLGCKZUR.js";
import "./chunk-RN2KRYDN.js";
import {
  g
} from "./chunk-BLINZ65M.js";
import "./chunk-TADZYUVR.js";
import "./chunk-C5ULLWJ7.js";
import "./chunk-HFDYAQZS.js";
import "./chunk-HJHWUUQQ.js";
import "./chunk-TMBOFNWA.js";
import "./chunk-ZNEGSJWK.js";
import "./chunk-EI4MOLML.js";
import "./chunk-4SBWV5M2.js";
import "./chunk-CF56UYH2.js";
import "./chunk-5TRUGQDM.js";
import "./chunk-PZG7CR4Y.js";
import "./chunk-2HDG7SIE.js";
import "./chunk-56RHM4A6.js";
import "./chunk-ACJD5XFJ.js";
import "./chunk-OO2JXX7L.js";
import "./chunk-6DWU2ZQF.js";
import "./chunk-Q3R7XFM5.js";
import "./chunk-JCPK2OXG.js";
import "./chunk-HVM5D6S5.js";
import "./chunk-JYHTO6QC.js";
import "./chunk-FTLBKDGL.js";
import "./chunk-5Z5455ZY.js";
import "./chunk-D7DLEBS2.js";
import "./chunk-H7JF6Q7A.js";
import "./chunk-TT2HIXWQ.js";
import "./chunk-OIPX3EDD.js";
import "./chunk-NWRK6QLX.js";
import "./chunk-HPH3FMVB.js";
import "./chunk-OOZMA7DN.js";
import "./chunk-Y7FSCP47.js";
import "./chunk-65A2N4LL.js";
import "./chunk-GVELBHGI.js";
import "./chunk-5N3FSR63.js";
import "./chunk-C4LU7RDX.js";
import "./chunk-EPCCNF3D.js";
import "./chunk-4PRVTUEZ.js";
import "./chunk-DMJWTK32.js";
import "./chunk-FVPTCNCX.js";
import "./chunk-BPZGJQOB.js";
import "./chunk-ZOKX6UGH.js";
import "./chunk-PKZEO23A.js";
import "./chunk-43S7PUMG.js";
import "./chunk-AIRC226G.js";
import "./chunk-BNPOKP6A.js";
import "./chunk-CHNDTVQJ.js";
import "./chunk-VLCG72SW.js";
import "./chunk-Q72YFZUL.js";
import "./chunk-YPZEGNLG.js";
import "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import "./chunk-XRL56EGK.js";
import "./chunk-ZIHDQYKE.js";
import "./chunk-GSRNZQFV.js";
import "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import "./chunk-U3PSONS6.js";
import "./chunk-HFTNOKM2.js";
import "./chunk-23NWA6WL.js";
import {
  s
} from "./chunk-CVWDM4C7.js";
import "./chunk-G5JBUC5N.js";
import {
  l,
  o,
  r,
  t
} from "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/views/3d/layers/SceneLayerView3D.js
var R = s.getLogger("esri.views.3d.layers.SceneLayerView3D");
var U = i2();
var V = class extends pt(p2(c(n3(g2)))) {
  constructor() {
    super(...arguments), this.type = "scene-layer-3d", this.lodFactor = 1, this.progressiveLoadFactor = 1, this._elevationContext = "scene", this._isIntegratedMesh = false, this._supportsLabeling = true, this._interactiveEditingSessions = /* @__PURE__ */ new Map(), this._queryEngine = null;
  }
  get filter() {
    return this._get("filter");
  }
  set filter(e2) {
    this._set("filter", C.checkSupport(e2) ? e2 : null);
  }
  get viewFilter() {
    const e2 = this.filter;
    if (t(e2) && t(this.layerFilter))
      return null;
    const t3 = this._get("viewFilter");
    return t(t3) ? new C({ layerFilter: this.layerFilter, viewFilter: e2, layerFieldsIndex: this.layer.fieldsIndex, loadAsyncModule: (e3) => this._loadAsyncModule(e3), applyFilters: () => this._applyFilters(true), addSqlFilter: (e3, t4) => this.addSqlFilter(e3, t4, this.logError) }) : (t3.viewFilter = this.filter, t3.layerFilter = this.layerFilter, this.notifyChange("viewFilter"), t3);
  }
  get requiredFields() {
    var _a;
    return ((_a = this.fieldsHelper) == null ? void 0 : _a.requiredFields) ?? [];
  }
  get floorFilterClause() {
    const e2 = o2(this);
    return r(e2) ? m.create(e2, this.layer.fieldsIndex) : null;
  }
  get excludeObjectIdsSorted() {
    const e2 = this.layer.excludeObjectIds;
    return e2.length ? e2.toArray().sort((e3, t3) => e3 - t3) : null;
  }
  get lodCrossfadeinDuration() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.qualitySettings.sceneService["3dObject"].lodCrossfadeinDuration) ?? 0;
  }
  get lodCrossfadeoutDuration() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.qualitySettings.sceneService["3dObject"].lodCrossfadeoutDuration) ?? 0;
  }
  get lodCrossfadeUncoveredDuration() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.qualitySettings.sceneService["3dObject"].lodCrossfadeUncoveredDuration) ?? 0;
  }
  initialize() {
    this.fieldsHelper = new c2({ layerView: this }), this.updatingHandles.add(() => this.layer.rangeInfos, (e2) => this._rangeInfosChanged(e2), h), this.updatingHandles.add(() => this.layer.renderer, (e2) => this.updatingHandles.addPromise(this._rendererChange(e2)), h), this.updatingHandles.add(() => [this.parsedDefinitionExpression, this.filter, this.layer.filter, this.floorFilterClause, this.excludeObjectIdsSorted, o(this.viewFilter, (e2) => [e2.parsedWhereClause, e2.parsedGeometry, e2.sortedObjectIds])], () => this._filterChange()), this.updatingHandles.add(() => [this.filter, o(this.viewFilter, (e2) => e2.parsedGeometry)], () => this._geometryFilterChange()), this.handles.add(this.layer.on("apply-edits", (e2) => this.updatingHandles.addPromise(e2.result))), this.handles.add(this.layer.on("edits", (e2) => this._handleEdits(e2)));
  }
  destroy() {
    this.fieldsHelper = l(this.fieldsHelper);
  }
  _rangeInfosChanged(e2) {
    null != e2 && e2.length > 0 && R.warn("Unsupported property: rangeInfos are currently only serialized to and from web scenes but do not affect rendering.");
  }
  createQuery() {
    const e2 = { outFields: ["*"], returnGeometry: false, outSpatialReference: this.view.spatialReference };
    return r(this.filter) ? this.filter.createQuery(e2) : new b(e2);
  }
  queryExtent(e2, t3) {
    return this._ensureQueryEngine().executeQueryForExtent(this._ensureQuery(e2), t3 == null ? void 0 : t3.signal);
  }
  queryFeatureCount(e2, t3) {
    return this._ensureQueryEngine().executeQueryForCount(this._ensureQuery(e2), t3 == null ? void 0 : t3.signal);
  }
  queryFeatures(e2, t3) {
    return this._ensureQueryEngine().executeQuery(this._ensureQuery(e2), t3 == null ? void 0 : t3.signal).then((e3) => {
      if (!(e3 == null ? void 0 : e3.features))
        return e3;
      const t4 = this.layer;
      for (const r2 of e3.features)
        r2.layer = t4, r2.sourceLayer = t4;
      return e3;
    });
  }
  queryObjectIds(e2, t3) {
    return this._ensureQueryEngine().executeQueryForIds(this._ensureQuery(e2), t3 == null ? void 0 : t3.signal);
  }
  _ensureQueryEngine() {
    return this._queryEngine || (this._queryEngine = this._createQueryEngine()), this._queryEngine;
  }
  _createQueryEngine() {
    const e2 = u(this.view.spatialReference, this.view.renderSpatialReference, this._collection);
    return new p({ layerView: this, priority: L.FEATURE_QUERY_ENGINE, spatialIndex: new f({ featureAdapter: new n4({ objectIdField: this.layer.objectIdField, attributeStorageInfo: this.layer.attributeStorageInfo, getFeatureExtent: e2 }), toArray: () => {
      const e3 = new Array();
      return this._forAllFeatures((t3, r2, i3) => (e3.push({ id: t3, index: r2, meta: i3 }), L2.CONTINUE), null, I.ALL_IN_CLIPPING_AREA), e3;
    }, forAllFeatures: (e3, t3) => this._forAllFeatures((t4, r2, i3) => e3({ id: t4, index: r2, meta: i3 }), t3, I.ALL_IN_CLIPPING_AREA), getFeatureExtent: e2, sourceSpatialReference: ve(this.layer), viewSpatialReference: this.view.spatialReference }) });
  }
  highlight(e2) {
    const t3 = this._highlights;
    if (e2 instanceof b) {
      const { set: r2, handle: i3 } = t3.acquireSet();
      return this.queryObjectIds(e2).then((e3) => t3.setFeatureIds(r2, e3)), i3;
    }
    return super.highlight(e2);
  }
  createInteractiveEditSession(e2) {
    return i(this.attributeEditingContext, e2);
  }
  _createLayerGraphic(e2) {
    const r2 = new g(null, null, e2);
    return r2.layer = this.layer, r2.sourceLayer = this.layer, r2;
  }
  canResume() {
    return super.canResume() && (!this._controller || this._controller.rootNodeVisible);
  }
  getFilters() {
    const e2 = super.getFilters(), t3 = this.excludeObjectIdsSorted;
    return r(t3) && e2.push((e3) => le(t3, false, e3)), this.floorFilterClause && this.addSqlFilter(e2, this.floorFilterClause, this.logError), this.addSqlFilter(e2, this.parsedDefinitionExpression, this.logError), r(this.viewFilter) && this.viewFilter.addFilters(e2, this.view, this._controller.crsIndex, this._collection), e2;
  }
  isUpdating() {
    return super.isUpdating() || this.layerFilterUpdating;
  }
  _ensureQuery(e2) {
    return this._addDefinitionExpressionToQuery(t(e2) ? this.createQuery() : b.from(e2));
  }
  get attributeEditingContext() {
    return { sessions: this._interactiveEditingSessions, fieldsIndex: this.layer.fieldsIndex, objectIdField: this._getObjectIdField(), forEachNode: (e2) => this._forAllNodes((t3) => r(t3) ? e2(t3.node, t3.featureIds) : null), attributeStorageInfo: this.i3slayer.attributeStorageInfo, attributeOverrides: this.attributeOverrides, getAttributeData: (e2) => this.getAttributeData(e2), setAttributeData: (e2, t3) => this.setAttributeData(e2, t3), clearMemCache: () => this.clearMemCache() };
  }
  _handleEdits(e2) {
    a(this.attributeEditingContext, e2);
  }
  get hasGeometryFilter() {
    const e2 = this.viewFilter;
    return r(e2) && r(e2.parsedGeometry);
  }
  computeNodeFiltering(e2) {
    const t3 = this.viewFilter;
    return t(t3) || t3.isMBSGeometryVisible(e2, this.view.spatialReference, this._controller.crsIndex) ? n2.Unmodified : n2.Culled;
  }
};
e([d({ aliasOf: "layer" })], V.prototype, "i3slayer", void 0), e([d(t2)], V.prototype, "updatingProgress", void 0), e([d({ type: y })], V.prototype, "filter", null), e([d({ readOnly: true })], V.prototype, "viewFilter", null), e([d(U.requiredFields)], V.prototype, "requiredFields", null), e([d(U.availableFields)], V.prototype, "availableFields", void 0), e([d()], V.prototype, "fieldsHelper", void 0), e([d()], V.prototype, "floorFilterClause", null), e([d()], V.prototype, "excludeObjectIdsSorted", null), e([d({ readOnly: true, aliasOf: "view.qualitySettings.sceneService.3dObject.lodFactor" })], V.prototype, "lodFactor", void 0), e([d({ readOnly: true, aliasOf: "_controller.updatingProgress" })], V.prototype, "updatingProgressValue", void 0), V = e([n("esri.views.3d.layers.SceneLayerView3D")], V);
var N = V;
export {
  N as default
};
//# sourceMappingURL=SceneLayerView3D-S2QELQUV.js.map
