import {
  B
} from "./chunk-SO2UREOW.js";
import "./chunk-43ZVVGJH.js";
import "./chunk-7S6G3GM7.js";
import "./chunk-WKUIJCRG.js";
import "./chunk-XQ337NY7.js";
import "./chunk-UMSO3HI4.js";
import "./chunk-VKEKAYXP.js";
import "./chunk-6UGZAJSY.js";
import "./chunk-WL7KJZAL.js";
import "./chunk-ATJYWC6C.js";
import "./chunk-KXE4LGFJ.js";
import "./chunk-Z34NAJDO.js";
import "./chunk-HHJIVHSH.js";
import "./chunk-BYHUWBKS.js";
import "./chunk-IEPHENP2.js";
import "./chunk-436X6OVY.js";
import "./chunk-RB2H3SKO.js";
import "./chunk-UKBGUXUQ.js";
import "./chunk-AKNCAMEF.js";
import "./chunk-FMIFCFD7.js";
import "./chunk-UGLXR5OV.js";
import "./chunk-RGZ7VIMW.js";
import "./chunk-6FQZDXGD.js";
import "./chunk-SF7Z6XNR.js";
import "./chunk-HH3D3A65.js";
import "./chunk-OA3NMCNZ.js";
import "./chunk-QJN4GT4E.js";
import "./chunk-YDPQRKY4.js";
import "./chunk-TCBD6DES.js";
import "./chunk-G2GJVIQC.js";
import "./chunk-RVR2DEVB.js";
import "./chunk-ZEIWFXXO.js";
import "./chunk-YXFNNKMT.js";
import "./chunk-EJ7RFMRW.js";
import "./chunk-VQLKKADV.js";
import "./chunk-33INAWJA.js";
import "./chunk-FPMD6IB4.js";
import "./chunk-S5PZEGLP.js";
import "./chunk-Z7BSDVJ3.js";
import "./chunk-MEW2XKT2.js";
import "./chunk-RB3LJE4I.js";
import "./chunk-6EODZIDR.js";
import "./chunk-MV2XZ5BA.js";
import "./chunk-PQO66WZ2.js";
import "./chunk-YZNDHJDJ.js";
import "./chunk-4P4OV7G6.js";
import "./chunk-ZUDEVIXR.js";
import "./chunk-IG4CY4XM.js";
import "./chunk-XLCZFN6R.js";
import {
  y
} from "./chunk-OMNBM2E4.js";
import "./chunk-M2WA2LMI.js";
import "./chunk-UQDLDM54.js";
import "./chunk-YL26MZEL.js";
import "./chunk-WBX2MY5R.js";
import "./chunk-3DZ4BNVJ.js";
import "./chunk-4XBERLPX.js";
import "./chunk-ODX6X222.js";
import "./chunk-GSFXXEAM.js";
import "./chunk-QZTJM4HG.js";
import "./chunk-F2DXUUYL.js";
import "./chunk-4TDLPK3D.js";
import "./chunk-U7B2WKBH.js";
import "./chunk-WODSLTZT.js";
import "./chunk-JMZLJZMP.js";
import "./chunk-JT3LXQ47.js";
import "./chunk-TBT57L4K.js";
import "./chunk-2AGPHSDM.js";
import "./chunk-JGSSQ5FR.js";
import "./chunk-5OEHY3VV.js";
import "./chunk-LJLQIETB.js";
import "./chunk-WKRVG5MO.js";
import "./chunk-GRILTTJT.js";
import "./chunk-JJRJ6TV3.js";
import "./chunk-K2FQEYBG.js";
import "./chunk-G4IZ2HTT.js";
import {
  h,
  l
} from "./chunk-T7BEWVV3.js";
import "./chunk-ASC3X65B.js";
import "./chunk-KVF4M6PZ.js";
import "./chunk-I4USSDLI.js";
import "./chunk-B42HXLDM.js";
import "./chunk-2EZYA7VW.js";
import "./chunk-OEQ3EDRD.js";
import "./chunk-P6G64ARX.js";
import "./chunk-GD6ALUPQ.js";
import "./chunk-RN2KRYDN.js";
import "./chunk-BLINZ65M.js";
import "./chunk-TADZYUVR.js";
import "./chunk-C5ULLWJ7.js";
import "./chunk-HFDYAQZS.js";
import "./chunk-HJHWUUQQ.js";
import "./chunk-TMBOFNWA.js";
import "./chunk-ZNEGSJWK.js";
import "./chunk-EI4MOLML.js";
import "./chunk-4SBWV5M2.js";
import "./chunk-CF56UYH2.js";
import "./chunk-5TRUGQDM.js";
import "./chunk-PZG7CR4Y.js";
import "./chunk-2HDG7SIE.js";
import "./chunk-56RHM4A6.js";
import "./chunk-ACJD5XFJ.js";
import "./chunk-OO2JXX7L.js";
import "./chunk-6DWU2ZQF.js";
import "./chunk-Q3R7XFM5.js";
import "./chunk-JCPK2OXG.js";
import "./chunk-HVM5D6S5.js";
import "./chunk-JYHTO6QC.js";
import "./chunk-FTLBKDGL.js";
import "./chunk-5Z5455ZY.js";
import "./chunk-D7DLEBS2.js";
import "./chunk-H7JF6Q7A.js";
import "./chunk-TT2HIXWQ.js";
import "./chunk-OIPX3EDD.js";
import "./chunk-NWRK6QLX.js";
import "./chunk-HPH3FMVB.js";
import "./chunk-OOZMA7DN.js";
import "./chunk-Y7FSCP47.js";
import "./chunk-65A2N4LL.js";
import "./chunk-GVELBHGI.js";
import "./chunk-5N3FSR63.js";
import "./chunk-C4LU7RDX.js";
import "./chunk-EPCCNF3D.js";
import "./chunk-4PRVTUEZ.js";
import "./chunk-DMJWTK32.js";
import "./chunk-FVPTCNCX.js";
import "./chunk-BPZGJQOB.js";
import "./chunk-ZOKX6UGH.js";
import "./chunk-PKZEO23A.js";
import "./chunk-43S7PUMG.js";
import "./chunk-AIRC226G.js";
import "./chunk-BNPOKP6A.js";
import "./chunk-CHNDTVQJ.js";
import "./chunk-VLCG72SW.js";
import "./chunk-Q72YFZUL.js";
import "./chunk-YPZEGNLG.js";
import "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import "./chunk-XRL56EGK.js";
import "./chunk-ZIHDQYKE.js";
import "./chunk-GSRNZQFV.js";
import "./chunk-ICD7AJSY.js";
import {
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import "./chunk-U3PSONS6.js";
import "./chunk-HFTNOKM2.js";
import "./chunk-23NWA6WL.js";
import "./chunk-CVWDM4C7.js";
import "./chunk-G5JBUC5N.js";
import {
  r
} from "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/views/2d/layers/SubtypeGroupLayerView2D.js
function l2(e2, r2) {
  return !e2.visible || 0 !== e2.minScale && r2 > e2.minScale || 0 !== e2.maxScale && r2 < e2.maxScale;
}
var n2 = class extends B {
  initialize() {
    this.handles.add([l(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.viewpoint;
    }, () => this._update(), h)]);
  }
  _injectOverrides(e2) {
    let s = super._injectOverrides(e2);
    const t = this.view.scale, i = this.layer.sublayers.filter((e3) => l2(e3, t)).map((e3) => e3.subtypeCode);
    if (!i.length)
      return s;
    s = r(s) ? s : new y().toJSON();
    const o = `NOT ${this.layer.subtypeField} IN (${i.join(",")})`;
    return s.where = s.where ? `(${s.where}) AND (${o})` : o, s;
  }
  _setLayersForFeature(e2) {
    const r2 = this.layer.fieldsIndex.get(this.layer.subtypeField), s = e2.attributes[r2.name], t = this.layer.sublayers.find((e3) => e3.subtypeCode === s);
    e2.layer = t, e2.sourceLayer = this.layer;
  }
  _createSchemaConfig() {
    const e2 = { subtypeField: this.layer.subtypeField, sublayers: Array.from(this.layer.sublayers).map((e3) => ({ featureReduction: null, geometryType: this.layer.geometryType, labelingInfo: e3.labelingInfo, labelsVisible: e3.labelsVisible, renderer: e3.renderer, subtypeCode: e3.subtypeCode, orderBy: null })) }, r2 = this.layer.sublayers.map((e3) => e3.subtypeCode).join(","), s = this.layer.sublayers.length ? `${this.layer.subtypeField} IN (${r2})` : "1=2";
    let t = this.layer.definitionExpression ? this.layer.definitionExpression + " AND " : "";
    return t += s, { ...super._createSchemaConfig(), ...e2, definitionExpression: t };
  }
};
n2 = e([n("esri.views.2d.layers.SubtypeGroupLayerView2D")], n2);
var y2 = n2;
export {
  y2 as default
};
//# sourceMappingURL=SubtypeGroupLayerView2D-IDOLD6ZS.js.map
