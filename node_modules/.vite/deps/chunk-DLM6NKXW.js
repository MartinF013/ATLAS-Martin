import {
  e as e2
} from "./chunk-TQLSOIYV.js";
import {
  e
} from "./chunk-LUU3J646.js";
import {
  D,
  E,
  a as a2,
  j,
  l,
  q,
  r as r2,
  s,
  v,
  x,
  y
} from "./chunk-ZOKX6UGH.js";
import {
  P,
  Y,
  _,
  z
} from "./chunk-PKZEO23A.js";
import {
  n,
  r
} from "./chunk-AIRC226G.js";
import {
  a,
  t
} from "./chunk-BNPOKP6A.js";

// node_modules/@arcgis/core/chunks/quat.js
function b(t2) {
  return t2[0] = 0, t2[1] = 0, t2[2] = 0, t2[3] = 1, t2;
}
function v2(t2, s2, a3) {
  a3 *= 0.5;
  const n2 = Math.sin(a3);
  return t2[0] = n2 * s2[0], t2[1] = n2 * s2[1], t2[2] = n2 * s2[2], t2[3] = Math.cos(a3), t2;
}
function x2(t2, s2) {
  const a3 = 2 * Math.acos(s2[3]), n2 = Math.sin(a3 / 2);
  return n2 > t ? (t2[0] = s2[0] / n2, t2[1] = s2[1] / n2, t2[2] = s2[2] / n2) : (t2[0] = 1, t2[1] = 0, t2[2] = 0), a3;
}
function y2(t2, s2, a3) {
  const n2 = s2[0], o = s2[1], r3 = s2[2], e3 = s2[3], c = a3[0], u = a3[1], i = a3[2], h = a3[3];
  return t2[0] = n2 * h + e3 * c + o * i - r3 * u, t2[1] = o * h + e3 * u + r3 * c - n2 * i, t2[2] = r3 * h + e3 * i + n2 * u - o * c, t2[3] = e3 * h - n2 * c - o * u - r3 * i, t2;
}
function A(t2, s2, a3) {
  a3 *= 0.5;
  const n2 = s2[0], o = s2[1], r3 = s2[2], e3 = s2[3], c = Math.sin(a3), u = Math.cos(a3);
  return t2[0] = n2 * u + e3 * c, t2[1] = o * u + r3 * c, t2[2] = r3 * u - o * c, t2[3] = e3 * u - n2 * c, t2;
}
function I(t2, s2, a3) {
  a3 *= 0.5;
  const n2 = s2[0], o = s2[1], r3 = s2[2], e3 = s2[3], c = Math.sin(a3), u = Math.cos(a3);
  return t2[0] = n2 * u - r3 * c, t2[1] = o * u + e3 * c, t2[2] = r3 * u + n2 * c, t2[3] = e3 * u - o * c, t2;
}
function E2(t2, s2, a3) {
  a3 *= 0.5;
  const n2 = s2[0], o = s2[1], r3 = s2[2], e3 = s2[3], c = Math.sin(a3), u = Math.cos(a3);
  return t2[0] = n2 * u + o * c, t2[1] = o * u - n2 * c, t2[2] = r3 * u + e3 * c, t2[3] = e3 * u - r3 * c, t2;
}
function _2(t2, s2) {
  const a3 = s2[0], n2 = s2[1], o = s2[2];
  return t2[0] = a3, t2[1] = n2, t2[2] = o, t2[3] = Math.sqrt(Math.abs(1 - a3 * a3 - n2 * n2 - o * o)), t2;
}
function z2(t2, s2, a3, n2) {
  const r3 = s2[0], e3 = s2[1], c = s2[2], u = s2[3];
  let i, h, M, f, l2, m = a3[0], p = a3[1], q2 = a3[2], d = a3[3];
  return h = r3 * m + e3 * p + c * q2 + u * d, h < 0 && (h = -h, m = -m, p = -p, q2 = -q2, d = -d), 1 - h > t ? (i = Math.acos(h), M = Math.sin(i), f = Math.sin((1 - n2) * i) / M, l2 = Math.sin(n2 * i) / M) : (f = 1 - n2, l2 = n2), t2[0] = f * r3 + l2 * m, t2[1] = f * e3 + l2 * p, t2[2] = f * c + l2 * q2, t2[3] = f * u + l2 * d, t2;
}
function L(t2) {
  const s2 = a(), a3 = a(), n2 = a(), o = Math.sqrt(1 - s2), e3 = Math.sqrt(s2);
  return t2[0] = o * Math.sin(2 * Math.PI * a3), t2[1] = o * Math.cos(2 * Math.PI * a3), t2[2] = e3 * Math.sin(2 * Math.PI * n2), t2[3] = e3 * Math.cos(2 * Math.PI * n2), t2;
}
function O(t2, s2) {
  const a3 = s2[0], n2 = s2[1], o = s2[2], r3 = s2[3], e3 = a3 * a3 + n2 * n2 + o * o + r3 * r3, c = e3 ? 1 / e3 : 0;
  return t2[0] = -a3 * c, t2[1] = -n2 * c, t2[2] = -o * c, t2[3] = r3 * c, t2;
}
function S(t2, s2) {
  return t2[0] = -s2[0], t2[1] = -s2[1], t2[2] = -s2[2], t2[3] = s2[3], t2;
}
function T(t2, s2) {
  const a3 = s2[0] + s2[4] + s2[8];
  let n2;
  if (a3 > 0)
    n2 = Math.sqrt(a3 + 1), t2[3] = 0.5 * n2, n2 = 0.5 / n2, t2[0] = (s2[5] - s2[7]) * n2, t2[1] = (s2[6] - s2[2]) * n2, t2[2] = (s2[1] - s2[3]) * n2;
  else {
    let a4 = 0;
    s2[4] > s2[0] && (a4 = 1), s2[8] > s2[3 * a4 + a4] && (a4 = 2);
    const o = (a4 + 1) % 3, r3 = (a4 + 2) % 3;
    n2 = Math.sqrt(s2[3 * a4 + a4] - s2[3 * o + o] - s2[3 * r3 + r3] + 1), t2[a4] = 0.5 * n2, n2 = 0.5 / n2, t2[3] = (s2[3 * o + r3] - s2[3 * r3 + o]) * n2, t2[o] = (s2[3 * o + a4] + s2[3 * a4 + o]) * n2, t2[r3] = (s2[3 * r3 + a4] + s2[3 * a4 + r3]) * n2;
  }
  return t2;
}
function k(t2, s2, a3, n2) {
  const o = 0.5 * Math.PI / 180;
  s2 *= o, a3 *= o, n2 *= o;
  const r3 = Math.sin(s2), e3 = Math.cos(s2), c = Math.sin(a3), u = Math.cos(a3), i = Math.sin(n2), h = Math.cos(n2);
  return t2[0] = r3 * u * h - e3 * c * i, t2[1] = e3 * c * h + r3 * u * i, t2[2] = e3 * u * i - r3 * c * h, t2[3] = e3 * u * h + r3 * c * i, t2;
}
function w(t2) {
  return "quat(" + t2[0] + ", " + t2[1] + ", " + t2[2] + ", " + t2[3] + ")";
}
var B = a2;
var C = r2;
var D2 = s;
var F = y2;
var G = l;
var R = y;
var W = j;
var X = x;
var Y2 = X;
var Z = q;
var H = Z;
var J = v;
var K = D;
var N = E;
function Q(t2, s2, a3) {
  const n2 = P(s2, a3);
  return n2 < -0.999999 ? (_(U, V, s2), Y(U) < 1e-6 && _(U, $, s2), z(U, U), v2(t2, U, Math.PI), t2) : n2 > 0.999999 ? (t2[0] = 0, t2[1] = 0, t2[2] = 0, t2[3] = 1, t2) : (_(U, s2, a3), t2[0] = U[0], t2[1] = U[1], t2[2] = U[2], t2[3] = 1 + n2, J(t2, t2));
}
var U = n();
var V = r(1, 0, 0);
var $ = r(0, 1, 0);
function tt(t2, s2, a3, n2, o, r3) {
  return z2(st, s2, o, r3), z2(at, a3, n2, r3), z2(t2, st, at, 2 * r3 * (1 - r3)), t2;
}
var st = e2();
var at = e2();
function nt(t2, s2, a3, n2) {
  const o = ot;
  return o[0] = a3[0], o[3] = a3[1], o[6] = a3[2], o[1] = n2[0], o[4] = n2[1], o[7] = n2[2], o[2] = -s2[0], o[5] = -s2[1], o[8] = -s2[2], J(t2, T(t2, o));
}
var ot = e();
var rt = Object.freeze(Object.defineProperty({ __proto__: null, identity: b, setAxisAngle: v2, getAxisAngle: x2, multiply: y2, rotateX: A, rotateY: I, rotateZ: E2, calculateW: _2, slerp: z2, random: L, invert: O, conjugate: S, fromMat3: T, fromEuler: k, str: w, copy: B, set: C, add: D2, mul: F, scale: G, dot: R, lerp: W, length: X, len: Y2, squaredLength: Z, sqrLen: H, normalize: J, exactEquals: K, equals: N, rotationTo: Q, sqlerp: tt, setAxes: nt }, Symbol.toStringTag, { value: "Module" }));

export {
  v2 as v,
  x2 as x,
  y2 as y,
  O,
  S,
  k,
  B,
  K,
  Q
};
//# sourceMappingURL=chunk-DLM6NKXW.js.map
