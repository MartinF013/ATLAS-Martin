import {
  h
} from "./chunk-OA3NMCNZ.js";
import {
  a
} from "./chunk-RVR2DEVB.js";
import {
  e
} from "./chunk-MEW2XKT2.js";

// node_modules/@arcgis/core/views/2d/engine/Container.js
var s = class extends a {
  constructor() {
    super(...arguments), this._childrenSet = /* @__PURE__ */ new Set(), this._needsSort = false, this.children = [], this._effectView = null;
  }
  get blendMode() {
    return this._blendMode;
  }
  set blendMode(e2) {
    this._blendMode = e2, this.requestRender();
  }
  get clips() {
    return this._clips;
  }
  set clips(e2) {
    this._clips = e2, this.children.forEach((t) => t.clips = e2);
  }
  get computedEffects() {
    var _a;
    return ((_a = this._effectView) == null ? void 0 : _a.effects) ?? null;
  }
  get effect() {
    var _a;
    return ((_a = this._effectView) == null ? void 0 : _a.effect) ?? "";
  }
  set effect(e2) {
    (this._effectView || e2) && (this._effectView || (this._effectView = new h()), this._effectView.effect = e2, this.requestRender());
  }
  updateTransitionProperties(e2, t) {
    super.updateTransitionProperties(e2, t), this._effectView && (this._effectView.transitionStep(e2, t), this._effectView.transitioning && this.requestRender());
  }
  doRender(e2) {
    const t = this.createRenderParams(e2);
    this.renderChildren(t);
  }
  addChild(e2) {
    return this.addChildAt(e2, this.children.length);
  }
  addChildAt(e2, t = this.children.length) {
    if (!e2)
      return e2;
    if (this.contains(e2))
      return e2;
    this._needsSort = true;
    const i = e2.parent;
    return i && i !== this && i.removeChild(e2), t >= this.children.length ? this.children.push(e2) : this.children.splice(t, 0, e2), this._childrenSet.add(e2), e2.parent = this, e2.stage = this.stage, this !== this.stage && (e2.clips = this.clips), this.requestRender(), e2;
  }
  contains(e2) {
    return this._childrenSet.has(e2);
  }
  removeAllChildren() {
    this._childrenSet.clear(), this._needsSort = true;
    for (const e2 of this.children)
      this !== this.stage && (e2.clips = null), e2.stage = null, e2.parent = null;
    this.children.length = 0;
  }
  removeChild(e2) {
    return this.contains(e2) ? this.removeChildAt(this.children.indexOf(e2)) : e2;
  }
  removeChildAt(e2) {
    if (e2 < 0 || e2 >= this.children.length)
      return null;
    this._needsSort = true;
    const t = this.children.splice(e2, 1)[0];
    return this._childrenSet.delete(t), this !== this.stage && (t.clips = null), t.stage = null, t.parent = null, t;
  }
  sortChildren(e2) {
    this._needsSort && (this.children.sort(e2), this._needsSort = false);
  }
  _createTransforms() {
    return { dvs: e() };
  }
  onAttach() {
    super.onAttach();
    const e2 = this.stage;
    for (const t of this.children)
      t.stage = e2;
  }
  onDetach() {
    super.onDetach();
    for (const e2 of this.children)
      e2.stage = null;
  }
  renderChildren(e2) {
    for (const t of this.children)
      t.beforeRender(e2);
    for (const t of this.children)
      t.processRender(e2);
    for (const t of this.children)
      t.afterRender(e2);
  }
  createRenderParams(e2) {
    return { ...e2, blendMode: this.blendMode, effects: this.computedEffects, globalOpacity: e2.globalOpacity * this.computedOpacity, inFadeTransition: this.inFadeTransition };
  }
};

export {
  s
};
//# sourceMappingURL=chunk-ATJYWC6C.js.map
