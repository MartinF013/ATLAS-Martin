import {
  v as v2
} from "./chunk-DSCM4HDL.js";
import {
  o,
  v
} from "./chunk-YZNDHJDJ.js";
import {
  c,
  i,
  x
} from "./chunk-NWRK6QLX.js";
import {
  r
} from "./chunk-PKZEO23A.js";
import {
  n
} from "./chunk-AIRC226G.js";
import {
  j2 as j
} from "./chunk-YPZEGNLG.js";

// node_modules/@arcgis/core/views/interactive/support/viewUtils.js
function f(e, r2, o2, c2) {
  o2.projectToRenderScreen(e, S), o2.projectToRenderScreen(r2, T), o(c2, T, S), v(c2, c2);
}
function l(e, r2, o2, t, n2 = n()) {
  const c2 = r2.toXYZ(e);
  return c2[2] = v2(t, c2, r2.spatialReference, o2) || 0, t.renderCoordsHelper.toRenderCoords(c2, r2.spatialReference, n2), n2;
}
function m(e, r2, o2, t, n2 = n()) {
  const c2 = r(h, e);
  return c2[2] = v2(t, c2, r2, o2) || 0, t.renderCoordsHelper.toRenderCoords(c2, r2, n2), n2;
}
function R(r2, o2, t, n2) {
  return "2d" === n2.type ? n2.toScreen(o2.vectorToPoint(r2, C)) : (l(r2, o2, t, n2, h), n2.state.camera.projectToScreen(h, v3), c(v3[0], v3[1]));
}
function j2(e, r2, o2, t, n2, c2, s) {
  const i2 = o2.toXYZ(e), a = o2.toXYZ(r2);
  if ("absolute-height" !== t.mode) {
    const e2 = v2(n2, i2, o2.spatialReference, t), r3 = v2(n2, a, o2.spatialReference, t), c3 = (null == e2 ? r3 : null == r3 ? e2 : Math.min(e2, r3)) || 0;
    i2[2] = c3, a[2] = c3;
  }
  n2.renderCoordsHelper.toRenderCoords(i2, o2.spatialReference, c2), n2.renderCoordsHelper.toRenderCoords(a, o2.spatialReference, s);
}
var C = new j();
var h = n();
var S = x();
var T = x();
var v3 = i();
var H = i();

export {
  f,
  l,
  m,
  R,
  j2 as j
};
//# sourceMappingURL=chunk-A2XF5TZW.js.map
