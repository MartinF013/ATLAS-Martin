import {
  s
} from "./chunk-CVWDM4C7.js";
import {
  m,
  t
} from "./chunk-G5JBUC5N.js";

// node_modules/@arcgis/core/core/Message.js
function e(e2, s4) {
  return e2.replace(/\$\{([^\s\:\}]*)(?:\:([^\s\:\}]+))?\}/g, (e3, r) => {
    if ("" === r)
      return "$";
    const i = t(r, s4), n = null == i ? "" : i;
    if (void 0 === n)
      throw new Error(`could not find key "${r}" in template`);
    return n.toString();
  });
}
var s2 = class {
  constructor(t2, r, i) {
    this.name = t2, this.details = i, this.message = void 0, this instanceof s2 && (this.message = r && e(r, i) || "");
  }
  toString() {
    return "[" + this.name + "]: " + this.message;
  }
};

// node_modules/@arcgis/core/core/Error.js
var s3 = class extends s2 {
  constructor(e2, t2, r) {
    if (super(e2, t2, r), !(this instanceof s3))
      return new s3(e2, t2, r);
  }
  toJSON() {
    if (null != this.details)
      try {
        return { name: this.name, message: this.message, details: JSON.parse(JSON.stringify(this.details, (t2, r) => {
          if (r && "object" == typeof r && "function" == typeof r.toJSON)
            return r;
          try {
            return m(r);
          } catch (s4) {
            return "[object]";
          }
        })) };
      } catch (r) {
        throw s.getLogger("esri.core.Error").error(r), r;
      }
    return { name: this.name, message: this.message, details: this.details };
  }
  static fromJSON(e2) {
    return new s3(e2.name, e2.message, e2.details);
  }
};
s3.prototype.type = "error";

export {
  s2 as s,
  s3 as s2
};
//# sourceMappingURL=chunk-HFTNOKM2.js.map
