import {
  t
} from "./chunk-BNPOKP6A.js";

// node_modules/@arcgis/core/chunks/mat2d.js
function a(t2, a2) {
  return t2[0] = a2[0], t2[1] = a2[1], t2[2] = a2[2], t2[3] = a2[3], t2[4] = a2[4], t2[5] = a2[5], t2;
}
function n(t2) {
  return t2[0] = 1, t2[1] = 0, t2[2] = 0, t2[3] = 1, t2[4] = 0, t2[5] = 0, t2;
}
function s(t2, a2, n2, s2, r2, u2, o2) {
  return t2[0] = a2, t2[1] = n2, t2[2] = s2, t2[3] = r2, t2[4] = u2, t2[5] = o2, t2;
}
function r(t2, a2) {
  const n2 = a2[0], s2 = a2[1], r2 = a2[2], u2 = a2[3], o2 = a2[4], e2 = a2[5];
  let c2 = n2 * u2 - s2 * r2;
  return c2 ? (c2 = 1 / c2, t2[0] = u2 * c2, t2[1] = -s2 * c2, t2[2] = -r2 * c2, t2[3] = n2 * c2, t2[4] = (r2 * e2 - u2 * o2) * c2, t2[5] = (s2 * o2 - n2 * e2) * c2, t2) : null;
}
function u(t2) {
  return t2[0] * t2[3] - t2[1] * t2[2];
}
function o(t2, a2, n2) {
  const s2 = a2[0], r2 = a2[1], u2 = a2[2], o2 = a2[3], e2 = a2[4], c2 = a2[5], i2 = n2[0], h2 = n2[1], M2 = n2[2], f2 = n2[3], b2 = n2[4], l2 = n2[5];
  return t2[0] = s2 * i2 + u2 * h2, t2[1] = r2 * i2 + o2 * h2, t2[2] = s2 * M2 + u2 * f2, t2[3] = r2 * M2 + o2 * f2, t2[4] = s2 * b2 + u2 * l2 + e2, t2[5] = r2 * b2 + o2 * l2 + c2, t2;
}
function e(t2, a2, n2) {
  const s2 = a2[0], r2 = a2[1], u2 = a2[2], o2 = a2[3], e2 = a2[4], c2 = a2[5], i2 = Math.sin(n2), h2 = Math.cos(n2);
  return t2[0] = s2 * h2 + u2 * i2, t2[1] = r2 * h2 + o2 * i2, t2[2] = s2 * -i2 + u2 * h2, t2[3] = r2 * -i2 + o2 * h2, t2[4] = e2, t2[5] = c2, t2;
}
function c(t2, a2, n2) {
  const s2 = a2[0], r2 = a2[1], u2 = a2[2], o2 = a2[3], e2 = a2[4], c2 = a2[5], i2 = n2[0], h2 = n2[1];
  return t2[0] = s2 * i2, t2[1] = r2 * i2, t2[2] = u2 * h2, t2[3] = o2 * h2, t2[4] = e2, t2[5] = c2, t2;
}
function i(t2, a2, n2) {
  const s2 = a2[0], r2 = a2[1], u2 = a2[2], o2 = a2[3], e2 = a2[4], c2 = a2[5], i2 = n2[0], h2 = n2[1];
  return t2[0] = s2, t2[1] = r2, t2[2] = u2, t2[3] = o2, t2[4] = s2 * i2 + u2 * h2 + e2, t2[5] = r2 * i2 + o2 * h2 + c2, t2;
}
function h(t2, a2) {
  const n2 = Math.sin(a2), s2 = Math.cos(a2);
  return t2[0] = s2, t2[1] = n2, t2[2] = -n2, t2[3] = s2, t2[4] = 0, t2[5] = 0, t2;
}
function M(t2, a2) {
  return t2[0] = a2[0], t2[1] = 0, t2[2] = 0, t2[3] = a2[1], t2[4] = 0, t2[5] = 0, t2;
}
function f(t2, a2) {
  return t2[0] = 1, t2[1] = 0, t2[2] = 0, t2[3] = 1, t2[4] = a2[0], t2[5] = a2[1], t2;
}
function b(t2) {
  return "mat2d(" + t2[0] + ", " + t2[1] + ", " + t2[2] + ", " + t2[3] + ", " + t2[4] + ", " + t2[5] + ")";
}
function l(t2) {
  return Math.sqrt(t2[0] ** 2 + t2[1] ** 2 + t2[2] ** 2 + t2[3] ** 2 + t2[4] ** 2 + t2[5] ** 2 + 1);
}
function m(t2, a2, n2) {
  return t2[0] = a2[0] + n2[0], t2[1] = a2[1] + n2[1], t2[2] = a2[2] + n2[2], t2[3] = a2[3] + n2[3], t2[4] = a2[4] + n2[4], t2[5] = a2[5] + n2[5], t2;
}
function d(t2, a2, n2) {
  return t2[0] = a2[0] - n2[0], t2[1] = a2[1] - n2[1], t2[2] = a2[2] - n2[2], t2[3] = a2[3] - n2[3], t2[4] = a2[4] - n2[4], t2[5] = a2[5] - n2[5], t2;
}
function p(t2, a2, n2) {
  return t2[0] = a2[0] * n2, t2[1] = a2[1] * n2, t2[2] = a2[2] * n2, t2[3] = a2[3] * n2, t2[4] = a2[4] * n2, t2[5] = a2[5] * n2, t2;
}
function x(t2, a2, n2, s2) {
  return t2[0] = a2[0] + n2[0] * s2, t2[1] = a2[1] + n2[1] * s2, t2[2] = a2[2] + n2[2] * s2, t2[3] = a2[3] + n2[3] * s2, t2[4] = a2[4] + n2[4] * s2, t2[5] = a2[5] + n2[5] * s2, t2;
}
function y(t2, a2) {
  return t2[0] === a2[0] && t2[1] === a2[1] && t2[2] === a2[2] && t2[3] === a2[3] && t2[4] === a2[4] && t2[5] === a2[5];
}
function S(a2, n2) {
  const s2 = a2[0], r2 = a2[1], u2 = a2[2], o2 = a2[3], e2 = a2[4], c2 = a2[5], i2 = n2[0], h2 = n2[1], M2 = n2[2], f2 = n2[3], b2 = n2[4], l2 = n2[5];
  return Math.abs(s2 - i2) <= t * Math.max(1, Math.abs(s2), Math.abs(i2)) && Math.abs(r2 - h2) <= t * Math.max(1, Math.abs(r2), Math.abs(h2)) && Math.abs(u2 - M2) <= t * Math.max(1, Math.abs(u2), Math.abs(M2)) && Math.abs(o2 - f2) <= t * Math.max(1, Math.abs(o2), Math.abs(f2)) && Math.abs(e2 - b2) <= t * Math.max(1, Math.abs(e2), Math.abs(b2)) && Math.abs(c2 - l2) <= t * Math.max(1, Math.abs(c2), Math.abs(l2));
}
var g = o;
var j = d;
var q = Object.freeze(Object.defineProperty({ __proto__: null, copy: a, identity: n, set: s, invert: r, determinant: u, multiply: o, rotate: e, scale: c, translate: i, fromRotation: h, fromScaling: M, fromTranslation: f, str: b, frob: l, add: m, subtract: d, multiplyScalar: p, multiplyScalarAndAdd: x, exactEquals: y, equals: S, mul: g, sub: j }, Symbol.toStringTag, { value: "Module" }));

export {
  n,
  r,
  o,
  e,
  c,
  i,
  h,
  M,
  f
};
//# sourceMappingURL=chunk-ZUDEVIXR.js.map
