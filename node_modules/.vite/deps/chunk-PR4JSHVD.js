import {
  d,
  s as s2
} from "./chunk-7S6G3GM7.js";
import {
  I,
  me
} from "./chunk-5Z5455ZY.js";
import {
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  s2 as s
} from "./chunk-HFTNOKM2.js";
import {
  r
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/views/3d/layers/support/PopupSceneLayerView.js
var c = (c2) => {
  let u = class extends c2 {
    _validateFetchPopupFeatures(e2) {
      const { layer: s3 } = this, { popupEnabled: t } = s3;
      if (!t)
        return new s("scenelayerview3d:fetchPopupFeatures", "Popups are disabled", { layer: s3 });
      return s2(s3, e2) ? void 0 : new s("scenelayerview3d:fetchPopupFeatures", "Layer does not define a popup template", { layer: s3 });
    }
    async prepareFetchPopupFeatures(e2) {
    }
    async fetchPopupFeatures(e2, r2) {
      const t = this._validateFetchPopupFeatures(r2);
      if (t)
        throw t;
      const c3 = r(r2) ? r2.clientGraphics : null;
      if (!c3 || 0 === c3.length)
        return [];
      const u2 = "scene" === this.layer.type && r(this.layer.associatedLayer) ? this.layer.associatedLayer : this.layer, n2 = I(this.layer.fieldsIndex, await d(u2, s2(this.layer, r2)));
      await this.prepareFetchPopupFeatures(n2);
      const l = /* @__PURE__ */ new Set(), h = [], y = [];
      for (const s3 of c3)
        me(n2, s3, l) ? y.push(s3) : h.push(s3);
      return 0 === y.length ? h : this.whenGraphicAttributes(y, [...l]).catch(() => y).then((e3) => h.concat(e3));
    }
  };
  return u = e([n("esri.views.3d.layers.support.PopupSceneLayerView")], u), u;
};

export {
  c
};
//# sourceMappingURL=chunk-PR4JSHVD.js.map
