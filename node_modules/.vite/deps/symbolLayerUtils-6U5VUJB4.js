import {
  e
} from "./chunk-CC32E45Q.js";
import "./chunk-F5A4XAOJ.js";
import {
  c,
  t
} from "./chunk-HFDYAQZS.js";
import {
  F,
  a
} from "./chunk-TMBOFNWA.js";
import "./chunk-56RHM4A6.js";
import {
  U
} from "./chunk-65A2N4LL.js";
import "./chunk-GVELBHGI.js";
import "./chunk-5N3FSR63.js";
import "./chunk-BPZGJQOB.js";
import "./chunk-ZOKX6UGH.js";
import "./chunk-PKZEO23A.js";
import "./chunk-AIRC226G.js";
import "./chunk-BNPOKP6A.js";
import "./chunk-Q72YFZUL.js";
import "./chunk-YPZEGNLG.js";
import "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import "./chunk-XRL56EGK.js";
import "./chunk-ZIHDQYKE.js";
import "./chunk-GSRNZQFV.js";
import "./chunk-ICD7AJSY.js";
import "./chunk-2QOWZFCU.js";
import "./chunk-IVBXK6OP.js";
import "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import "./chunk-U3PSONS6.js";
import {
  s2 as s
} from "./chunk-HFTNOKM2.js";
import "./chunk-23NWA6WL.js";
import "./chunk-CVWDM4C7.js";
import "./chunk-G5JBUC5N.js";
import {
  r
} from "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/symbols/support/symbolLayerUtils.js
var c2 = a2();
function a2() {
  return new e(50);
}
function m() {
  c2 = a2();
}
function y(e2, o) {
  if ("icon" === e2.type)
    return l(e2, o);
  if ("object" === e2.type)
    return b(e2, o);
  throw new s("symbol3d:unsupported-symbol-layer", "computeLayerSize only works with symbol layers of type Icon and Object");
}
async function f(e2, o) {
  if ("icon" === e2.type)
    return p(e2, o);
  if ("object" === e2.type)
    return d(e2, o);
  throw new s("symbol3d:unsupported-symbol-layer", "computeLayerSize only works with symbol layers of type Icon and Object");
}
async function l(e2, o) {
  if (e2.resource.href)
    return h(e2.resource.href).then((e3) => [e3.width, e3.height]);
  if (e2.resource.primitive)
    return r(o) ? [o, o] : [256, 256];
  throw new s("symbol3d:invalid-symbol-layer", "symbol layers of type Icon must have either an href or a primitive resource");
}
function p(e2, r2) {
  return l(e2, r2).then((r3) => {
    if (null == e2.size)
      return r3;
    const o = r3[0] / r3[1];
    return o > 1 ? [e2.size, e2.size / o] : [e2.size * o, e2.size];
  });
}
function h(r2) {
  return U(r2, { responseType: "image" }).then((e2) => e2.data);
}
function b(e2, r2) {
  return w(e2, r2).then((e3) => F(e3));
}
async function d(e2, r2) {
  const o = await b(e2, r2);
  return t(o, e2);
}
async function w(e2, o) {
  if (!e2.isPrimitive) {
    const r2 = e2.resource.href, o2 = c2.get(r2);
    if (void 0 !== o2)
      return o2;
    const t2 = await import("./objectResourceUtils-6DRPS6JY.js"), n2 = await t2.fetch(r2, { disableTextures: true });
    return c2.put(r2, n2.referenceBoundingBox), n2.referenceBoundingBox;
  }
  let n = null;
  if (e2.resource && e2.resource.primitive && (n = a(c(e2.resource.primitive)), r(o)))
    for (let r2 = 0; r2 < n.length; r2++)
      n[r2] *= o;
  return n ? Promise.resolve(n) : Promise.reject(new s("symbol:invalid-resource", "The symbol does not have a valid resource"));
}
export {
  m as clearBoundingBoxCache,
  l as computeIconLayerResourceSize,
  y as computeLayerResourceSize,
  f as computeLayerSize,
  b as computeObjectLayerResourceSize
};
//# sourceMappingURL=symbolLayerUtils-6U5VUJB4.js.map
