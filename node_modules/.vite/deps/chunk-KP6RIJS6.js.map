{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderModules/IntegerDrawUniform.js", "../../@arcgis/core/views/3d/webgl-engine/collections/Component/Material/shader/ComponentData.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{Uniform as r}from\"./Uniform.js\";import{BindType as e}from\"../shaderTechnique/BindType.js\";class o extends r{constructor(r,o){super(r,\"int\",e.Draw,((e,s,i)=>e.setUniform1i(r,o(s,i))))}}export{o as IntegerDrawUniform};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{neverReached as o}from\"../../../../../../../core/compilerUtils.js\";import{packFloatRGBA as e}from\"../../../../../../../core/floatRGBA.js\";import{DecodeSymbolColor as r}from\"./DecodeSymbolColor.glsl.js\";import{RgbaFloatEncoding as n}from\"../../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{Float2Uniform as t}from\"../../../../core/shaderModules/Float2Uniform.js\";import{Float4DrawUniform as l}from\"../../../../core/shaderModules/Float4DrawUniform.js\";import{IntegerDrawUniform as a}from\"../../../../core/shaderModules/IntegerDrawUniform.js\";import{glsl as d}from\"../../../../core/shaderModules/interfaces.js\";import{Texture2DUniform as i}from\"../../../../core/shaderModules/Texture2DUniform.js\";import{VertexAttribute as c}from\"../../../../lib/VertexAttribute.js\";var m;!function(o){o[o.Uniform=0]=\"Uniform\",o[o.Varying=1]=\"Varying\",o[o.COUNT=2]=\"COUNT\"}(m||(m={}));const x=429496.7296;function s(o,r){e(o/x*.5+.5,r)}function C(e,r){switch(r.componentData){case m.Varying:return f(e);case m.Uniform:return v(e);case m.COUNT:return;default:o(r.componentData)}}function f(o){const{vertex:e,fragment:l}=o;e.include(n),e.uniforms.add([new i(\"componentColorTex\"),new t(\"componentColorTexInvDim\")]),o.attributes.add(c.COMPONENTINDEX,\"float\"),o.varyings.add(\"vExternalColorMixMode\",\"mediump float\"),o.varyings.add(\"vExternalColor\",\"vec4\"),o.include(r),e.constants.add(\"elevationScale\",\"float\",2*x),e.code.add(d`vec4 _readComponentColor() {\nfloat normalizedIndex = (componentIndex * 2.0 + 0.5) * componentColorTexInvDim.x;\nvec2 indexCoord = vec2(\nmod(normalizedIndex, 1.0),\n(floor(normalizedIndex) + 0.5) * componentColorTexInvDim.y\n);\nreturn texture2D(componentColorTex, indexCoord);\n}\nfloat readElevationOffset() {\nfloat normalizedIndex = (componentIndex * 2.0 + 1.5) * componentColorTexInvDim.x;\nvec2 indexCoord = vec2(\nmod(normalizedIndex, 1.0),\n(floor(normalizedIndex) + 0.5) * componentColorTexInvDim.y\n);\nreturn (rgba2float(texture2D(componentColorTex, indexCoord)) - 0.5) * elevationScale;\n}\nvec4 forwardExternalColor(out bool castShadows) {\nvec4 componentColor = _readComponentColor() * 255.0;\nfloat shadowFlag = mod(componentColor.b * 255.0, 2.0);\ncomponentColor.b -= shadowFlag;\ncastShadows = shadowFlag >= 1.0;\nint decodedColorMixMode;\nvExternalColor = decodeSymbolColor(componentColor, decodedColorMixMode) * 0.003921568627451;\nvExternalColorMixMode = float(decodedColorMixMode) + 0.5;\nreturn vExternalColor;\n}`),l.code.add(d`void readExternalColor(out vec4 externalColor, out int externalColorMixMode) {\nexternalColor = vExternalColor;\nexternalColorMixMode = int(vExternalColorMixMode);\n}`)}function v(o){const{vertex:e,fragment:r}=o;e.uniforms.add(new l(\"externalColor\",(o=>o.componentParameters.externalColor))),r.uniforms.add(new a(\"externalColorMixMode\",(o=>o.componentParameters.externalColorMixMode))),o.varyings.add(\"vExternalColor\",\"vec4\"),e.code.add(d`float readElevationOffset() {\nreturn 0.0;\n}\nvec4 forwardExternalColor(out bool castShadows) {\nvExternalColor = externalColor;\ncastShadows = true;\nreturn externalColor;\n}`),r.code.add(d`void readExternalColor(out vec4 color, out int colorMixMode) {\ncolor = vExternalColor;\ncolorMixMode = externalColorMixMode;\n}`)}export{C as ComponentData,m as ComponentDataType,x as MAX_ELEVATION_OFFSET,s as encodeElevationOffset};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIiG,IAAMA,KAAN,cAAgB,EAAC;AAAA,EAAC,YAAY,GAAEA,IAAE;AAAC,UAAM,GAAE,OAAM,EAAE,MAAM,CAACC,IAAEC,IAAEC,OAAIF,GAAE,aAAa,GAAED,GAAEE,IAAEC,EAAC,CAAC,CAAE;AAAA,EAAC;AAAC;;;ACAslB,IAAI;AAAE,CAAC,SAASC,IAAE;AAAC,EAAAA,GAAEA,GAAE,UAAQ,CAAC,IAAE,WAAUA,GAAEA,GAAE,UAAQ,CAAC,IAAE,WAAUA,GAAEA,GAAE,QAAM,CAAC,IAAE;AAAO,EAAE,MAAI,IAAE,CAAC,EAAE;AAAE,IAAM,IAAE;AAAY,SAASC,GAAED,IAAE,GAAE;AAAC,IAAEA,KAAE,IAAE,MAAG,KAAG,CAAC;AAAC;AAAC,SAAS,EAAEE,IAAE,GAAE;AAAC,UAAO,EAAE,eAAc;AAAA,IAAC,KAAK,EAAE;AAAQ,aAAO,EAAEA,EAAC;AAAA,IAAE,KAAK,EAAE;AAAQ,aAAO,EAAEA,EAAC;AAAA,IAAE,KAAK,EAAE;AAAM;AAAA,IAAO;AAAQ,QAAE,EAAE,aAAa;AAAA,EAAC;AAAC;AAAC,SAAS,EAAEF,IAAE;AAAC,QAAK,EAAC,QAAOE,IAAE,UAAS,EAAC,IAAEF;AAAE,EAAAE,GAAE,QAAQC,EAAC,GAAED,GAAE,SAAS,IAAI,CAAC,IAAI,EAAE,mBAAmB,GAAE,IAAIF,GAAE,yBAAyB,CAAC,CAAC,GAAEA,GAAE,WAAW,IAAI,EAAE,gBAAe,OAAO,GAAEA,GAAE,SAAS,IAAI,yBAAwB,eAAe,GAAEA,GAAE,SAAS,IAAI,kBAAiB,MAAM,GAAEA,GAAE,QAAQ,CAAC,GAAEE,GAAE,UAAU,IAAI,kBAAiB,SAAQ,IAAE,CAAC,GAAEA,GAAE,KAAK,IAAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAyBh5C,GAAE,EAAE,KAAK,IAAIA;AAAA;AAAA;AAAA,EAGb;AAAC;AAAC,SAAS,EAAEJ,IAAE;AAAC,QAAK,EAAC,QAAOE,IAAE,UAAS,EAAC,IAAEF;AAAE,EAAAE,GAAE,SAAS,IAAI,IAAIF,GAAE,iBAAiB,CAAAA,OAAGA,GAAE,oBAAoB,aAAc,CAAC,GAAE,EAAE,SAAS,IAAI,IAAIA,GAAE,wBAAwB,CAAAA,OAAGA,GAAE,oBAAoB,oBAAqB,CAAC,GAAEA,GAAE,SAAS,IAAI,kBAAiB,MAAM,GAAEE,GAAE,KAAK,IAAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO9Q,GAAE,EAAE,KAAK,IAAIA;AAAA;AAAA;AAAA,EAGb;AAAC;",
  "names": ["o", "e", "s", "i", "o", "s", "e", "a", "n"]
}
