import {
  l
} from "./chunk-Q3ZGS5K7.js";
import {
  m
} from "./chunk-X64NQ2GK.js";
import {
  E,
  G,
  I,
  J,
  L,
  w
} from "./chunk-LBBA3SFR.js";
import "./chunk-2KZBVPWA.js";
import "./chunk-WODSLTZT.js";
import "./chunk-JMZLJZMP.js";
import "./chunk-GRILTTJT.js";
import "./chunk-2HDG7SIE.js";
import "./chunk-Y7FSCP47.js";
import "./chunk-DMJWTK32.js";
import "./chunk-CHNDTVQJ.js";
import "./chunk-VLCG72SW.js";
import "./chunk-Q72YFZUL.js";
import "./chunk-YPZEGNLG.js";
import "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import "./chunk-XRL56EGK.js";
import "./chunk-ZIHDQYKE.js";
import "./chunk-GSRNZQFV.js";
import "./chunk-ICD7AJSY.js";
import "./chunk-2QOWZFCU.js";
import "./chunk-IVBXK6OP.js";
import "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import "./chunk-U3PSONS6.js";
import "./chunk-HFTNOKM2.js";
import "./chunk-23NWA6WL.js";
import "./chunk-CVWDM4C7.js";
import "./chunk-G5JBUC5N.js";
import "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/arcade/functions/featuresetstats.js
async function o(n, e, o2, f2, l2, d) {
  if (1 === f2.length) {
    if (L(f2[0]))
      return l(n, f2[0], I(f2[1], -1));
    if (E(f2[0]))
      return l(n, f2[0].toArray(), I(f2[1], -1));
  } else if (2 === f2.length) {
    if (L(f2[0]))
      return l(n, f2[0], I(f2[1], -1));
    if (E(f2[0]))
      return l(n, f2[0].toArray(), I(f2[1], -1));
    if (J(f2[0])) {
      const t = await f2[0].load(), r = await s(m.create(f2[1], t.getFieldsIndex()), d, l2);
      return f2[0].calculateStatistic(n, r, I(f2[2], 1e3), e.abortSignal);
    }
  } else if (3 === f2.length && J(f2[0])) {
    const t = await f2[0].load(), r = await s(m.create(f2[1], t.getFieldsIndex()), d, l2);
    return f2[0].calculateStatistic(n, r, I(f2[2], 1e3), e.abortSignal);
  }
  return l(n, f2, -1);
}
async function s(n, t, r) {
  const e = n.getVariables();
  if (e.length > 0) {
    const a = [];
    for (let n2 = 0; n2 < e.length; n2++) {
      const i2 = { name: e[n2] };
      a.push(await t.evaluateIdentifier(r, i2));
    }
    const i = {};
    for (let n2 = 0; n2 < e.length; n2++)
      i[e[n2]] = a[n2];
    return n.parameters = i, n;
  }
  return n;
}
function f(i) {
  "async" === i.mode && (i.functions.stdev = function(n, t) {
    return i.standardFunctionAsync(n, t, function(t2, r, e) {
      return o("stdev", t2, r, e, n, i);
    });
  }, i.functions.variance = function(n, t) {
    return i.standardFunctionAsync(n, t, function(t2, r, e) {
      return o("variance", t2, r, e, n, i);
    });
  }, i.functions.average = function(n, t) {
    return i.standardFunctionAsync(n, t, function(t2, r, e) {
      return o("mean", t2, r, e, n, i);
    });
  }, i.functions.mean = function(n, t) {
    return i.standardFunctionAsync(n, t, function(t2, r, e) {
      return o("mean", t2, r, e, n, i);
    });
  }, i.functions.sum = function(n, t) {
    return i.standardFunctionAsync(n, t, function(t2, r, e) {
      return o("sum", t2, r, e, n, i);
    });
  }, i.functions.min = function(n, t) {
    return i.standardFunctionAsync(n, t, function(t2, r, e) {
      return o("min", t2, r, e, n, i);
    });
  }, i.functions.max = function(n, t) {
    return i.standardFunctionAsync(n, t, function(t2, r, e) {
      return o("max", t2, r, e, n, i);
    });
  }, i.functions.count = function(u, c) {
    return i.standardFunctionAsync(u, c, function(i2, u2, c2) {
      if (G(c2, 1, 1), J(c2[0]))
        return c2[0].count(i2.abortSignal);
      if (L(c2[0]) || w(c2[0]))
        return c2[0].length;
      if (E(c2[0]))
        return c2[0].length();
      throw new Error("Invalid Parameters for Count");
    });
  });
}
export {
  f as registerFunctions
};
//# sourceMappingURL=featuresetstats-LXQWWQBQ.js.map
