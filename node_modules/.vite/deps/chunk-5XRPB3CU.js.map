{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/layers/support/DefinitionExpressionSceneLayerView.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as r}from\"../../../../chunks/tslib.es6.js\";import e from\"../../../../core/Logger.js\";import{property as i}from\"../../../../core/accessorSupport/decorators/property.js\";import\"../../../../core/arrayUtils.js\";import\"../../../../core/has.js\";import\"../../../../core/accessorSupport/ensureType.js\";import{subclass as s}from\"../../../../core/accessorSupport/decorators/subclass.js\";import{WhereClause as o}from\"../../../../core/sql/WhereClause.js\";import{findFieldsCaseInsensitive as n}from\"../i3s/I3SUtil.js\";const t=e.getLogger(\"esri.views.3d.layers.support.DefinitionExpressionSceneLayerView\"),p=e=>{let p=class extends e{constructor(){super(...arguments),this._definitionExpressionErrors=0,this._maxDefinitionExpressionErrors=20,this.logError=r=>{this._definitionExpressionErrors<this._maxDefinitionExpressionErrors&&t.error(\"Error while evaluating definitionExpression: \"+r),this._definitionExpressionErrors++,this._definitionExpressionErrors===this._maxDefinitionExpressionErrors&&t.error(\"Further errors are ignored\")}}get parsedDefinitionExpression(){if(!this.i3slayer||!this.i3slayer.definitionExpression)return null;try{const r=o.create(this.i3slayer.definitionExpression,this.i3slayer.fieldsIndex);if(!r.isStandardized)return t.error(\"definitionExpression is using non standard function\"),null;const e=[],i=r.fieldNames;return n(i,this.i3slayer.fields,{missingFields:e}),e.length>0?(t.error(`definitionExpression references unknown fields: ${e.join(\", \")}`),null):(this._definitionExpressionErrors=0,r)}catch(r){return t.error(\"Failed to parse definitionExpression: \"+r),null}}get definitionExpressionFields(){return this.parsedDefinitionExpression?this.parsedDefinitionExpression.fieldNames:null}_evaluateClause(r,e){try{return r.testFeature(e)}catch(i){return this.logError(i),!1}}_addDefinitionExpressionToQuery(r){if(!this.parsedDefinitionExpression)return r;const e=this.i3slayer.definitionExpression,i=r.clone();return i.where?i.where=`(${e}) AND (${i.where})`:i.where=e,i}};return r([i()],p.prototype,\"i3slayer\",void 0),r([i({readOnly:!0})],p.prototype,\"parsedDefinitionExpression\",null),r([i({readOnly:!0})],p.prototype,\"definitionExpressionFields\",null),p=r([s(\"esri.views.3d.layers.support.DefinitionExpressionSceneLayerView\")],p),p};export{p as DefinitionExpressionSceneLayerView};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAIkgB,IAAM,IAAE,EAAE,UAAU,iEAAiE;AAArF,IAAuF,IAAE,CAAAA,OAAG;AAAC,MAAIC,KAAE,cAAcD,GAAC;AAAA,IAAC,cAAa;AAAC,YAAM,GAAG,SAAS,GAAE,KAAK,8BAA4B,GAAE,KAAK,iCAA+B,IAAG,KAAK,WAAS,OAAG;AAAC,aAAK,8BAA4B,KAAK,kCAAgC,EAAE,MAAM,kDAAgD,CAAC,GAAE,KAAK,+BAA8B,KAAK,gCAA8B,KAAK,kCAAgC,EAAE,MAAM,4BAA4B;AAAA,MAAC;AAAA,IAAC;AAAA,IAAC,IAAI,6BAA4B;AAAC,UAAG,CAAC,KAAK,YAAU,CAAC,KAAK,SAAS;AAAqB,eAAO;AAAK,UAAG;AAAC,cAAM,IAAE,EAAE,OAAO,KAAK,SAAS,sBAAqB,KAAK,SAAS,WAAW;AAAE,YAAG,CAAC,EAAE;AAAe,iBAAO,EAAE,MAAM,qDAAqD,GAAE;AAAK,cAAMA,KAAE,CAAC,GAAE,IAAE,EAAE;AAAW,eAAO,GAAE,GAAE,KAAK,SAAS,QAAO,EAAC,eAAcA,GAAC,CAAC,GAAEA,GAAE,SAAO,KAAG,EAAE,MAAM,mDAAmDA,GAAE,KAAK,IAAI,GAAG,GAAE,SAAO,KAAK,8BAA4B,GAAE;AAAA,MAAE,SAAO,GAAN;AAAS,eAAO,EAAE,MAAM,2CAAyC,CAAC,GAAE;AAAA,MAAI;AAAA,IAAC;AAAA,IAAC,IAAI,6BAA4B;AAAC,aAAO,KAAK,6BAA2B,KAAK,2BAA2B,aAAW;AAAA,IAAI;AAAA,IAAC,gBAAgB,GAAEA,IAAE;AAAC,UAAG;AAAC,eAAO,EAAE,YAAYA,EAAC;AAAA,MAAC,SAAO,GAAN;AAAS,eAAO,KAAK,SAAS,CAAC,GAAE;AAAA,MAAE;AAAA,IAAC;AAAA,IAAC,gCAAgC,GAAE;AAAC,UAAG,CAAC,KAAK;AAA2B,eAAO;AAAE,YAAMA,KAAE,KAAK,SAAS,sBAAqB,IAAE,EAAE,MAAM;AAAE,aAAO,EAAE,QAAM,EAAE,QAAM,IAAIA,YAAW,EAAE,WAAS,EAAE,QAAMA,IAAE;AAAA,IAAC;AAAA,EAAC;AAAE,SAAO,EAAE,CAAC,EAAE,CAAC,GAAEC,GAAE,WAAU,YAAW,MAAM,GAAE,EAAE,CAAC,EAAE,EAAC,UAAS,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,8BAA6B,IAAI,GAAE,EAAE,CAAC,EAAE,EAAC,UAAS,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,8BAA6B,IAAI,GAAEA,KAAE,EAAE,CAAC,EAAE,iEAAiE,CAAC,GAAEA,EAAC,GAAEA;AAAC;",
  "names": ["e", "p"]
}
