import {
  St,
  W
} from "./chunk-5N3FSR63.js";
import {
  a
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/support/revision.js
var e = "20220622";
var a2 = "5920122e73c5174847b703e4af6a3170e28edfa6";

// node_modules/@arcgis/core/kernel.js
var s = "4.24";
var a3 = { async request(e2, r) {
  var _a;
  const { default: s2 } = await import("./request-VWKJHTPX.js"), a4 = e2.options, n2 = a4.responseType;
  a4.signal = r == null ? void 0 : r.signal, a4.responseType = "native" === n2 || "native-request-init" === n2 ? "native-request-init" : ["blob", "json", "text"].includes(n2) && ((_a = W(e2.url)) == null ? void 0 : _a.after) ? n2 : "array-buffer";
  const o2 = await s2(e2.url, a4), i2 = { data: o2.data, ssl: o2.ssl };
  switch (o2.requestOptions.responseType) {
    case "native-request-init":
      return delete i2.data.signal, i2;
    case "blob":
      i2.data = await i2.data.arrayBuffer();
      break;
    case "json":
      i2.data = new TextEncoder().encode(JSON.stringify(i2.data)).buffer;
      break;
    case "text":
      i2.data = new TextEncoder().encode(i2.data).buffer;
  }
  return { result: i2, transferList: [i2.data] };
} };
var n;
function o(e2) {
  n = e2;
}
function i(e2) {
  const t = n && n.findCredential(e2);
  return t && t.token ? St(e2, "token", t.token) : e2;
}
a("host-webworker") || (a("edge") || a("trident")) && console.warn("Deprecated browser - see http://esriurl.com/oldbrowser");

export {
  e,
  a2 as a,
  s,
  a3 as a2,
  n,
  o,
  i
};
//# sourceMappingURL=chunk-GVELBHGI.js.map
