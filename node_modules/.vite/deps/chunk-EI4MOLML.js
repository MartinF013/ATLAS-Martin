import {
  a,
  a2,
  c
} from "./chunk-4SBWV5M2.js";
import {
  r as r2
} from "./chunk-2HDG7SIE.js";
import {
  b,
  g
} from "./chunk-5Z5455ZY.js";
import {
  j
} from "./chunk-TT2HIXWQ.js";
import {
  L,
  S as S2,
  m as m2,
  u
} from "./chunk-OOZMA7DN.js";
import {
  o,
  s
} from "./chunk-DMJWTK32.js";
import {
  s as s3
} from "./chunk-XRL56EGK.js";
import {
  r
} from "./chunk-ZIHDQYKE.js";
import {
  o as o2
} from "./chunk-GSRNZQFV.js";
import {
  l
} from "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n,
  y3 as y
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  k
} from "./chunk-U3PSONS6.js";
import {
  N,
  S
} from "./chunk-23NWA6WL.js";
import {
  s as s2
} from "./chunk-CVWDM4C7.js";
import {
  m
} from "./chunk-G5JBUC5N.js";

// node_modules/@arcgis/core/popup/content/Content.js
var e2 = class extends l {
  constructor(r4) {
    super(r4), this.type = null;
  }
};
e([d({ type: ["attachments", "custom", "fields", "media", "text", "expression"], readOnly: true, json: { read: false, write: true } })], e2.prototype, "type", void 0), e2 = e([n("esri.popup.content.Content")], e2);
var p = e2;

// node_modules/@arcgis/core/popup/content/AttachmentsContent.js
var s4;
var p2 = s4 = class extends p {
  constructor(t2) {
    super(t2), this.description = null, this.displayType = "auto", this.title = null, this.type = "attachments";
  }
  clone() {
    return new s4({ description: this.description, displayType: this.displayType, title: this.title });
  }
};
e([d({ type: String, json: { write: true } })], p2.prototype, "description", void 0), e([d({ type: ["auto", "preview", "list"], json: { write: true } })], p2.prototype, "displayType", void 0), e([d({ type: String, json: { write: true } })], p2.prototype, "title", void 0), e([d({ type: ["attachments"], readOnly: true, json: { read: false, write: true } })], p2.prototype, "type", void 0), p2 = s4 = e([n("esri.popup.content.AttachmentsContent")], p2);
var i = p2;

// node_modules/@arcgis/core/popup/content/CustomContent.js
var p3;
var c2 = p3 = class extends p {
  constructor(o4) {
    super(o4), this.creator = null, this.destroyer = null, this.outFields = null, this.type = "custom";
  }
  clone() {
    return new p3({ creator: this.creator, destroyer: this.destroyer, outFields: Array.isArray(this.outFields) ? m(this.outFields) : null });
  }
};
e([d()], c2.prototype, "creator", void 0), e([d()], c2.prototype, "destroyer", void 0), e([d()], c2.prototype, "outFields", void 0), e([d({ type: ["custom"], readOnly: true })], c2.prototype, "type", void 0), c2 = p3 = e([n("esri.popup.content.CustomContent")], c2);
var i2 = c2;

// node_modules/@arcgis/core/popup/ElementExpressionInfo.js
var s5;
var p4 = s5 = class extends l {
  constructor(r4) {
    super(r4), this.title = null, this.expression = null, this.returnType = "dictionary";
  }
  clone() {
    return new s5({ title: this.title, expression: this.expression });
  }
};
e([d({ type: String, json: { write: true } })], p4.prototype, "title", void 0), e([d({ type: String, json: { write: true } })], p4.prototype, "expression", void 0), e([d({ type: ["dictionary"], readOnly: true, json: { read: false, write: true } })], p4.prototype, "returnType", void 0), p4 = s5 = e([n("esri.popup.ElementExpressionInfo")], p4);
var i3 = p4;

// node_modules/@arcgis/core/popup/content/ExpressionContent.js
var p5;
var n2 = p5 = class extends p {
  constructor(o4) {
    super(o4), this.expressionInfo = null, this.type = "expression";
  }
  clone() {
    var _a;
    return new p5({ expressionInfo: (_a = this.expressionInfo) == null ? void 0 : _a.clone() });
  }
};
e([d({ type: i3, json: { write: true } })], n2.prototype, "expressionInfo", void 0), e([d({ type: ["expression"], readOnly: true, json: { read: false, write: true } })], n2.prototype, "type", void 0), n2 = p5 = e([n("esri.popup.content.ExpressionContent")], n2);
var i4 = n2;

// node_modules/@arcgis/core/core/date.js
var a3 = o()({ shortDate: "short-date", shortDateShortTime: "short-date-short-time", shortDateShortTime24: "short-date-short-time-24", shortDateLongTime: "short-date-long-time", shortDateLongTime24: "short-date-long-time-24", shortDateLE: "short-date-le", shortDateLEShortTime: "short-date-le-short-time", shortDateLEShortTime24: "short-date-le-short-time-24", shortDateLELongTime: "short-date-le-long-time", shortDateLELongTime24: "short-date-le-long-time-24", longMonthDayYear: "long-month-day-year", longMonthDayYearShortTime: "long-month-day-year-short-time", longMonthDayYearShortTime24: "long-month-day-year-short-time-24", longMonthDayYearLongTime: "long-month-day-year-long-time", longMonthDayYearLongTime24: "long-month-day-year-long-time-24", dayShortMonthYear: "day-short-month-year", dayShortMonthYearShortTime: "day-short-month-year-short-time", dayShortMonthYearShortTime24: "day-short-month-year-short-time-24", dayShortMonthYearLongTime: "day-short-month-year-long-time", dayShortMonthYearLongTime24: "day-short-month-year-long-time-24", longDate: "long-date", longDateShortTime: "long-date-short-time", longDateShortTime24: "long-date-short-time-24", longDateLongTime: "long-date-long-time", longDateLongTime24: "long-date-long-time-24", longMonthYear: "long-month-year", shortMonthYear: "short-month-year", year: "year" });
var o3 = a3.toJSON.bind(a3);
var r3 = a3.fromJSON.bind(a3);

// node_modules/@arcgis/core/popup/support/FieldInfoFormat.js
var d2;
var l2 = d2 = class extends l {
  constructor(t2) {
    super(t2), this.dateFormat = null, this.dateTimeFormatOptions = null, this.digitSeparator = false, this.places = null;
  }
  clone() {
    return new d2({ dateFormat: this.dateFormat, digitSeparator: this.digitSeparator, places: this.places });
  }
  format(t2) {
    return this.dateFormat ? L(t2, { ...S2(this.dateFormat), ...this.dateTimeFormatOptions }) : m2(t2, u(this));
  }
  formatRasterPixelValue(t2) {
    let r4, o4;
    return t2.trim().includes(",") ? (r4 = ",", o4 = r4 + " ", this._formatDelimitedString(t2, r4, o4, this)) : t2.trim().includes(";") ? (r4 = ";", o4 = r4 + " ", this._formatDelimitedString(t2, r4, o4, this)) : t2.trim().includes(" ") ? (r4 = o4 = " ", this._formatDelimitedString(t2, r4, o4, this)) : this.format(Number(t2));
  }
  _formatDelimitedString(t2, r4, o4, e5) {
    return t2 && r4 && o4 && e5 ? t2.trim().split(r4).map((t3) => this.format(Number(t3))).join(o4) : t2;
  }
};
e([r2(a3)], l2.prototype, "dateFormat", void 0), e([d({ type: Object, json: { read: false } })], l2.prototype, "dateTimeFormatOptions", void 0), e([d({ type: Boolean, json: { write: true } })], l2.prototype, "digitSeparator", void 0), e([d({ type: S, json: { write: true } })], l2.prototype, "places", void 0), l2 = d2 = e([n("esri.popup.support.FieldInfoFormat")], l2);
var u2 = l2;

// node_modules/@arcgis/core/popup/FieldInfo.js
var a4;
var n3 = a4 = class extends l {
  constructor(t2) {
    super(t2), this.fieldName = null, this.format = null, this.isEditable = false, this.label = null, this.stringFieldOption = "text-box", this.statisticType = null, this.tooltip = null, this.visible = true;
  }
  clone() {
    return new a4({ fieldName: this.fieldName, format: this.format ? m(this.format) : null, isEditable: this.isEditable, label: this.label, stringFieldOption: this.stringFieldOption, statisticType: this.statisticType, tooltip: this.tooltip, visible: this.visible });
  }
};
e([d({ type: String, json: { write: true } })], n3.prototype, "fieldName", void 0), e([d({ type: u2, json: { write: true } })], n3.prototype, "format", void 0), e([d({ type: Boolean, json: { write: true, default: false } })], n3.prototype, "isEditable", void 0), e([d({ type: String, json: { write: true } })], n3.prototype, "label", void 0), e([r2(new s({ richtext: "rich-text", textarea: "text-area", textbox: "text-box" }), { default: "text-box" })], n3.prototype, "stringFieldOption", void 0), e([d({ type: ["count", "sum", "min", "max", "avg", "stddev", "var"], json: { write: true } })], n3.prototype, "statisticType", void 0), e([d({ type: String, json: { write: true } })], n3.prototype, "tooltip", void 0), e([d({ type: Boolean, json: { write: true } })], n3.prototype, "visible", void 0), n3 = a4 = e([n("esri.popup.FieldInfo")], n3);
var c3 = n3;

// node_modules/@arcgis/core/popup/content/FieldsContent.js
var n4;
var l3 = n4 = class extends p {
  constructor(t2) {
    super(t2), this.attributes = null, this.description = null, this.fieldInfos = null, this.title = null, this.type = "fields";
  }
  writeFieldInfos(t2, o4) {
    o4.fieldInfos = t2 && t2.map((t3) => t3.toJSON());
  }
  clone() {
    return new n4(m({ attributes: this.attributes, description: this.description, fieldInfos: this.fieldInfos, title: this.title }));
  }
};
e([d({ type: Object, json: { write: true } })], l3.prototype, "attributes", void 0), e([d({ type: String, json: { write: true } })], l3.prototype, "description", void 0), e([d({ type: [c3] })], l3.prototype, "fieldInfos", void 0), e([r("fieldInfos")], l3.prototype, "writeFieldInfos", null), e([d({ type: String, json: { write: true } })], l3.prototype, "title", void 0), e([d({ type: ["fields"], readOnly: true, json: { read: false, write: true } })], l3.prototype, "type", void 0), l3 = n4 = e([n("esri.popup.content.FieldsContent")], l3);
var c4 = l3;

// node_modules/@arcgis/core/popup/content/mixins/MediaInfo.js
var s6 = class extends l {
  constructor(t2) {
    super(t2), this.altText = null, this.caption = "", this.title = "", this.type = null;
  }
};
e([d({ type: String, json: { write: true } })], s6.prototype, "altText", void 0), e([d({ type: String, json: { write: true } })], s6.prototype, "caption", void 0), e([d({ type: String, json: { write: true } })], s6.prototype, "title", void 0), e([d({ type: ["image", "bar-chart", "column-chart", "line-chart", "pie-chart"], readOnly: true, json: { read: false, write: true } })], s6.prototype, "type", void 0), s6 = e([n("esri.popup.content.mixins.MediaInfo")], s6);
var p6 = s6;

// node_modules/@arcgis/core/popup/content/support/ChartMediaInfoValueSeries.js
var s7;
var p7 = s7 = class extends y {
  constructor(o4) {
    super(o4), this.fieldName = null, this.tooltip = null, this.value = null;
  }
  clone() {
    return new s7({ fieldName: this.fieldName, tooltip: this.tooltip, value: this.value });
  }
};
e([d()], p7.prototype, "fieldName", void 0), e([d()], p7.prototype, "tooltip", void 0), e([d()], p7.prototype, "value", void 0), p7 = s7 = e([n("esri.popup.content.support.ChartMediaInfoValueSeries")], p7);
var i5 = p7;

// node_modules/@arcgis/core/popup/content/support/ChartMediaInfoValue.js
var p8;
var l4 = p8 = class extends l {
  constructor(o4) {
    super(o4), this.fields = [], this.normalizeField = null, this.series = [], this.tooltipField = null;
  }
  clone() {
    return new p8({ fields: m(this.fields), normalizeField: this.normalizeField, tooltipField: this.tooltipField });
  }
};
e([d({ type: [String], json: { write: true } })], l4.prototype, "fields", void 0), e([d({ type: String, json: { write: true } })], l4.prototype, "normalizeField", void 0), e([d({ type: [i5], json: { read: false } })], l4.prototype, "series", void 0), e([d({ type: String, json: { write: true } })], l4.prototype, "tooltipField", void 0), l4 = p8 = e([n("esri.popup.content.support.ChartMediaInfoValue")], l4);
var n5 = l4;

// node_modules/@arcgis/core/popup/content/mixins/ChartMediaInfo.js
var p9 = class extends p6 {
  constructor(r4) {
    super(r4), this.type = null, this.value = null;
  }
};
e([d({ type: ["bar-chart", "column-chart", "line-chart", "pie-chart"], readOnly: true, json: { read: false, write: true } })], p9.prototype, "type", void 0), e([d({ type: n5, json: { write: true } })], p9.prototype, "value", void 0), p9 = e([n("esri.popup.content.mixins.ChartMediaInfo")], p9);
var a5 = p9;

// node_modules/@arcgis/core/popup/content/support/chartMediaInfoUtils.js
var c5 = o()({ barchart: "bar-chart", columnchart: "column-chart", linechart: "line-chart", piechart: "pie-chart" });

// node_modules/@arcgis/core/popup/content/BarChartMediaInfo.js
var a6;
var p10 = a6 = class extends a5 {
  constructor(t2) {
    super(t2), this.type = "bar-chart";
  }
  clone() {
    return new a6({ altText: this.altText, title: this.title, caption: this.caption, value: this.value ? this.value.clone() : null });
  }
};
e([d({ type: ["bar-chart"], readOnly: true, json: { type: ["barchart"], read: false, write: c5.write } })], p10.prototype, "type", void 0), p10 = a6 = e([n("esri.popup.content.BarChartMediaInfo")], p10);
var i6 = p10;

// node_modules/@arcgis/core/popup/content/ColumnChartMediaInfo.js
var a7;
var p11 = a7 = class extends a5 {
  constructor(t2) {
    super(t2), this.type = "column-chart";
  }
  clone() {
    return new a7({ altText: this.altText, title: this.title, caption: this.caption, value: this.value ? this.value.clone() : null });
  }
};
e([d({ type: ["column-chart"], readOnly: true, json: { type: ["columnchart"], read: false, write: c5.write } })], p11.prototype, "type", void 0), p11 = a7 = e([n("esri.popup.content.ColumnChartMediaInfo")], p11);
var c6 = p11;

// node_modules/@arcgis/core/popup/content/support/ImageMediaInfoValue.js
var e3;
var p12 = e3 = class extends l {
  constructor(r4) {
    super(r4), this.linkURL = null, this.sourceURL = null;
  }
  clone() {
    return new e3({ linkURL: this.linkURL, sourceURL: this.sourceURL });
  }
};
e([d({ type: String, json: { write: true } })], p12.prototype, "linkURL", void 0), e([d({ type: String, json: { write: true } })], p12.prototype, "sourceURL", void 0), p12 = e3 = e([n("esri.popup.content.support.ImageMediaInfoValue")], p12);
var c7 = p12;

// node_modules/@arcgis/core/popup/content/ImageMediaInfo.js
var a8;
var i7 = a8 = class extends p6 {
  constructor(e5) {
    super(e5), this.refreshInterval = null, this.type = "image", this.value = null;
  }
  clone() {
    return new a8({ altText: this.altText, title: this.title, caption: this.caption, refreshInterval: this.refreshInterval, value: this.value ? this.value.clone() : null });
  }
};
e([d({ type: Number, json: { write: true } })], i7.prototype, "refreshInterval", void 0), e([d({ type: ["image"], readOnly: true, json: { read: false, write: true } })], i7.prototype, "type", void 0), e([d({ type: c7, json: { write: true } })], i7.prototype, "value", void 0), i7 = a8 = e([n("esri.popup.content.ImageMediaInfo")], i7);
var p13 = i7;

// node_modules/@arcgis/core/popup/content/LineChartMediaInfo.js
var i8;
var a9 = i8 = class extends a5 {
  constructor(t2) {
    super(t2), this.type = "line-chart";
  }
  clone() {
    return new i8({ altText: this.altText, title: this.title, caption: this.caption, value: this.value ? this.value.clone() : null });
  }
};
e([d({ type: ["line-chart"], readOnly: true, json: { type: ["linechart"], read: false, write: c5.write } })], a9.prototype, "type", void 0), a9 = i8 = e([n("esri.popup.content.LineChartMediaInfo")], a9);
var p14 = a9;

// node_modules/@arcgis/core/popup/content/PieChartMediaInfo.js
var p15;
var i9 = p15 = class extends a5 {
  constructor(t2) {
    super(t2), this.type = "pie-chart";
  }
  clone() {
    return new p15({ altText: this.altText, title: this.title, caption: this.caption, value: this.value ? this.value.clone() : null });
  }
};
e([d({ type: ["pie-chart"], readOnly: true, json: { type: ["piechart"], read: false, write: c5.write } })], i9.prototype, "type", void 0), i9 = p15 = e([n("esri.popup.content.PieChartMediaInfo")], i9);
var a10 = i9;

// node_modules/@arcgis/core/popup/content/support/mediaInfoTypes.js
var m3 = { base: p6, key: "type", defaultKeyValue: "image", typeMap: { "bar-chart": i6, "column-chart": c6, "line-chart": p14, "pie-chart": a10, image: p13 } };

// node_modules/@arcgis/core/popup/content/MediaContent.js
var l5;
var u3 = l5 = class extends p {
  constructor(t2) {
    super(t2), this.activeMediaInfoIndex = null, this.attributes = null, this.description = null, this.mediaInfos = null, this.title = null, this.type = "media";
  }
  readMediaInfos(t2) {
    return t2 && t2.map((t3) => "image" === t3.type ? p13.fromJSON(t3) : "barchart" === t3.type ? i6.fromJSON(t3) : "columnchart" === t3.type ? c6.fromJSON(t3) : "linechart" === t3.type ? p14.fromJSON(t3) : "piechart" === t3.type ? a10.fromJSON(t3) : void 0).filter(Boolean);
  }
  writeMediaInfos(t2, o4) {
    o4.mediaInfos = t2 && t2.map((t3) => t3.toJSON());
  }
  clone() {
    return new l5(m({ activeMediaInfoIndex: this.activeMediaInfoIndex, attributes: this.attributes, description: this.description, mediaInfos: this.mediaInfos, title: this.title }));
  }
};
e([d()], u3.prototype, "activeMediaInfoIndex", void 0), e([d({ type: Object, json: { write: true } })], u3.prototype, "attributes", void 0), e([d({ type: String, json: { write: true } })], u3.prototype, "description", void 0), e([d({ types: [m3] })], u3.prototype, "mediaInfos", void 0), e([o2("mediaInfos")], u3.prototype, "readMediaInfos", null), e([r("mediaInfos")], u3.prototype, "writeMediaInfos", null), e([d({ type: String, json: { write: true } })], u3.prototype, "title", void 0), e([d({ type: ["media"], readOnly: true, json: { read: false, write: true } })], u3.prototype, "type", void 0), u3 = l5 = e([n("esri.popup.content.MediaContent")], u3);
var I = u3;

// node_modules/@arcgis/core/popup/content/TextContent.js
var s8;
var p16 = s8 = class extends p {
  constructor(t2) {
    super(t2), this.text = null, this.type = "text";
  }
  clone() {
    return new s8({ text: this.text });
  }
};
e([d({ type: String, json: { write: true } })], p16.prototype, "text", void 0), e([d({ type: ["text"], readOnly: true, json: { read: false, write: true } })], p16.prototype, "type", void 0), p16 = s8 = e([n("esri.popup.content.TextContent")], p16);
var c8 = p16;

// node_modules/@arcgis/core/popup/content.js
var m4 = { base: null, key: "type", typeMap: { attachment: i, media: I, text: c8, expression: i4, field: c4 } };

// node_modules/@arcgis/core/popup/ExpressionInfo.js
var s9;
var p17 = s9 = class extends l {
  constructor(r4) {
    super(r4), this.name = null, this.title = null, this.expression = null, this.returnType = null;
  }
  clone() {
    return new s9({ name: this.name, title: this.title, expression: this.expression, returnType: this.returnType });
  }
};
e([d({ type: String, json: { write: true } })], p17.prototype, "name", void 0), e([d({ type: String, json: { write: true } })], p17.prototype, "title", void 0), e([d({ type: String, json: { write: true } })], p17.prototype, "expression", void 0), e([d({ type: ["string", "number"], json: { write: true } })], p17.prototype, "returnType", void 0), p17 = s9 = e([n("esri.popup.ExpressionInfo")], p17);
var i10 = p17;

// node_modules/@arcgis/core/popup/LayerOptions.js
var e4;
var p18 = e4 = class extends l {
  constructor(o4) {
    super(o4), this.returnTopmostRaster = null, this.showNoDataRecords = null;
  }
  clone() {
    return new e4({ showNoDataRecords: this.showNoDataRecords, returnTopmostRaster: this.returnTopmostRaster });
  }
};
e([d({ type: Boolean, json: { write: true } })], p18.prototype, "returnTopmostRaster", void 0), e([d({ type: Boolean, json: { write: true } })], p18.prototype, "showNoDataRecords", void 0), p18 = e4 = e([n("esri.popup.LayerOptions")], p18);
var a11 = p18;

// node_modules/@arcgis/core/popup/support/RelatedRecordsInfoFieldOrder.js
var t;
var p19 = t = class extends l {
  constructor(r4) {
    super(r4), this.field = null, this.order = null;
  }
  clone() {
    return new t({ field: this.field, order: this.order });
  }
};
e([d({ type: String, json: { write: true } })], p19.prototype, "field", void 0), e([d({ type: ["asc", "desc"], json: { write: true } })], p19.prototype, "order", void 0), p19 = t = e([n("esri.popup.support.RelatedRecordsInfoFieldOrder")], p19);
var c9 = p19;

// node_modules/@arcgis/core/popup/RelatedRecordsInfo.js
var d3;
var c10 = d3 = class extends l {
  constructor(o4) {
    super(o4), this.showRelatedRecords = null, this.orderByFields = null;
  }
  clone() {
    return new d3({ showRelatedRecords: this.showRelatedRecords, orderByFields: this.orderByFields ? m(this.orderByFields) : null });
  }
};
e([d({ type: Boolean, json: { write: true } })], c10.prototype, "showRelatedRecords", void 0), e([d({ type: [c9], json: { write: true } })], c10.prototype, "orderByFields", void 0), c10 = d3 = e([n("esri.popup.RelatedRecordsInfo")], c10);
var l6 = c10;

// node_modules/@arcgis/core/PopupTemplate.js
var S3;
var T = j.ofType({ key: "type", defaultKeyValue: "button", base: c, typeMap: { button: a, toggle: a2 } });
var b2 = { base: p, key: "type", typeMap: { media: I, custom: i2, text: c8, attachments: i, fields: c4, expression: i4 } };
var R = "esri.PopupTemplate";
var L2 = s2.getLogger(R);
var J = ["attachments", "fields", "media", "text", "expression"];
var M = S3 = class extends l {
  constructor() {
    super(...arguments), this.actions = null, this.content = "", this.expressionInfos = null, this.fieldInfos = null, this.layerOptions = null, this.lastEditInfoEnabled = true, this.outFields = null, this.overwriteActions = false, this.returnGeometry = false, this.title = "", this.relatedRecordsInfo = null;
  }
  castContent(t2) {
    return Array.isArray(t2) ? t2.map((t3) => N(b2, t3)) : "string" == typeof t2 || "function" == typeof t2 || t2 instanceof HTMLElement || k(t2) ? t2 : (L2.error("content error", "unsupported content value", { value: t2 }), null);
  }
  readContent(t2, e5) {
    const { popupElements: o4 } = e5;
    return Array.isArray(o4) && o4.length > 0 ? this._readPopupInfoElements(e5) : this._readPopupInfo(e5);
  }
  writeContent(t2, e5, o4, s10) {
    "string" != typeof t2 ? Array.isArray(t2) && (e5.popupElements = t2.filter((t3) => J.includes(t3.type)).map((t3) => t3 && t3.toJSON(s10)), e5.popupElements.forEach((t3) => {
      "attachments" === t3.type ? this._writeAttachmentContent(e5) : "media" === t3.type ? this._writeMediaContent(t3, e5) : "text" === t3.type && this._writeTextContent(t3, e5);
    })) : e5.description = t2;
  }
  writeFieldInfos(t2, e5, o4, s10) {
    const { content: i11 } = this, r4 = Array.isArray(i11) ? i11 : null;
    if (t2) {
      const o5 = r4 ? r4.filter((t3) => "fields" === t3.type) : [], i12 = o5.length && o5.every((t3) => {
        var _a;
        return (_a = t3.fieldInfos) == null ? void 0 : _a.length;
      });
      e5.fieldInfos = t2.filter(Boolean).map((t3) => {
        const e6 = t3.toJSON(s10);
        return i12 && (e6.visible = false), e6;
      });
    }
    if (r4)
      for (const n6 of r4)
        "fields" === n6.type && this._writeFieldsContent(n6, e5);
  }
  writeLayerOptions(t2, e5, o4, s10) {
    e5[o4] = !t2 || null === t2.showNoDataRecords && null === t2.returnTopmostRaster ? null : t2.toJSON(s10);
  }
  writeTitle(t2, e5) {
    e5.title = t2 || "";
  }
  clone() {
    const { actions: t2 } = this, e5 = t2 ? m(t2.toArray()) : [];
    return new S3({ actions: e5, content: Array.isArray(this.content) ? m(this.content) : this.content, expressionInfos: Array.isArray(this.expressionInfos) ? m(this.expressionInfos) : null, fieldInfos: Array.isArray(this.fieldInfos) ? m(this.fieldInfos) : null, layerOptions: this.layerOptions ? m(this.layerOptions) : null, lastEditInfoEnabled: this.lastEditInfoEnabled, outFields: Array.isArray(this.outFields) ? m(this.outFields) : null, overwriteActions: this.overwriteActions, returnGeometry: this.returnGeometry, title: this.title, relatedRecordsInfo: this.relatedRecordsInfo ? m(this.relatedRecordsInfo) : null });
  }
  async collectRequiredFields(t2, e5) {
    const o4 = this.expressionInfos || [];
    await this._collectExpressionInfoFields(t2, e5, [...o4, ...this._getContentExpressionInfos(this.content, o4)]), g(t2, e5, [...this.outFields || [], ...this._getActionsFields(this.actions), ...this._getTitleFields(this.title), ...this._getContentFields(this.content)]);
  }
  async getRequiredFields(t2) {
    const e5 = /* @__PURE__ */ new Set();
    return await this.collectRequiredFields(e5, t2), [...e5].sort();
  }
  _writeFieldsContent(t2, e5) {
    if (!Array.isArray(t2.fieldInfos) || !t2.fieldInfos.length)
      return;
    const o4 = m(t2.fieldInfos);
    Array.isArray(e5.fieldInfos) ? o4.forEach((t3) => {
      const o5 = e5.fieldInfos.find((e6) => e6.fieldName.toLowerCase() === t3.fieldName.toLowerCase());
      o5 ? o5.visible = true : e5.fieldInfos.push(t3);
    }) : e5.fieldInfos = o4;
  }
  _writeAttachmentContent(t2) {
    t2.showAttachments || (t2.showAttachments = true);
  }
  _writeTextContent(t2, e5) {
    !e5.description && t2.text && (e5.description = t2.text);
  }
  _writeMediaContent(t2, e5) {
    if (!Array.isArray(t2.mediaInfos) || !t2.mediaInfos.length)
      return;
    const o4 = m(t2.mediaInfos);
    Array.isArray(e5.mediaInfos) ? e5.mediaInfos = [...e5.mediaInfos, ...o4] : e5.mediaInfos = o4;
  }
  _readPopupInfoElements({ description: t2, mediaInfos: e5, popupElements: o4 }) {
    const s10 = { description: false, mediaInfos: false };
    return o4.map((o5) => "media" === o5.type ? (o5.mediaInfos || !e5 || s10.mediaInfos || (o5.mediaInfos = e5, s10.mediaInfos = true), I.fromJSON(o5)) : "text" === o5.type ? (o5.text || !t2 || s10.description || (o5.text = t2, s10.description = true), c8.fromJSON(o5)) : "attachments" === o5.type ? i.fromJSON(o5) : "fields" === o5.type ? c4.fromJSON(o5) : "expression" === o5.type ? i4.fromJSON(o5) : void 0).filter(Boolean);
  }
  _readPopupInfo({ description: t2, mediaInfos: e5, showAttachments: o4 }) {
    const s10 = [];
    return t2 ? s10.push(new c8({ text: t2 })) : s10.push(new c4()), Array.isArray(e5) && e5.length && s10.push(I.fromJSON({ mediaInfos: e5 })), o4 && s10.push(i.fromJSON({ displayType: "auto" })), s10.length ? s10 : t2;
  }
  _getContentElementFields(t2) {
    const e5 = t2 == null ? void 0 : t2.type;
    if ("attachments" === e5)
      return [...this._extractFieldNames(t2.title), ...this._extractFieldNames(t2.description)];
    if ("custom" === e5)
      return t2.outFields || [];
    if ("fields" === e5)
      return [...this._extractFieldNames(t2.title), ...this._extractFieldNames(t2.description), ...this._getFieldInfoFields(t2.fieldInfos || this.fieldInfos)];
    if ("media" === e5) {
      const e6 = t2.mediaInfos || [];
      return [...this._extractFieldNames(t2.title), ...this._extractFieldNames(t2.description), ...e6.reduce((t3, e7) => [...t3, ...this._getMediaInfoFields(e7)], [])];
    }
    return "text" === e5 ? this._extractFieldNames(t2.text) : [];
  }
  _getMediaInfoFields(t2) {
    const { caption: e5, title: o4, value: s10 } = t2, i11 = s10 || {}, { fields: r4 = [], normalizeField: n6, tooltipField: p20, sourceURL: l7, linkURL: a12 } = i11, d4 = [...this._extractFieldNames(o4), ...this._extractFieldNames(e5), ...this._extractFieldNames(l7), ...this._extractFieldNames(a12), ...r4];
    return n6 && d4.push(n6), p20 && d4.push(p20), d4;
  }
  _getContentExpressionInfos(t2, e5) {
    return Array.isArray(t2) ? t2.reduce((t3, e6) => [...t3, ..."expression" === e6.type && e6.expressionInfo ? [e6.expressionInfo] : []], e5) : [];
  }
  _getContentFields(t2) {
    return "string" == typeof t2 ? this._extractFieldNames(t2) : Array.isArray(t2) ? t2.reduce((t3, e5) => [...t3, ...this._getContentElementFields(e5)], []) : [];
  }
  async _collectExpressionInfoFields(t2, e5, o4) {
    o4 && await Promise.all(o4.map((o5) => b(t2, e5, o5.expression)));
  }
  _getFieldInfoFields(t2) {
    return t2 ? t2.filter((t3) => void 0 === t3.visible || !!t3.visible).map((t3) => t3.fieldName).filter((t3) => !t3.includes("relationships/") && !t3.includes("expression/")) : [];
  }
  _getActionsFields(t2) {
    return t2 ? t2.toArray().reduce((t3, e5) => [...t3, ...this._getActionFields(e5)], []) : [];
  }
  _getActionFields(t2) {
    const { className: e5, title: o4, type: s10 } = t2, i11 = "button" === s10 || "toggle" === s10 ? t2.image : "";
    return [...this._extractFieldNames(o4), ...this._extractFieldNames(e5), ...this._extractFieldNames(i11)];
  }
  _getTitleFields(t2) {
    return "string" == typeof t2 ? this._extractFieldNames(t2) : [];
  }
  _extractFieldNames(t2) {
    if (!t2 || "string" != typeof t2)
      return [];
    const e5 = /{[^}]*}/g, o4 = t2.match(e5);
    if (!o4)
      return [];
    const s10 = /\{(\w+):.+\}/, i11 = o4.filter((t3) => !(0 === t3.indexOf("{relationships/") || 0 === t3.indexOf("{expression/"))).map((t3) => t3.replace(s10, "{$1}"));
    return i11 ? i11.map((t3) => t3.slice(1, -1)) : [];
  }
};
e([d({ type: T })], M.prototype, "actions", void 0), e([d()], M.prototype, "content", void 0), e([s3("content")], M.prototype, "castContent", null), e([o2("content", ["description", "fieldInfos", "popupElements", "mediaInfos", "showAttachments"])], M.prototype, "readContent", null), e([r("content", { popupElements: { type: j.ofType(m4) }, showAttachments: { type: Boolean }, mediaInfos: { type: j.ofType(m3) }, description: { type: String } })], M.prototype, "writeContent", null), e([d({ type: [i10], json: { write: true } })], M.prototype, "expressionInfos", void 0), e([d({ type: [c3] })], M.prototype, "fieldInfos", void 0), e([r("fieldInfos")], M.prototype, "writeFieldInfos", null), e([d({ type: a11 })], M.prototype, "layerOptions", void 0), e([r("layerOptions")], M.prototype, "writeLayerOptions", null), e([d({ type: Boolean, json: { read: { source: "showLastEditInfo" }, write: { target: "showLastEditInfo" }, default: true } })], M.prototype, "lastEditInfoEnabled", void 0), e([d()], M.prototype, "outFields", void 0), e([d()], M.prototype, "overwriteActions", void 0), e([d()], M.prototype, "returnGeometry", void 0), e([d({ json: { type: String } })], M.prototype, "title", void 0), e([r("title")], M.prototype, "writeTitle", null), e([d({ type: l6, json: { write: true } })], M.prototype, "relatedRecordsInfo", void 0), M = S3 = e([n(R)], M);
var B = M;

export {
  c9 as c,
  i,
  i3 as i2,
  u2 as u,
  c3 as c2,
  c4 as c3,
  i5 as i3,
  I,
  c8 as c4,
  i10 as i4,
  B
};
//# sourceMappingURL=chunk-EI4MOLML.js.map
