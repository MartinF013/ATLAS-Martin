import {
  o as o2
} from "./chunk-BMA2CXVS.js";
import {
  e as e4
} from "./chunk-4MKQUQD4.js";
import {
  n as n2,
  t as t2
} from "./chunk-NAB3NF54.js";
import {
  e as e3
} from "./chunk-YFBAFAZ2.js";
import {
  c
} from "./chunk-ASC3X65B.js";
import {
  L,
  e as e2,
  o,
  u
} from "./chunk-PKZEO23A.js";
import {
  f,
  n
} from "./chunk-AIRC226G.js";
import {
  e,
  r,
  t
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js
var m = class extends t2 {
  constructor(e5) {
    super(), this.slicePlaneLocalOrigin = e5;
  }
};
function p(s, i) {
  H(s, i, [new e4("slicePlaneOrigin", (e5, s2) => v(i, e5, s2)), new e4("slicePlaneBasis1", (s2, a) => {
    var _a;
    return B(i, s2, a, (_a = e(a.slicePlane)) == null ? void 0 : _a.basis1);
  }), new e4("slicePlaneBasis2", (s2, a) => {
    var _a;
    return B(i, s2, a, (_a = e(a.slicePlane)) == null ? void 0 : _a.basis2);
  })]);
}
function u2(s, i) {
  H(s, i, [new o2("slicePlaneOrigin", (e5, s2) => v(i, e5, s2)), new o2("slicePlaneBasis1", (s2, a) => {
    var _a;
    return B(i, s2, a, (_a = e(a.slicePlane)) == null ? void 0 : _a.basis1);
  }), new o2("slicePlaneBasis2", (s2, a) => {
    var _a;
    return B(i, s2, a, (_a = e(a.slicePlane)) == null ? void 0 : _a.basis2);
  })]);
}
function H(e5, s, i) {
  if (!s.hasSlicePlane) {
    const i2 = n2`#define rejectBySlice(_pos_) false
#define discardBySlice(_pos_) {}
#define highlightSlice(_color_, _pos_) (_color_)`;
    return s.hasSliceInVertexProgram && e5.vertex.code.add(i2), void e5.fragment.code.add(i2);
  }
  e5.extensions.add("GL_OES_standard_derivatives"), s.hasSliceInVertexProgram && e5.vertex.uniforms.add(i), e5.fragment.uniforms.add(i);
  const a = n2`struct SliceFactors {
float front;
float side0;
float side1;
float side2;
float side3;
};
SliceFactors calculateSliceFactors(vec3 pos) {
vec3 rel = pos - slicePlaneOrigin;
vec3 slicePlaneNormal = -cross(slicePlaneBasis1, slicePlaneBasis2);
float slicePlaneW = -dot(slicePlaneNormal, slicePlaneOrigin);
float basis1Len2 = dot(slicePlaneBasis1, slicePlaneBasis1);
float basis2Len2 = dot(slicePlaneBasis2, slicePlaneBasis2);
float basis1Dot = dot(slicePlaneBasis1, rel);
float basis2Dot = dot(slicePlaneBasis2, rel);
return SliceFactors(
dot(slicePlaneNormal, pos) + slicePlaneW,
-basis1Dot - basis1Len2,
basis1Dot - basis1Len2,
-basis2Dot - basis2Len2,
basis2Dot - basis2Len2
);
}
bool sliceByFactors(SliceFactors factors) {
return factors.front < 0.0
&& factors.side0 < 0.0
&& factors.side1 < 0.0
&& factors.side2 < 0.0
&& factors.side3 < 0.0;
}
bool sliceEnabled() {
return dot(slicePlaneBasis1, slicePlaneBasis1) != 0.0;
}
bool sliceByPlane(vec3 pos) {
return sliceEnabled() && sliceByFactors(calculateSliceFactors(pos));
}
#define rejectBySlice(_pos_) sliceByPlane(_pos_)
#define discardBySlice(_pos_) { if (sliceByPlane(_pos_)) discard; }`, o3 = n2`vec4 applySliceHighlight(vec4 color, vec3 pos) {
SliceFactors factors = calculateSliceFactors(pos);
const float HIGHLIGHT_WIDTH = 1.0;
const vec4 HIGHLIGHT_COLOR = vec4(0.0, 0.0, 0.0, 0.3);
factors.front /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.front);
factors.side0 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side0);
factors.side1 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side1);
factors.side2 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side2);
factors.side3 /= (2.0 * HIGHLIGHT_WIDTH) * fwidth(factors.side3);
if (sliceByFactors(factors)) {
return color;
}
float highlightFactor = (1.0 - step(0.5, factors.front))
* (1.0 - step(0.5, factors.side0))
* (1.0 - step(0.5, factors.side1))
* (1.0 - step(0.5, factors.side2))
* (1.0 - step(0.5, factors.side3));
return mix(color, vec4(HIGHLIGHT_COLOR.rgb, color.a), highlightFactor * HIGHLIGHT_COLOR.a);
}`, c2 = s.hasSliceHighlight ? n2`
        ${o3}
        #define highlightSlice(_color_, _pos_) (sliceEnabled() ? applySliceHighlight(_color_, _pos_) : (_color_))
      ` : n2`#define highlightSlice(_color_, _pos_) (_color_)`;
  s.hasSliceInVertexProgram && e5.vertex.code.add(a), e5.fragment.code.add(a), e5.fragment.code.add(c2);
}
function g(e5, s, i) {
  return e5.instancedDoublePrecision ? o(S, i.camera.viewInverseTransposeMatrix[3], i.camera.viewInverseTransposeMatrix[7], i.camera.viewInverseTransposeMatrix[11]) : s.slicePlaneLocalOrigin;
}
function I(e5, s) {
  return r(e5) ? e2(L2, s.origin, e5) : s.origin;
}
function b(e5, s, o3) {
  return e5.hasSliceTranslatedView ? r(s) ? c(T, o3.camera.viewMatrix, s) : o3.camera.viewMatrix : null;
}
function v(e5, a, o3) {
  if (t(o3.slicePlane))
    return f;
  const c2 = g(e5, a, o3), r2 = I(c2, o3.slicePlane), t3 = b(e5, c2, o3);
  return r(t3) ? L(L2, r2, t3) : r2;
}
function B(e5, a, o3, c2) {
  if (t(c2) || t(o3.slicePlane))
    return f;
  const f2 = g(e5, a, o3), d = I(f2, o3.slicePlane), _ = b(e5, f2, o3);
  return r(_) ? (u(G, c2, d), L(L2, d, _), L(G, G, _), e2(G, G, L2)) : c2;
}
var S = n();
var L2 = n();
var G = n();
var T = e3();

export {
  m,
  p,
  u2 as u
};
//# sourceMappingURL=chunk-IJHFAZOW.js.map
