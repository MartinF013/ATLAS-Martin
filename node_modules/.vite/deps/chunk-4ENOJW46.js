import {
  l
} from "./chunk-HO3HYBW5.js";
import {
  g
} from "./chunk-JT3LXQ47.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  s2 as s
} from "./chunk-HFTNOKM2.js";

// node_modules/@arcgis/core/views/layers/WMSLayerView.js
var a = (a2) => {
  let i = class extends a2 {
    initialize() {
      this.exportImageParameters = new l({ layer: this.layer });
    }
    destroy() {
      this.exportImageParameters.destroy(), this.exportImageParameters = null;
    }
    get exportImageVersion() {
      var _a;
      return (_a = this.exportImageParameters) == null ? void 0 : _a.commitProperty("version"), this.commitProperty("timeExtent"), (this._get("exportImageVersion") || 0) + 1;
    }
    fetchPopupFeatures(e2) {
      const { layer: t } = this;
      if (!e2)
        return Promise.reject(new s("wmslayerview:fetchPopupFeatures", "Nothing to fetch without area", { layer: t }));
      const { popupEnabled: o } = t;
      if (!o)
        return Promise.reject(new s("wmslayerview:fetchPopupFeatures", "popupEnabled should be true", { popupEnabled: o }));
      const s2 = this.createFetchPopupFeaturesQuery(e2);
      if (!s2)
        return Promise.resolve([]);
      const { extent: p, width: a3, height: i2, x: m, y: n2 } = s2;
      if (!(p && a3 && i2))
        throw new s("wmslayerview:fetchPopupFeatures", "WMSLayer does not support fetching features.", { extent: p, width: a3, height: i2 });
      const c = t.fetchFeatureInfo(p, a3, i2, m, n2);
      return Promise.resolve(c ? [c] : []);
    }
  };
  return e([d()], i.prototype, "exportImageParameters", void 0), e([d({ readOnly: true })], i.prototype, "exportImageVersion", null), e([d()], i.prototype, "layer", void 0), e([d(g)], i.prototype, "timeExtent", void 0), i = e([n("esri.layers.mixins.WMSLayerView")], i), i;
};

export {
  a
};
//# sourceMappingURL=chunk-4ENOJW46.js.map
