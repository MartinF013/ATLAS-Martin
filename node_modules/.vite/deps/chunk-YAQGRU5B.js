import {
  o as o3
} from "./chunk-M3GMIUQS.js";
import {
  o as o2
} from "./chunk-BMA2CXVS.js";
import {
  e as e3
} from "./chunk-46N7XS5M.js";
import {
  e as e2
} from "./chunk-4MKQUQD4.js";
import {
  e
} from "./chunk-5OEHY3VV.js";
import {
  c
} from "./chunk-ASC3X65B.js";
import {
  o
} from "./chunk-PKZEO23A.js";
import {
  f,
  n
} from "./chunk-AIRC226G.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js
function c2(r, e4) {
  e4.instancedDoublePrecision ? r.constants.add("cameraPosition", "vec3", f) : r.uniforms.add(new o2("cameraPosition", (r2, e5) => o(f2, e5.camera.viewInverseTransposeMatrix[3] - r2.origin[0], e5.camera.viewInverseTransposeMatrix[7] - r2.origin[1], e5.camera.viewInverseTransposeMatrix[11] - r2.origin[2])));
}
function d(e4, i) {
  if (e4.vertex.uniforms.add(new e3("proj", (r, e5) => e5.camera.projectionMatrix)), i.instancedDoublePrecision) {
    const i2 = (r, e5) => o(f2, e5.camera.viewInverseTransposeMatrix[3], e5.camera.viewInverseTransposeMatrix[7], e5.camera.viewInverseTransposeMatrix[11]);
    e4.vertex.uniforms.add(new e3("view", (e5, a) => c(v, a.camera.viewMatrix, i2(e5, a))));
    const s2 = new e2("localOrigin", i2);
    return e4.vertex.uniforms.add(s2), s2;
  }
  e4.vertex.uniforms.add(new o3("view", (e5, a) => c(v, a.camera.viewMatrix, e5.origin)));
  const s = new o2("localOrigin", (r) => r.origin);
  return e4.vertex.uniforms.add(s), s;
}
var v = e();
var f2 = n();

export {
  c2 as c,
  d
};
//# sourceMappingURL=chunk-YAQGRU5B.js.map
