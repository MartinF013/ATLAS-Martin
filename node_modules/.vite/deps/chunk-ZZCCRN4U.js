import {
  h as h4
} from "./chunk-TWQ374WD.js";
import {
  L as L3
} from "./chunk-GT2OBOXC.js";
import {
  g as g3
} from "./chunk-Z3S5X75I.js";
import {
  e as e5
} from "./chunk-YK4ZKK2Q.js";
import {
  Me
} from "./chunk-LBBA3SFR.js";
import {
  h as h3,
  x
} from "./chunk-CXIMLSDF.js";
import {
  e as e6
} from "./chunk-V7M26XZ7.js";
import {
  n as n3
} from "./chunk-XZTXACPW.js";
import {
  e as e7
} from "./chunk-EHYYP2L2.js";
import {
  e as e4,
  t as t4
} from "./chunk-ZUEYZA7M.js";
import {
  r as r3
} from "./chunk-74GUBHRJ.js";
import {
  t as t3
} from "./chunk-E447OCKN.js";
import {
  t as t2
} from "./chunk-LPU5TMA4.js";
import {
  O,
  e2 as e3
} from "./chunk-25QHXOZB.js";
import {
  n as n2
} from "./chunk-UHJVTABQ.js";
import {
  f as f2,
  h as h2,
  v,
  w
} from "./chunk-W66LN57L.js";
import {
  l as l3,
  s as s5
} from "./chunk-22YODLVL.js";
import {
  Ke
} from "./chunk-7LOJJ46D.js";
import {
  c,
  d as d2
} from "./chunk-L2YBXQTH.js";
import {
  s as s4
} from "./chunk-WBX2MY5R.js";
import {
  b as b2,
  m as m2
} from "./chunk-GSFXXEAM.js";
import {
  o
} from "./chunk-T7SYNS2R.js";
import {
  b as b3
} from "./chunk-SIH2IMSA.js";
import {
  a as a3
} from "./chunk-JJRJ6TV3.js";
import {
  u as u2
} from "./chunk-G4IZ2HTT.js";
import {
  U,
  a,
  f,
  h,
  j as j3,
  l as l2
} from "./chunk-T7BEWVV3.js";
import {
  a as a2
} from "./chunk-KVF4M6PZ.js";
import {
  g as g2
} from "./chunk-BLINZ65M.js";
import {
  I,
  c2,
  c3,
  c4,
  i2,
  i3,
  i4,
  u as u3
} from "./chunk-EI4MOLML.js";
import {
  a as a5,
  a2 as a6,
  c as c5
} from "./chunk-4SBWV5M2.js";
import {
  S as S2
} from "./chunk-5TRUGQDM.js";
import {
  B,
  de,
  ye
} from "./chunk-5Z5455ZY.js";
import {
  a as a4
} from "./chunk-D7DLEBS2.js";
import {
  j as j2
} from "./chunk-TT2HIXWQ.js";
import {
  L as L2,
  S,
  m,
  u
} from "./chunk-OOZMA7DN.js";
import {
  l
} from "./chunk-Y7FSCP47.js";
import {
  U as U2
} from "./chunk-65A2N4LL.js";
import {
  R,
  j2 as j
} from "./chunk-YPZEGNLG.js";
import {
  s as s3
} from "./chunk-XRL56EGK.js";
import {
  d,
  n8 as n,
  y3 as y
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  E,
  L,
  b,
  g,
  i
} from "./chunk-U3PSONS6.js";
import {
  s2
} from "./chunk-HFTNOKM2.js";
import {
  s
} from "./chunk-CVWDM4C7.js";
import {
  r as r2
} from "./chunk-G5JBUC5N.js";
import {
  e as e2,
  r,
  t
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/widgets/Feature/support/featureUtils.js
var d3 = "esri.widgets.Feature.support.featureUtils";
var p = s.getLogger(d3);
var m3 = /href=(""|'')/gi;
var y2 = /(\{([^\{\r\n]+)\})/g;
var g4 = /\'/g;
var h5 = /^\s*expression\//i;
var I2 = /(\n)/gi;
var b4 = /[\u00A0-\u9999<>\&]/gim;
var F = /href\s*=\s*(?:\"([^\"]+)\"|\'([^\']+)\')/gi;
var w2 = /^(?:mailto:|tel:)/;
var N = "relationships/";
var E2 = S("short-date-short-time");
function j4(e12) {
  if (!t(e12))
    return e12.get("sourceLayer") || e12.get("layer");
}
async function x2(e12, t7) {
  return "function" == typeof e12 ? e12.call(null, t7) : e12;
}
function T(e12 = "") {
  if (e12)
    return !w2.test(e12.trim().toLowerCase());
}
function C(e12) {
  return !!e12 && h5.test(e12);
}
function M(e12, t7) {
  if (!C(t7) || !e12)
    return null;
  const r6 = t7.replace(h5, "").toLowerCase();
  let n8;
  return e12.some((e13) => e13.name.toLowerCase() === r6 && (n8 = e13, true)), n8;
}
function q(e12, t7) {
  const r6 = M(t7, e12 == null ? void 0 : e12.fieldName);
  return r6 ? r6.title || null : e12 ? e12.label || e12.fieldName : null;
}
function R2(e12, t7) {
  const r6 = t7.get(e12.toLowerCase());
  return `{${r6 && r6.fieldName || e12}}`;
}
function v2(e12) {
  return e12.replace(m3, "");
}
function D(e12, t7) {
  const r6 = L4(t7, e12);
  return r6 ? r6.name : e12;
}
function A(e12, t7) {
  return e12 && e12.map((e13) => D(e13, t7));
}
function L4(e12, t7) {
  return e12 && "function" == typeof e12.getField ? e12.getField(t7) : null;
}
function U3(e12) {
  return `${e12}`.trim();
}
function $({ attributes: e12, globalAttributes: t7, layer: r6, text: n8, expressionAttributes: i8, fieldInfoMap: o6 }) {
  return n8 ? S3({ formattedAttributes: t7, template: _(n8, { ...t7, ...i8, ...e12 }, r6), fieldInfoMap: o6 }) : "";
}
function S3({ formattedAttributes: e12, template: t7, fieldInfoMap: r6 }) {
  return U3(v2(r2(r2(t7, (e13) => R2(e13, r6)), e12)));
}
function G(e12, t7, r6 = false) {
  const n8 = t7[e12];
  if ("string" == typeof n8) {
    const i8 = "%27", o6 = (r6 ? encodeURIComponent(n8) : n8).replace(g4, i8);
    t7[e12] = o6;
  }
}
function k(e12, t7 = false) {
  const r6 = { ...e12 };
  return Object.keys(r6).forEach((e13) => G(e13, r6, t7)), r6;
}
function O2(e12, t7, r6) {
  const i8 = (t7 = U3(t7)) && "{" !== t7[0];
  return r2(e12, k(r6, i8));
}
function P(e12, t7) {
  return e12.replace(y2, (e13, r6, n8) => {
    const i8 = L4(t7, n8);
    return i8 ? `{${i8.name}}` : r6;
  });
}
function _(e12, t7, r6) {
  const n8 = P(e12, r6);
  return n8 ? n8.replace(F, (e13, r7, n9) => O2(e13, r7 || n9, t7)) : n8;
}
function z(e12, t7) {
  if ("string" == typeof e12 && t7 && null == t7.dateFormat && (null != t7.places || null != t7.digitSeparator)) {
    const t8 = Number(e12);
    if (!isNaN(t8))
      return t8;
  }
  return e12;
}
function H(e12) {
  return "feature" === (e12 == null ? void 0 : e12.type);
}
function Q(e12) {
  return !!(e12 == null ? void 0 : e12.layer);
}
function Z(e12) {
  return "map-image" === (e12 == null ? void 0 : e12.type);
}
function V(e12, t7) {
  var _a;
  const r6 = t7.fieldInfos, n8 = t7.fieldName, i8 = (_a = B2(r6, n8)) == null ? void 0 : _a.clone(), o6 = t7.preventPlacesFormatting, s10 = t7.layer, c17 = L4(s10, n8);
  if (i8 && "date" === (c17 == null ? void 0 : c17.type)) {
    const e13 = i8.format || new u3();
    e13.dateFormat = e13.dateFormat || "short-date-short-time", e13.dateTimeFormatOptions = !Q(s10) && H(s10) && s10.datesInUnknownTimezone || Q(s10) && Z(s10.layer) && s10.layer.datesInUnknownTimezone ? { timeZone: "UTC" } : null, i8.format = e13;
  }
  const d8 = i8 && i8.format;
  return "string" == typeof e12 && ye(n8) && d8 ? d8.formatRasterPixelValue(e12) : "string" == typeof (e12 = z(e12, d8)) || null == e12 || null == d8 ? te(e12) : o6 ? m(e12, { ...u(d8), minimumFractionDigits: 0, maximumFractionDigits: 20 }) : d8.format(e12);
}
function B2(e12, t7) {
  if (!e12 || !e12.length || !t7)
    return;
  const r6 = t7.toLowerCase();
  let n8;
  return e12.some((e13) => !(!e13.fieldName || e13.fieldName.toLowerCase() !== r6) && (n8 = e13, true)), n8;
}
function J({ fieldName: e12, graphic: t7, layer: r6 }) {
  if (ue(e12))
    return null;
  if (!r6 || "function" != typeof r6.getFeatureType)
    return null;
  const { typeIdField: n8 } = r6;
  if (!n8 || e12 !== n8)
    return null;
  const i8 = r6.getFeatureType(t7);
  return i8 ? i8.name : null;
}
function K({ fieldName: e12, value: t7, graphic: r6, layer: n8 }) {
  if (ue(e12))
    return null;
  if (!n8 || "function" != typeof n8.getFieldDomain)
    return null;
  const i8 = n8.getFieldDomain(e12, { feature: r6 });
  return i8 && "coded-value" === i8.type ? i8.getName(t7) : null;
}
function W(e12, t7) {
  const { creatorField: r6, creationDateField: n8, editorField: o6, editDateField: a8 } = e12;
  if (!t7)
    return;
  const u10 = t7[a8];
  if ("number" == typeof u10) {
    const e13 = t7[o6];
    return { type: "edit", date: L2(u10, E2), user: e13 };
  }
  const l9 = t7[n8];
  if ("number" == typeof l9) {
    const e13 = t7[r6];
    return { type: "create", date: L2(l9, E2), user: e13 };
  }
  return null;
}
function X(e12, t7) {
  const r6 = /* @__PURE__ */ new Map();
  return e12 && e12.forEach((e13) => {
    const n8 = D(e13.fieldName, t7);
    e13.fieldName = n8, r6.set(n8.toLowerCase(), e13);
  }), r6;
}
function Y(e12) {
  const t7 = [];
  if (!e12)
    return t7;
  const { fieldInfos: r6, content: n8 } = e12;
  return r6 && t7.push(...r6), n8 && Array.isArray(n8) ? (n8.forEach((e13) => {
    if ("fields" === e13.type) {
      const r7 = e13 && e13.fieldInfos;
      r7 && t7.push(...r7);
    }
  }), t7) : t7;
}
function ee(e12) {
  return e12.replace(b4, (e13) => `&#${e13.charCodeAt(0)};`);
}
function te(e12) {
  return "string" == typeof e12 ? e12.replace(I2, '<br class="esri-text-new-line" />') : e12;
}
function re(e12) {
  const { value: t7, fieldName: r6, fieldInfos: n8, fieldInfoMap: o6, layer: a8, graphic: u10 } = e12;
  if (null == t7)
    return "";
  const l9 = K({ fieldName: r6, value: t7, graphic: u10, layer: a8 });
  if (l9)
    return l9;
  const s10 = J({ fieldName: r6, graphic: u10, layer: a8 });
  if (s10)
    return s10;
  if (o6.get(r6.toLowerCase()))
    return V(t7, { fieldInfos: n8 || Array.from(o6.values()), fieldName: r6, layer: a8 });
  const f8 = a8 && a8.fieldsIndex;
  return f8 && f8.isDateField(r6) ? L2(t7, E2) : te(t7);
}
function ne({ fieldInfos: e12, attributes: t7, layer: r6, graphic: n8, fieldInfoMap: i8, relatedInfos: o6 }) {
  const a8 = {};
  return o6 == null ? void 0 : o6.forEach((t8) => fe({ attributes: a8, relatedInfo: t8, fieldInfoMap: i8, fieldInfos: e12, layer: r6 })), Object.keys(t7).forEach((o7) => {
    const u10 = t7[o7];
    a8[o7] = re({ fieldName: o7, fieldInfos: e12, fieldInfoMap: i8, layer: r6, value: u10, graphic: n8 });
  }), a8;
}
async function ie(e12, t7) {
  var _a, _b;
  const { layer: r6, graphic: n8, outFields: i8, objectIds: o6, returnGeometry: a8, spatialReference: u10 } = e12, l9 = o6[0];
  if ("number" != typeof l9 && "string" != typeof l9) {
    const e13 = "Could not query required fields for the specified feature. The feature's ID is invalid.", t8 = { layer: r6, graphic: n8, objectId: l9, requiredFields: i8 };
    return p.warn(e13, t8), null;
  }
  if (!((_b = (_a = r6.capabilities) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsQuery)) {
    const e13 = "The specified layer cannot be queried. The following fields will not be available.", t8 = { layer: r6, graphic: n8, requiredFields: i8, returnGeometry: a8 };
    return p.warn(e13, t8), null;
  }
  const s10 = r6.createQuery();
  s10.objectIds = o6, s10.outFields = (i8 == null ? void 0 : i8.length) ? i8 : [r6.objectIdField], s10.returnGeometry = !!a8, s10.returnZ = !!a8, s10.returnM = !!a8, s10.outSpatialReference = u10;
  return (await r6.queryFeatures(s10, t7)).features[0];
}
async function oe(e12) {
  var _a;
  if (!((_a = e12.expressionInfos) == null ? void 0 : _a.length))
    return false;
  const t7 = await a4(), { arcadeUtils: { hasGeometryFunctions: r6 } } = t7;
  return r6(e12);
}
async function ae({ graphic: e12, popupTemplate: t7, layer: r6, spatialReference: n8 }, i8) {
  if (!r6 || !t7)
    return;
  if ("function" == typeof r6.load && await r6.load(i8), !e12.attributes)
    return;
  const o6 = e12.attributes[r6.objectIdField];
  if (null == o6)
    return;
  const a8 = [o6], u10 = await t7.getRequiredFields(r6.fieldsIndex), l9 = de(u10, e12), f8 = l9 ? [] : u10, c17 = t7.returnGeometry || await oe(t7);
  if (l9 && !c17)
    return;
  const d8 = await ie({ layer: r6, graphic: e12, outFields: f8, objectIds: a8, returnGeometry: c17, spatialReference: n8 }, i8);
  d8 && (d8.geometry && (e12.geometry = d8.geometry), d8.attributes && (e12.attributes = { ...e12.attributes, ...d8.attributes }));
}
function ue(e12 = "") {
  return !!e12 && e12.includes(N);
}
function le(e12) {
  return e12 ? `${N}${e12.layerId}/${e12.fieldName}` : "";
}
function se({ attributes: e12, graphic: t7, relatedInfo: r6, fieldInfos: n8, fieldInfoMap: i8, layer: o6 }) {
  e12 && t7 && r6 && Object.keys(t7.attributes).forEach((a8) => {
    const u10 = le({ layerId: r6.relation.id.toString(), fieldName: a8 }), l9 = t7.attributes[a8];
    e12[u10] = re({ fieldName: u10, fieldInfos: n8, fieldInfoMap: i8, layer: o6, value: l9, graphic: t7 });
  });
}
function fe({ attributes: e12, relatedInfo: t7, fieldInfoMap: r6, fieldInfos: n8, layer: i8 }) {
  e12 && t7 && (t7.relatedFeatures && t7.relatedFeatures && t7.relatedFeatures.forEach((o6) => se({ attributes: e12, graphic: o6, relatedInfo: t7, fieldInfoMap: r6, fieldInfos: n8, layer: i8 })), t7.relatedStatsFeatures && t7.relatedStatsFeatures && t7.relatedStatsFeatures.forEach((o6) => se({ attributes: e12, graphic: o6, relatedInfo: t7, fieldInfoMap: r6, fieldInfos: n8, layer: i8 })));
}
var ce = (e12) => {
  if (!e12)
    return false;
  const t7 = e12.toUpperCase();
  return t7.includes("CURRENT_TIMESTAMP") || t7.includes("CURRENT_DATE") || t7.includes("CURRENT_TIME");
};
var de2 = ({ layer: e12, method: t7, query: n8, definitionExpression: i8 }) => {
  var _a, _b;
  if (!((_b = (_a = e12.capabilities) == null ? void 0 : _a.query) == null ? void 0 : _b.supportsCacheHint) || "attachments" === t7)
    return;
  const o6 = r(n8.where) && n8.where, a8 = r(n8.geometry) && n8.geometry;
  ce(i8) || ce(o6) || "extent" === (a8 == null ? void 0 : a8.type) || "tile" === n8.resultType || (n8.cacheHint = true);
};
var pe = ({ query: e12, layer: t7, method: r6 }) => {
  de2({ layer: t7, method: r6, query: e12, definitionExpression: `${t7.definitionExpression} ${t7.serviceDefinitionExpression}` });
};
var me = ({ queryPayload: e12, layer: t7, method: r6 }) => {
  de2({ layer: t7, method: r6, query: e12, definitionExpression: `${t7.definitionExpression} ${t7.serviceDefinitionExpression}` });
};

// node_modules/@arcgis/core/widgets/Attachments/AttachmentsViewModel.js
var u4 = { editing: false, operations: { add: true, update: true, delete: true } };
var y3 = j2.ofType(l3);
var A2 = "graphic.layer.capabilities.operations.supportsResizeAttachments";
var f3 = class extends y {
  constructor(t7) {
    super(t7), this._getAttachmentsPromise = null, this._attachmentLayer = null, this.abilities = { ...u4 }, this.activeAttachmentInfo = null, this.attachmentInfos = new y3(), this.graphic = null, this.mode = "view", this.own(l2(() => this.graphic, () => this._graphicChanged(), h));
  }
  destroy() {
    this._attachmentLayer = null, this.graphic = null;
  }
  castAbilities(t7) {
    return { ...u4, ...t7 };
  }
  get state() {
    return this._getAttachmentsPromise ? "loading" : this.graphic ? "ready" : "disabled";
  }
  get supportsResizeAttachments() {
    return this.get(A2) || false;
  }
  async getAttachments() {
    const { _attachmentLayer: t7, attachmentInfos: e12 } = this;
    if (!t7 || "function" != typeof t7.queryAttachments)
      throw new s2("invalid-layer", "getAttachments(): A valid layer is required.");
    const a8 = this._getFeatureId(), i8 = new c({ objectIds: [a8], returnMetadata: true }), n8 = [], s10 = t7.queryAttachments(i8).then((t8) => t8[a8] || n8).catch(() => n8);
    this._getAttachmentsPromise = s10, this.notifyChange("state");
    const o6 = await s10;
    return e12.removeAll(), o6.length && e12.addMany(o6), this._getAttachmentsPromise = null, this.notifyChange("state"), o6;
  }
  async addAttachment(t7) {
    const { _attachmentLayer: e12, attachmentInfos: a8, graphic: i8, abilities: n8 } = this;
    if (!t7)
      throw new s2("invalid-attachment", "addAttachment(): An attachment is required.", { attachment: t7 });
    if (!n8.operations.add)
      throw new s2("invalid-abilities", "addAttachment(): add abilities are required.");
    if (!e12 || "function" != typeof e12.addAttachment)
      throw new s2("invalid-layer", "addAttachment(): A valid layer is required.");
    const s10 = e12.addAttachment(i8, t7).then((t8) => this._queryAttachment(t8.objectId)), o6 = await s10;
    return a8.add(o6), o6;
  }
  async deleteAttachment(t7) {
    const { _attachmentLayer: e12, attachmentInfos: a8, graphic: i8, abilities: n8 } = this;
    if (!t7)
      throw new s2("invalid-attachment-info", "deleteAttachment(): An attachmentInfo is required.", { attachmentInfo: t7 });
    if (!n8.operations.delete)
      throw new s2("invalid-abilities", "deleteAttachment(): delete abilities are required.");
    if (!e12 || "function" != typeof e12.deleteAttachments)
      throw new s2("invalid-layer", "deleteAttachment(): A valid layer is required.");
    const s10 = e12.deleteAttachments(i8, [t7.id]).then(() => t7), o6 = await s10;
    return a8.remove(o6), o6;
  }
  async updateAttachment(t7, e12 = this.activeAttachmentInfo) {
    const { _attachmentLayer: a8, attachmentInfos: i8, graphic: n8, abilities: s10 } = this;
    if (!t7)
      throw new s2("invalid-attachment", "updateAttachment(): An attachment is required.", { attachment: t7 });
    if (!e12)
      throw new s2("invalid-attachment-info", "updateAttachment(): An attachmentInfo is required.", { attachmentInfo: e12 });
    if (!s10.operations.update)
      throw new s2("invalid-abilities", "updateAttachment(): Update abilities are required.");
    const o6 = i8.findIndex((t8) => t8 === e12);
    if (!a8 || "function" != typeof a8.updateAttachment)
      throw new s2("invalid-layer", "updateAttachment(): A valid layer is required.");
    const c17 = a8.updateAttachment(n8, e12.id, t7).then((t8) => this._queryAttachment(t8.objectId)), h10 = await c17;
    return i8.splice(o6, 1, h10), h10;
  }
  async _queryAttachment(t7) {
    if (!t7)
      throw new s2("invalid-attachment-id", "Could not query attachment.");
    const { _attachmentLayer: e12 } = this, a8 = this._getFeatureId(), i8 = new c({ objectIds: [a8], attachmentsWhere: `AttachmentId=${t7}`, returnMetadata: true });
    return e12.queryAttachments(i8).then((t8) => t8[a8][0]);
  }
  _getFeatureId() {
    const { _attachmentLayer: t7, graphic: e12 } = this;
    if (!t7 || !e12)
      return null;
    const { objectIdField: a8 } = t7, { attributes: i8 } = e12;
    return i8 && i8[a8];
  }
  _graphicChanged() {
    this.graphic && (this._setAttachmentLayer(), this.getAttachments().catch(() => {
    }));
  }
  _setAttachmentLayer() {
    const { graphic: t7 } = this, e12 = j4(t7);
    this._attachmentLayer = e12 ? "scene" === e12.type && r(e12.associatedLayer) ? e12.associatedLayer : e12 : null;
  }
};
e([d()], f3.prototype, "abilities", void 0), e([s3("abilities")], f3.prototype, "castAbilities", null), e([d()], f3.prototype, "activeAttachmentInfo", void 0), e([d({ readOnly: true, type: y3 })], f3.prototype, "attachmentInfos", void 0), e([d({ type: g2 })], f3.prototype, "graphic", void 0), e([d()], f3.prototype, "mode", void 0), e([d({ readOnly: true })], f3.prototype, "state", null), e([d({ readOnly: true })], f3.prototype, "supportsResizeAttachments", null), f3 = e([n("esri.widgets.Attachments.AttachmentsViewModel")], f3);
var g5 = f3;

// node_modules/@arcgis/core/widgets/Attachments/support/attachmentUtils.js
function e8(i8) {
  const e12 = i8.toLowerCase();
  return "image/bmp" === e12 || "image/emf" === e12 || "image/exif" === e12 || "image/gif" === e12 || "image/x-icon" === e12 || "image/jpeg" === e12 || "image/png" === e12 || "image/tiff" === e12 || "image/x-wmf" === e12;
}
function p2(e12) {
  const p11 = a2("esri/themes/base/images/files/");
  return e12 ? "text/plain" === e12 ? `${p11}text-32.svg` : "application/pdf" === e12 ? `${p11}pdf-32.svg` : "text/csv" === e12 ? `${p11}csv-32.svg` : "application/gpx+xml" === e12 ? `${p11}gpx-32.svg` : "application/x-dwf" === e12 ? `${p11}cad-32.svg` : "application/postscript" === e12 || "application/json" === e12 || "text/xml" === e12 || "model/vrml" === e12 ? `${p11}code-32.svg` : "application/x-zip-compressed" === e12 || "application/x-7z-compressed" === e12 || "application/x-gzip" === e12 || "application/x-tar" === e12 || "application/x-gtar" === e12 || "application/x-bzip2" === e12 || "application/gzip" === e12 || "application/x-compress" === e12 || "application/x-apple-diskimage" === e12 || "application/x-rar-compressed" === e12 || "application/zip" === e12 ? `${p11}zip-32.svg` : e12.includes("image/") ? `${p11}image-32.svg` : e12.includes("audio/") ? `${p11}sound-32.svg` : e12.includes("video/") ? `${p11}video-32.svg` : e12.includes("msexcel") || e12.includes("ms-excel") || e12.includes("spreadsheetml") ? `${p11}excel-32.svg` : e12.includes("msword") || e12.includes("ms-word") || e12.includes("wordprocessingml") ? `${p11}word-32.svg` : e12.includes("powerpoint") || e12.includes("presentationml") ? `${p11}report-32.svg` : `${p11}generic-32.svg` : `${p11}generic-32.svg`;
}

// node_modules/@arcgis/core/widgets/Attachments.js
var v3 = { addButton: true, addSubmitButton: true, cancelAddButton: true, cancelUpdateButton: true, deleteButton: true, errorMessage: true, progressBar: true, updateButton: true };
var y4 = { base: "esri-attachments", loaderContainer: "esri-attachments__loader-container", loader: "esri-attachments__loader", fadeIn: "esri-attachments--fade-in", container: "esri-attachments__container", containerList: "esri-attachments__container--list", containerPreview: "esri-attachments__container--preview", actions: "esri-attachments__actions", deleteButton: "esri-attachments__delete-button", addAttachmentButton: "esri-attachments__add-attachment-button", errorMessage: "esri-attachments__error-message", items: "esri-attachments__items", item: "esri-attachments__item", itemButton: "esri-attachments__item-button", itemMask: "esri-attachments__item-mask", itemMaskIcon: "esri-attachments__item-mask--icon", itemImage: "esri-attachments__image", itemImageResizable: "esri-attachments__image--resizable", itemLabel: "esri-attachments__label", itemFilename: "esri-attachments__filename", itemChevronIcon: "esri-attachments__item-chevron-icon", itemLink: "esri-attachments__item-link", itemLinkOverlay: "esri-attachments__item-link-overlay", itemLinkOverlayIcon: "esri-attachments__item-link-overlay-icon", itemEditIcon: "esri-attachments__item-edit-icon", itemAddIcon: "esri-attachments__item-add-icon", itemAddButton: "esri-attachments__item-add-button", formNode: "esri-attachments__form-node", fileFieldset: "esri-attachments__file-fieldset", fileLabel: "esri-attachments__file-label", fileName: "esri-attachments__file-name", fileInput: "esri-attachments__file-input", metadata: "esri-attachments__metadata", metadataFieldset: "esri-attachments__metadata-fieldset", progressBar: "esri-attachments__progress-bar", esriWidget: "esri-widget", esriButton: "esri-button", buttonDisabled: "esri-button--disabled", esriButtonSecondary: "esri-button--secondary", esriButtonTertiary: "esri-button--tertiary", esriButtonThird: "esri-button--third", esriButtonSmall: "esri-button--small", esriButtonHalf: "esri-button--half", empty: "esri-widget__content--empty", iconExternalLink: "esri-icon-link-external", iconEdit: "esri-icon-edit", iconRight: "esri-icon-right", iconLeft: "esri-icon-left", iconPlus: "esri-icon-plus" };
var B3 = window.CSS;
var A3 = class extends O {
  constructor(t7, e12) {
    super(t7, e12), this.abilities = null, this.displayType = "auto", this.graphic = null, this.label = void 0, this.messages = null, this.messagesUnits = null, this.selectedFile = null, this.submitting = false, this.viewModel = new g5(), this.visibleElements = { ...v3 }, this._supportsImageOrientation = B3 && B3.supports && B3.supports("image-orientation", "from-image"), this._addAttachmentForm = null, this._updateAttachmentForm = null;
  }
  initialize() {
    this.own([a(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.attachmentInfos;
    }, "change", () => this.scheduleRender()), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.mode;
    }, () => this._modeChanged(), h)]);
  }
  get effectiveDisplayType() {
    const { displayType: t7 } = this;
    return t7 && "auto" !== t7 ? t7 : this.viewModel.supportsResizeAttachments ? "preview" : "list";
  }
  castVisibleElements(t7) {
    return { ...v3, ...t7 };
  }
  addAttachment() {
    const { _addAttachmentForm: t7, viewModel: s10 } = this;
    return this._set("submitting", true), this._set("error", null), s10.addAttachment(t7).then((t8) => (this._set("submitting", false), this._set("error", null), s10.mode = "view", t8)).catch((t8) => {
      throw this._set("submitting", false), this._set("error", new s2("attachments:add-attachment", this.messages.addErrorMessage, t8)), t8;
    });
  }
  deleteAttachment(t7) {
    const { viewModel: s10 } = this;
    return this._set("submitting", true), this._set("error", null), s10.deleteAttachment(t7).then((t8) => (this._set("submitting", false), this._set("error", null), s10.mode = "view", t8)).catch((t8) => {
      throw this._set("submitting", false), this._set("error", new s2("attachments:delete-attachment", this.messages.deleteErrorMessage, t8)), t8;
    });
  }
  updateAttachment() {
    const { viewModel: t7 } = this, { _updateAttachmentForm: s10 } = this;
    return this._set("submitting", true), this._set("error", null), t7.updateAttachment(s10).then((e12) => (this._set("submitting", false), this._set("error", null), t7.mode = "view", e12)).catch((t8) => {
      throw this._set("submitting", false), this._set("error", new s2("attachments:update-attachment", this.messages.updateErrorMessage, t8)), t8;
    });
  }
  render() {
    const { submitting: t7, viewModel: e12 } = this, { state: s10 } = e12;
    return n2("div", { class: this.classes(y4.base, y4.esriWidget) }, t7 ? this.renderProgressBar() : null, "loading" === s10 ? this.renderLoading() : this.renderAttachments(), this.renderErrorMessage());
  }
  renderErrorMessage() {
    const { error: t7, visibleElements: e12 } = this;
    return t7 && e12.errorMessage ? n2("div", { key: "error-message", class: y4.errorMessage }, t7.message) : null;
  }
  renderAttachments() {
    const { mode: t7, activeAttachmentInfo: e12 } = this.viewModel;
    return "add" === t7 ? this.renderAddForm() : "edit" === t7 ? this.renderDetailsForm(e12) : this.renderAttachmentContainer();
  }
  renderLoading() {
    return n2("div", { class: y4.loaderContainer, key: "loader" }, n2("div", { class: y4.loader }));
  }
  renderProgressBar() {
    return this.visibleElements.progressBar ? n2("div", { class: y4.progressBar, key: "progress-bar" }) : null;
  }
  renderAddForm() {
    const { submitting: t7, selectedFile: e12 } = this, s10 = t7 || !e12, i8 = this.visibleElements.cancelAddButton ? n2("button", { type: "button", bind: this, disabled: t7, onclick: this._cancelForm, class: this.classes(y4.esriButton, y4.esriButtonTertiary, y4.esriButtonSmall, y4.esriButtonHalf, t7 && y4.buttonDisabled) }, this.messages.cancel) : null, a8 = this.visibleElements.addSubmitButton ? n2("button", { type: "submit", disabled: s10, class: this.classes(y4.esriButton, y4.esriButtonSecondary, y4.esriButtonSmall, y4.esriButtonHalf, { [y4.buttonDisabled]: s10 }) }, this.messages.add) : null, n8 = e12 ? n2("span", { key: "file-name", class: y4.fileName }, e12.name) : null, r6 = n2("form", { bind: this, afterCreate: v, afterRemoved: h2, "data-node-ref": "_addAttachmentForm", onsubmit: this._submitAddAttachment }, n2("fieldset", { class: y4.fileFieldset }, n8, n2("label", { class: this.classes(y4.fileLabel, y4.esriButton, y4.esriButtonSecondary) }, e12 ? this.messages.changeFile : this.messages.selectFile, n2("input", { class: y4.fileInput, type: "file", name: "attachment", bind: this, onchange: this._handleFileInputChange }))), a8, i8);
    return n2("div", { key: "add-form-container", class: y4.formNode }, r6);
  }
  renderDetailsForm(t7) {
    const { visibleElements: e12, viewModel: s10, selectedFile: i8, submitting: a8 } = this, { contentType: r6, size: o6, url: l9 } = t7, { abilities: m10 } = s10, d8 = a8 || !i8, c17 = m10.editing && m10.operations.delete && e12.deleteButton ? n2("button", { key: "delete-button", type: "button", disabled: a8, bind: this, onclick: (e13) => this._submitDeleteAttachment(e13, t7), class: this.classes(y4.esriButton, y4.esriButtonSmall, y4.esriButtonTertiary, y4.deleteButton, { [y4.buttonDisabled]: a8 }) }, this.messages.delete) : null, h10 = m10.editing && m10.operations.update && e12.updateButton ? n2("button", { disabled: d8, key: "update-button", type: "submit", class: this.classes(y4.esriButton, y4.esriButtonSmall, y4.esriButtonThird, { [y4.buttonDisabled]: d8 }) }, this.messages.update) : null, u10 = this.visibleElements.cancelUpdateButton ? n2("button", { disabled: a8, key: "cancel-button", type: "button", bind: this, onclick: this._cancelForm, class: this.classes(y4.esriButton, y4.esriButtonSmall, y4.esriButtonTertiary, y4.esriButtonThird, { [y4.buttonDisabled]: a8 }) }, this.messages.cancel) : null, _3 = i8 ? n2("span", { key: "file-name", class: y4.fileName }, i8.name) : null, g10 = m10.editing && m10.operations.update ? n2("fieldset", { key: "file", class: y4.fileFieldset }, _3, n2("label", { class: this.classes(y4.fileLabel, y4.esriButton, y4.esriButtonSecondary) }, this.messages.changeFile, n2("input", { class: y4.fileInput, type: "file", name: "attachment", bind: this, onchange: this._handleFileInputChange }))) : null, v6 = n2("fieldset", { key: "size", class: y4.metadataFieldset }, n2("label", null, L3(this.messagesUnits, o6))), B7 = n2("fieldset", { key: "content-type", class: y4.metadataFieldset }, n2("label", null, r6)), A4 = n2("form", { bind: this, afterCreate: v, afterRemoved: h2, "data-node-ref": "_updateAttachmentForm", onsubmit: this._submitUpdateAttachment }, n2("div", { class: y4.metadata }, v6, B7), g10, n2("div", { class: y4.actions }, c17, u10, h10));
    return n2("div", { key: "edit-form-container", class: y4.formNode }, n2("a", { class: y4.itemLink, href: l9, rel: "noreferrer", target: "_blank" }, this.renderImageMask({ attachmentInfo: t7, size: 400 }), n2("div", { class: y4.itemLinkOverlay }, n2("span", { class: y4.itemLinkOverlayIcon }, n2("svg", { xmlns: "http://www.w3.org/2000/svg", width: "32", height: "32", viewBox: "0 0 32 32" }, n2("path", { d: "M28 13h1v16H3V3h16v1H4v24h24zm-5-9h4.293L15.646 15.638l.707.707L28 4.707V9h1V3h-6z" }), n2("path", { fill: "none", d: "M0 0h32v32H0z" }))))), A4);
  }
  renderImageMask({ attachmentInfo: t7, size: e12 }) {
    const { supportsResizeAttachments: s10 } = this.viewModel, { contentType: i8, name: a8, url: n8 } = t7, r6 = s10 && e8(i8), o6 = this._getCSSTransform(t7, r6), l9 = o6 ? { transform: o6, "image-orientation": "none" } : {}, m10 = n8.includes("?") ? "&" : "?", d8 = r6 ? `${n8}${m10}w=${e12}` : p2(i8), c17 = { [y4.itemMaskIcon]: !r6 }, p11 = { [y4.itemImageResizable]: s10 };
    return n2("div", { class: this.classes(c17, y4.itemMask) }, n2("img", { styles: l9, alt: a8, src: d8, class: this.classes(p11, y4.itemImage) }));
  }
  renderAttachmentInfo({ attachmentInfo: t7, displayType: e12 }) {
    const { viewModel: s10 } = this, { abilities: i8 } = s10, { name: a8, url: n8 } = t7, r6 = this.renderImageMask({ attachmentInfo: t7, size: "list" === e12 ? 48 : 400 }), o6 = i8.editing ? n2("span", { "aria-hidden": "true", class: this.classes(y4.itemChevronIcon, f2(this.container) ? y4.iconLeft : y4.iconRight) }) : null, l9 = [r6, n2("label", { class: y4.itemLabel }, n2("span", { class: y4.itemFilename }, a8 || this.messages.noTitle), o6)], m10 = i8.editing ? n2("button", { key: "details-button", bind: this, class: y4.itemButton, title: this.messages.attachmentDetails, "aria-label": this.messages.attachmentDetails, "data-attachment-info-id": t7.id, onclick: () => this._startEditAttachment(t7), type: "button" }, l9) : n2("a", { key: "details-link", class: y4.itemButton, href: n8, target: "_blank" }, l9);
    return n2("li", { class: y4.item, key: t7 }, m10);
  }
  renderAttachmentContainer() {
    const { effectiveDisplayType: t7, viewModel: e12, visibleElements: s10 } = this, { attachmentInfos: i8, abilities: a8 } = e12, n8 = i8 && i8.length, r6 = { [y4.containerList]: "preview" !== t7, [y4.containerPreview]: "preview" === t7 }, o6 = a8.editing && a8.operations.add && s10.addButton ? n2("button", { bind: this, onclick: () => this._startAddAttachment(), class: this.classes(y4.esriButton, y4.esriButtonTertiary, y4.addAttachmentButton), type: "button" }, n2("span", { "aria-hidden": "true", class: this.classes(y4.itemAddIcon, y4.iconPlus) }), this.messages.add) : null, l9 = n8 ? n2("ul", { class: y4.items }, i8.toArray().map((e13) => this.renderAttachmentInfo({ attachmentInfo: e13, displayType: t7 }))) : n2("div", { class: y4.empty }, this.messages.noAttachments);
    return n2("div", { key: "attachments-container", class: this.classes(y4.container, r6) }, l9, o6);
  }
  _modeChanged() {
    this._set("error", null), this._set("selectedFile", null);
  }
  _handleFileInputChange(t7) {
    const e12 = t7.target, s10 = e12 && e12.files && e12.files.item(0);
    this._set("selectedFile", s10);
  }
  _submitDeleteAttachment(t7, e12) {
    t7.preventDefault(), this.deleteAttachment(e12);
  }
  _submitAddAttachment(t7) {
    t7.preventDefault(), this.addAttachment();
  }
  _submitUpdateAttachment(t7) {
    t7.preventDefault(), this.updateAttachment();
  }
  _startEditAttachment(t7) {
    const { viewModel: e12 } = this;
    e12.activeAttachmentInfo = t7, e12.mode = "edit";
  }
  _startAddAttachment() {
    this.viewModel.mode = "add";
  }
  _cancelForm(t7) {
    t7.preventDefault(), this.viewModel.mode = "view";
  }
  _getCSSTransform(t7, e12) {
    const { orientationInfo: s10 } = t7;
    return !this._supportsImageOrientation && e12 && s10 ? [s10.rotation ? `rotate(${s10.rotation}deg)` : "", s10.mirrored ? "scaleX(-1)" : ""].join(" ") : "";
  }
};
e([o("viewModel.abilities")], A3.prototype, "abilities", void 0), e([d()], A3.prototype, "displayType", void 0), e([d({ readOnly: true })], A3.prototype, "effectiveDisplayType", null), e([o("viewModel.graphic")], A3.prototype, "graphic", void 0), e([d({ aliasOf: { source: "messages.widgetLabel", overridable: true } })], A3.prototype, "label", void 0), e([d(), e3("esri/widgets/Attachments/t9n/Attachments")], A3.prototype, "messages", void 0), e([d(), e3("esri/core/t9n/Units")], A3.prototype, "messagesUnits", void 0), e([d({ readOnly: true })], A3.prototype, "selectedFile", void 0), e([d({ readOnly: true })], A3.prototype, "submitting", void 0), e([d({ readOnly: true })], A3.prototype, "error", void 0), e([d({ type: g5 })], A3.prototype, "viewModel", void 0), e([d()], A3.prototype, "visibleElements", void 0), e([s3("visibleElements")], A3.prototype, "castVisibleElements", null), A3 = e([n("esri.widgets.Attachments")], A3);
var w3 = A3;

// node_modules/@arcgis/core/widgets/Feature/FeatureAttachments/FeatureAttachmentsViewModel.js
var o2 = class extends g5 {
  constructor(t7) {
    super(t7), this.description = null, this.title = null;
  }
};
e([d()], o2.prototype, "description", void 0), e([d()], o2.prototype, "title", void 0), o2 = e([n("esri.widgets.Feature.FeatureAttachments.FeatureAttachmentsViewModel")], o2);
var c6 = o2;

// node_modules/@arcgis/core/widgets/Feature/support/FeatureElementInfo.js
var p3 = { base: "esri-feature-element-info", title: "esri-feature-element-info__title", description: "esri-feature-element-info__description" };
var n4 = class extends O {
  constructor(e12, t7) {
    super(e12, t7), this.description = null, this.headingLevel = 2, this.title = null;
  }
  render() {
    return n2("div", { class: p3.base }, this.renderTitle(), this.renderDescription());
  }
  renderTitle() {
    const { title: e12 } = this;
    return e12 ? n2(n3, { level: this.headingLevel, class: p3.title }, e12) : null;
  }
  renderDescription() {
    const { description: e12 } = this;
    return e12 ? n2("div", { key: "description", class: p3.description }, e12) : null;
  }
};
e([d()], n4.prototype, "description", void 0), e([d()], n4.prototype, "headingLevel", void 0), e([d()], n4.prototype, "title", void 0), n4 = e([n("esri.widgets.Feature.support.FeatureElementInfo")], n4);
var c7 = n4;

// node_modules/@arcgis/core/widgets/Feature/FeatureAttachments.js
var d4 = { base: "esri-feature-attachments" };
var h6 = class extends O {
  constructor(e12, t7) {
    super(e12, t7), this._featureElementInfo = null, this.attachmentsWidget = new w3(), this.description = null, this.displayType = null, this.graphic = null, this.headingLevel = 2, this.title = null, this.viewModel = new c6();
  }
  initialize() {
    this._featureElementInfo = new c7(), this.own([l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title, this.headingLevel];
    }, () => this._setupFeatureElementInfo(), h), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.graphic;
    }, (e12) => this.attachmentsWidget.graphic = e12, h)]);
  }
  destroy() {
    this.attachmentsWidget.destroy(), this._featureElementInfo.destroy();
  }
  render() {
    var _a;
    const { attachmentsWidget: e12 } = this;
    return n2("div", { class: d4.base }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), e12 == null ? void 0 : e12.render());
  }
  _setupFeatureElementInfo() {
    const { description: e12, title: t7, headingLevel: s10 } = this;
    this._featureElementInfo.set({ description: e12, title: t7, headingLevel: s10 });
  }
};
e([d({ readOnly: true })], h6.prototype, "attachmentsWidget", void 0), e([o("viewModel.description")], h6.prototype, "description", void 0), e([o("attachmentsWidget.displayType")], h6.prototype, "displayType", void 0), e([o("viewModel.graphic")], h6.prototype, "graphic", void 0), e([d()], h6.prototype, "headingLevel", void 0), e([o("viewModel.title")], h6.prototype, "title", void 0), e([d({ type: c6 })], h6.prototype, "viewModel", void 0), h6 = e([n("esri.widgets.Feature.FeatureAttachments")], h6);
var m4 = h6;

// node_modules/@arcgis/core/widgets/Feature/FeatureContent/FeatureContentViewModel.js
var p4 = class extends a3(y) {
  constructor(t7) {
    super(t7), this._loadingPromise = null, this.created = null, this.creator = null, this.destroyer = null, this.graphic = null, this.handles.add(l2(() => this.creator, (t8) => {
      this._destroyContent(), this._createContent(t8);
    }, h));
  }
  destroy() {
    this._destroyContent();
  }
  get state() {
    return this._loadingPromise ? "loading" : "ready";
  }
  _destroyContent() {
    const { created: t7, graphic: e12, destroyer: r6 } = this;
    t7 && (x2(r6, { graphic: e12 }).catch(() => null), this._set("created", null));
  }
  async _createContent(t7) {
    const { graphic: e12 } = this, r6 = x2(t7, { graphic: e12 }).catch(() => null);
    this._loadingPromise = r6, this.notifyChange("state");
    const o6 = await r6;
    r6 === this._loadingPromise && (this._loadingPromise = null, this.notifyChange("state"), this._set("created", o6));
  }
};
e([d({ readOnly: true })], p4.prototype, "created", void 0), e([d()], p4.prototype, "creator", void 0), e([d()], p4.prototype, "destroyer", void 0), e([d({ type: g2 })], p4.prototype, "graphic", void 0), e([d({ readOnly: true })], p4.prototype, "state", null), p4 = e([n("esri.widgets.Feature.FeatureContent.FeatureContentViewModel")], p4);
var l4 = p4;

// node_modules/@arcgis/core/widgets/Feature/FeatureContent.js
var c8 = { base: "esri-feature-content", loaderContainer: "esri-feature-content__loader-container", loader: "esri-feature-content__loader" };
var p5 = class extends O {
  constructor(e12, r6) {
    super(e12, r6), this.creator = null, this.graphic = null, this.viewModel = null, this._addTargetToAnchors = (e13) => {
      Array.from(e13.querySelectorAll("a")).forEach((e14) => {
        T(e14.href) && !e14.hasAttribute("target") && e14.setAttribute("target", "_blank");
      });
    };
  }
  renderLoading() {
    return n2("div", { class: c8.loaderContainer, key: "loader" }, n2("div", { class: c8.loader }));
  }
  renderCreated() {
    var _a;
    const e12 = (_a = this.viewModel) == null ? void 0 : _a.created;
    return e12 ? e12 instanceof HTMLElement ? n2("div", { key: e12, bind: e12, afterCreate: this._attachToNode }) : e4(e12) ? n2("div", { key: e12 }, !e12.destroyed && e12.render()) : n2("div", { key: e12, innerHTML: e12, afterCreate: this._addTargetToAnchors }) : null;
  }
  render() {
    var _a;
    const e12 = (_a = this.viewModel) == null ? void 0 : _a.state;
    return n2("div", { class: c8.base }, "loading" === e12 ? this.renderLoading() : this.renderCreated());
  }
  _attachToNode(e12) {
    const r6 = this;
    e12.appendChild(r6);
  }
};
e([o("viewModel.creator")], p5.prototype, "creator", void 0), e([o("viewModel.graphic")], p5.prototype, "graphic", void 0), e([d({ type: l4 })], p5.prototype, "viewModel", void 0), p5 = e([n("esri.widgets.Feature.FeatureContent")], p5);
var l5 = p5;

// node_modules/@arcgis/core/widgets/Feature/FeatureFields/FeatureFieldsViewModel.js
var l6 = class extends y {
  constructor(o6) {
    super(o6), this.attributes = null, this.expressionInfos = null, this.description = null, this.fieldInfos = null, this.title = null;
  }
  get formattedFieldInfos() {
    const { expressionInfos: o6, fieldInfos: e12 } = this, s10 = [];
    return e12 == null ? void 0 : e12.forEach((e13) => {
      if (!(!e13.hasOwnProperty("visible") || e13.visible))
        return;
      const t7 = e13.clone();
      t7.label = q(t7, o6), s10.push(t7);
    }), s10;
  }
};
e([d()], l6.prototype, "attributes", void 0), e([d({ type: [i4] })], l6.prototype, "expressionInfos", void 0), e([d()], l6.prototype, "description", void 0), e([d({ type: [c2] })], l6.prototype, "fieldInfos", void 0), e([d({ readOnly: true })], l6.prototype, "formattedFieldInfos", null), e([d()], l6.prototype, "title", void 0), l6 = e([n("esri.widgets.Feature.FeatureFields.FeatureFieldsViewModel")], l6);
var n5 = l6;

// node_modules/@arcgis/core/widgets/support/uriUtils.js
var s6 = [{ pattern: /^\s*(https?:\/\/([^\s]+))\s*$/i, target: "_blank", label: "{messages.view}" }, { pattern: /^\s*(tel:([^\s]+))\s*$/i, label: "{hierPart}" }, { pattern: /^\s*(mailto:([^\s]+))\s*$/i, label: "{hierPart}" }, { pattern: /^\s*(arcgis-appstudio-player:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "App Studio Player" }, { pattern: /^\s*(arcgis-collector:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Collector" }, { pattern: /^\s*(arcgis-explorer:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Explorer" }, { pattern: /^\s*(arcgis-navigator:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Navigator" }, { pattern: /^\s*(arcgis-survey123:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Survey123" }, { pattern: /^\s*(arcgis-trek2there:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Trek2There" }, { pattern: /^\s*(arcgis-workforce:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Workforce" }, { pattern: /^\s*(iform:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "iForm" }, { pattern: /^\s*(flow:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "FlowFinity" }, { pattern: /^\s*(lfmobile:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Laserfische" }, { pattern: /^\s*(mspbi:\/\/([^\s]+))\s*$/i, label: "{messages.openInApp}", appName: "Microsoft Power Bi" }];
function a7(e12) {
  let a8 = null;
  return s6.some((s10) => (s10.pattern.test(e12) && (a8 = s10), !!a8)), a8;
}
function p6(s10, p11) {
  if ("string" != typeof p11 || !p11)
    return p11;
  const r6 = a7(p11);
  if (!r6)
    return p11;
  const t7 = p11.match(r6.pattern), n8 = t7 && t7[2], l9 = r2(r2(r6.label, { messages: s10, hierPart: n8 }), { appName: r6.appName }), i8 = r6.target ? ` target="${r6.target}"` : "", o6 = "_blank" === r6.target ? ' rel="noreferrer"' : "";
  return p11.replace(r6.pattern, `<a${i8} href="$1"${o6}>${l9}</a>`);
}

// node_modules/@arcgis/core/widgets/Feature/FeatureFields.js
var u5 = { base: "esri-feature-fields", fieldHeader: "esri-feature-fields__field-header", fieldData: "esri-feature-fields__field-data", fieldDataDate: "esri-feature-fields__field-data--date", esriTable: "esri-widget__table" };
var m5 = class extends O {
  constructor(e12, t7) {
    super(e12, t7), this._featureElementInfo = null, this.attributes = null, this.description = null, this.expressionInfos = null, this.fieldInfos = null, this.title = null, this.viewModel = new n5(), this.messages = null, this.messagesURIUtils = null;
  }
  initialize() {
    this._featureElementInfo = new c7(), this.own(l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title];
    }, () => this._setupFeatureElementInfo(), h));
  }
  destroy() {
    this._featureElementInfo.destroy();
  }
  renderFieldInfo(e12, t7) {
    const { attributes: s10 } = this.viewModel, r6 = e12.fieldName, i8 = e12.label || r6, o6 = s10 ? null == s10[r6] ? "" : s10[r6] : "", l9 = !(!e12.format || !e12.format.dateFormat), a8 = "number" == typeof o6 && !l9 ? this._forceLTR(o6) : p6(this.messagesURIUtils, o6), d8 = { [u5.fieldDataDate]: l9 };
    return n2("tr", { key: `fields-element-info-row-${r6}-${t7}` }, n2("th", { key: `fields-element-info-row-header-${r6}-${t7}`, class: u5.fieldHeader, innerHTML: i8 }), n2("td", { key: `fields-element-info-row-data-${r6}-${t7}`, class: this.classes(u5.fieldData, d8), innerHTML: a8 }));
  }
  renderFields() {
    const { formattedFieldInfos: e12 } = this.viewModel;
    return (e12 == null ? void 0 : e12.length) ? n2("table", { class: u5.esriTable, summary: this.messages.fieldsSummary }, n2("tbody", null, e12.map((e13, t7) => this.renderFieldInfo(e13, t7)))) : null;
  }
  render() {
    var _a;
    return n2("div", { class: u5.base }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), this.renderFields());
  }
  _setupFeatureElementInfo() {
    const { description: e12, title: t7 } = this;
    this._featureElementInfo.set({ description: e12, title: t7 });
  }
  _forceLTR(e12) {
    return `&lrm;${e12}`;
  }
};
e([o("viewModel.attributes")], m5.prototype, "attributes", void 0), e([o("viewModel.description")], m5.prototype, "description", void 0), e([o("viewModel.expressionInfos")], m5.prototype, "expressionInfos", void 0), e([o("viewModel.fieldInfos")], m5.prototype, "fieldInfos", void 0), e([o("viewModel.title")], m5.prototype, "title", void 0), e([d({ type: n5 })], m5.prototype, "viewModel", void 0), e([d(), e3("esri/widgets/Feature/t9n/Feature")], m5.prototype, "messages", void 0), e([d(), e3("esri/widgets/support/t9n/uriUtils")], m5.prototype, "messagesURIUtils", void 0), m5 = e([n("esri.widgets.Feature.FeatureFields")], m5);
var c9 = m5;

// node_modules/@arcgis/core/widgets/Feature/support/relatedFeatureUtils.js
var p7 = "esri.widgets.Feature.support.relatedFeatureUtils";
var c10 = s.getLogger(p7);
var f4 = /* @__PURE__ */ new Map();
function d5(e12) {
  if (!ue(e12))
    return null;
  const [t7, r6] = e12.split("/").slice(1);
  return { layerId: t7, fieldName: r6 };
}
function m6(e12, t7) {
  if (!t7.relationships)
    return null;
  let r6 = null;
  const { relationships: s10 } = t7;
  return s10.some((t8) => t8.id === parseInt(e12, 10) && (r6 = t8, true)), r6;
}
function y5({ originRelationship: e12, relationships: t7, layerId: r6 }) {
  let s10;
  return t7 && t7.some((t8) => (`${t8.relatedTableId}` === r6 && t8.id === e12.id && (s10 = t8), !!s10)), s10;
}
function j5(e12, t7) {
  const r6 = t7.toLowerCase();
  for (const s10 in e12)
    if (s10.toLowerCase() === r6)
      return e12[s10];
  return null;
}
function h7(e12, t7) {
  const r6 = m6(e12, t7);
  if (!r6)
    return;
  return { url: `${t7.url}/${r6.relatedTableId}`, sourceSpatialReference: t7.spatialReference, relation: r6, relatedFields: [], outStatistics: [] };
}
function F2(e12, t7) {
  if (!t7)
    return;
  if (!e12)
    return;
  const { features: r6, statsFeatures: s10 } = e12, o6 = r6 && r6.value;
  t7.relatedFeatures = o6 ? o6.features : [];
  const i8 = s10 && s10.value;
  t7.relatedStatsFeatures = i8 ? i8.features : [];
}
function g6(e12, t7, r6, s10) {
  const o6 = new d2();
  return o6.outFields = ["*"], o6.relationshipId = "number" == typeof t7.id ? t7.id : parseInt(t7.id, 10), o6.objectIds = [e12.attributes[r6.objectIdField]], r6.queryRelatedFeatures(o6, s10);
}
function I3(e12, t7, r6) {
  let s10 = 0;
  const o6 = [];
  for (; s10 < t7.length; )
    o6.push(`${e12} IN (${t7.slice(s10, r6 + s10)})`), s10 += r6;
  return o6.join(" OR ");
}
async function S4(e12, t7, r6, a8) {
  const l9 = r6.layerId.toString(), { layerInfo: u10, relation: p11, relatedFields: c17, outStatistics: f8, url: d8, sourceSpatialReference: m10 } = t7, h10 = y5({ originRelationship: p11, relationships: u10.relationships, layerId: l9 });
  if (h10.relationshipTableId && h10.keyFieldInRelationshipTable) {
    const t8 = (await g6(e12, h10, r6, a8))[e12.attributes[r6.objectIdField]];
    if (!t8)
      return null;
    const o6 = t8.features.map((e13) => e13.attributes[u10.objectIdField]);
    if ((f8 == null ? void 0 : f8.length) > 0 && u10.supportsStatistics) {
      const e13 = new b2();
      e13.where = I3(u10.objectIdField, o6, 1e3), e13.outFields = c17, e13.outStatistics = f8, e13.sourceSpatialReference = m10;
      const r7 = { features: Promise.resolve(t8), statsFeatures: s5(d8, e13) };
      return E(r7);
    }
  }
  const F4 = h10 == null ? void 0 : h10.keyField;
  if (F4) {
    const r7 = B(U4(u10.fields, F4)), l10 = j5(e12.attributes, p11.keyField), c18 = r7 ? `${F4}=${l10}` : `${F4}='${l10}'`, f9 = s5(d8, new b2({ where: c18, outFields: t7.relatedFields, sourceSpatialReference: m10 }), a8), y9 = t7.outStatistics && t7.outStatistics.length > 0 && u10.supportsStatistics ? s5(d8, new b2({ where: c18, outFields: t7.relatedFields, outStatistics: t7.outStatistics, sourceSpatialReference: m10 }), a8) : null, h11 = { features: f9 };
    return y9 && (h11.statsFeatures = y9), E(h11);
  }
  return null;
}
function w4(t7, r6) {
  return U2(t7, { query: { f: "json" }, signal: r6 && r6.signal });
}
function b5({ relatedInfos: e12, layer: r6 }, o6) {
  const i8 = {};
  return e12.forEach((e13, s10) => {
    const { relation: n8 } = e13;
    if (!n8) {
      const e14 = new s2("relation-required", "A relation is required on a layer to retrieve related records.");
      throw c10.error(e14), e14;
    }
    const { relatedTableId: a8 } = n8;
    if ("number" != typeof a8) {
      const e14 = new s2("A related table ID is required on a layer to retrieve related records.");
      throw c10.error(e14), e14;
    }
    const l9 = `${r6.url}/${a8}`, u10 = f4.get(l9), p11 = u10 || w4(l9, o6);
    u10 || f4.set(l9, p11), i8[s10] = p11;
  }), E(i8);
}
function R3({ graphic: e12, relatedInfos: t7, layer: r6 }, o6) {
  const i8 = {};
  return t7.forEach((t8, s10) => {
    t8.layerInfo && (i8[s10] = S4(e12, t8, r6, o6));
  }), E(i8);
}
function $2({ relatedInfo: e12, fieldName: t7, fieldInfo: r6 }) {
  if (e12.relatedFields.push(t7), r6.statisticType) {
    const s10 = new m2({ statisticType: r6.statisticType, onStatisticField: t7, outStatisticFieldName: t7 });
    e12.outStatistics.push(s10);
  }
}
function U4(e12, t7) {
  if (null != e12) {
    t7 = t7.toLowerCase();
    for (const r6 of e12)
      if (r6 && r6.name.toLowerCase() === t7)
        return r6;
  }
  return null;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureMedia/FeatureMediaViewModel.js
var y6 = { chartAnimation: true };
var I4 = class extends y {
  constructor(t7) {
    super(t7), this.abilities = { ...y6 }, this.activeMediaInfoIndex = 0, this.attributes = null, this.description = null, this.fieldInfoMap = null, this.formattedAttributes = null, this.expressionAttributes = null, this.layer = null, this.mediaInfos = null, this.popupTemplate = null, this.relatedInfos = null, this.title = null;
  }
  castAbilities(t7) {
    return { ...y6, ...t7 };
  }
  get activeMediaInfo() {
    return this.formattedMediaInfos[this.activeMediaInfoIndex] || null;
  }
  get formattedMediaInfos() {
    return this._formatMediaInfos() || [];
  }
  get formattedMediaInfoCount() {
    return this.formattedMediaInfos.length;
  }
  setActiveMedia(t7) {
    this._setContentElementMedia(t7);
  }
  next() {
    this._pageContentElementMedia(1);
  }
  previous() {
    this._pageContentElementMedia(-1);
  }
  _setContentElementMedia(t7) {
    const { formattedMediaInfoCount: e12 } = this, o6 = (t7 + e12) % e12;
    this.activeMediaInfoIndex = o6;
  }
  _pageContentElementMedia(t7) {
    const { activeMediaInfoIndex: e12 } = this, o6 = e12 + t7;
    this._setContentElementMedia(o6);
  }
  _formatMediaInfos() {
    const { attributes: t7, mediaInfos: e12, formattedAttributes: o6, expressionAttributes: i8, fieldInfoMap: r6, layer: a8 } = this;
    return e12 == null ? void 0 : e12.map((e13) => {
      const s10 = e13 == null ? void 0 : e13.clone();
      if (!s10)
        return null;
      if (s10.title = $({ attributes: t7, fieldInfoMap: r6, globalAttributes: o6, expressionAttributes: i8, layer: a8, text: s10.title }), s10.caption = $({ attributes: t7, fieldInfoMap: r6, globalAttributes: o6, expressionAttributes: i8, layer: a8, text: s10.caption }), s10.altText = $({ attributes: t7, fieldInfoMap: r6, globalAttributes: o6, expressionAttributes: i8, layer: a8, text: s10.altText }), "image" === s10.type) {
        const { value: t8 } = s10;
        return this._setImageValue({ value: t8, formattedAttributes: o6, layer: a8 }), s10.value.sourceURL ? s10 : void 0;
      }
      if ("pie-chart" === s10.type || "line-chart" === s10.type || "column-chart" === s10.type || "bar-chart" === s10.type) {
        const { value: e14 } = s10;
        return this._setChartValue({ value: e14, chartType: s10.type, attributes: t7, formattedAttributes: o6, layer: a8 }), s10;
      }
      return null;
    }).filter(Boolean);
  }
  _setImageValue(t7) {
    const { fieldInfoMap: e12 } = this, { value: o6, formattedAttributes: i8, layer: r6 } = t7, { linkURL: a8, sourceURL: s10 } = o6;
    if (s10) {
      const t8 = P(s10, r6);
      o6.sourceURL = S3({ formattedAttributes: i8, template: t8, fieldInfoMap: e12 });
    }
    if (a8) {
      const t8 = P(a8, r6);
      o6.linkURL = S3({ formattedAttributes: i8, template: t8, fieldInfoMap: e12 });
    }
  }
  _setChartValue(t7) {
    const { value: e12, attributes: o6, formattedAttributes: i8, chartType: r6, layer: a8 } = t7, { popupTemplate: s10, relatedInfos: l9 } = this, { fields: n8, normalizeField: p11 } = e12;
    e12.fields = A(n8, a8), p11 && (e12.normalizeField = D(p11, a8));
    if (!n8.some((t8) => !!(null != i8[t8] || ue(t8) && l9.size)))
      return;
    const c17 = s10 == null ? void 0 : s10.fieldInfos;
    n8.forEach((t8) => {
      if (ue(t8))
        return void (e12.series = [...e12.series, ...this._getRelatedChartInfos({ fieldInfos: c17, fieldName: t8, formattedAttributes: i8, chartType: r6, value: e12 })]);
      const a9 = this._getChartOption({ value: e12, attributes: o6, chartType: r6, formattedAttributes: i8, fieldName: t8, fieldInfos: c17 });
      e12.series.push(a9);
    });
  }
  _getRelatedChartInfos(t7) {
    var _a;
    const { fieldInfos: e12, fieldName: o6, formattedAttributes: i8, chartType: r6, value: a8 } = t7, s10 = [], l9 = d5(o6), { layerId: n8, fieldName: p11 } = l9, d8 = (_a = this.relatedInfos) == null ? void 0 : _a.get(n8.toString());
    if (!d8)
      return s10;
    const { relatedFeatures: u10, relation: f8 } = d8;
    if (!f8 || !u10)
      return s10;
    const { cardinality: c17 } = f8;
    u10.forEach((t8) => {
      const { attributes: l10 } = t8;
      l10 && Object.keys(l10).forEach((t9) => {
        t9 === p11 && s10.push(this._getChartOption({ value: a8, attributes: l10, formattedAttributes: i8, fieldName: o6, chartType: r6, relatedFieldName: t9, fieldInfos: e12 }));
      });
    });
    return "one-to-many" === c17 || "many-to-many" === c17 ? s10 : [s10[0]];
  }
  _getTooltip({ label: t7, value: e12, chartType: o6 }) {
    return "pie-chart" === o6 ? `${t7}` : `${t7}: ${e12}`;
  }
  _getChartOption(t7) {
    var _a;
    const { value: e12, attributes: o6, formattedAttributes: i8, fieldName: r6, relatedFieldName: l9, fieldInfos: n8, chartType: p11 } = t7, { layer: d8, fieldInfoMap: y9 } = this, { normalizeField: I6, tooltipField: b9 } = e12, v6 = I6 ? ue(I6) ? o6[d5(I6).fieldName] : o6[I6] : null, M4 = l9 && void 0 !== o6[l9] ? o6[l9] : void 0 !== o6[r6] ? o6[r6] : i8[r6], A4 = new i3({ fieldName: r6, value: void 0 === M4 ? null : M4 && v6 ? M4 / v6 : M4 });
    if (ue(r6)) {
      const t8 = y9.get(r6.toLowerCase()), e13 = y9.get(b9.toLowerCase()), o7 = (t8 == null ? void 0 : t8.fieldName) ?? r6, a8 = i8[(e13 == null ? void 0 : e13.fieldName) ?? b9] ?? (t8 == null ? void 0 : t8.label) ?? (t8 == null ? void 0 : t8.fieldName) ?? l9, s10 = i8[o7];
      return A4.tooltip = this._getTooltip({ label: a8, value: s10, chartType: p11 }), A4;
    }
    const g10 = B2(n8, r6), _3 = D(r6, d8), x4 = b9 && void 0 !== i8[b9] ? i8[b9] : q(g10 || new c2({ fieldName: _3 }), (_a = this.popupTemplate) == null ? void 0 : _a.expressionInfos), C3 = i8[_3];
    return A4.tooltip = this._getTooltip({ label: x4, value: C3, chartType: p11 }), A4;
  }
};
e([d()], I4.prototype, "abilities", void 0), e([s3("abilities")], I4.prototype, "castAbilities", null), e([d()], I4.prototype, "activeMediaInfoIndex", void 0), e([d({ readOnly: true })], I4.prototype, "activeMediaInfo", null), e([d()], I4.prototype, "attributes", void 0), e([d()], I4.prototype, "description", void 0), e([d()], I4.prototype, "fieldInfoMap", void 0), e([d()], I4.prototype, "formattedAttributes", void 0), e([d()], I4.prototype, "expressionAttributes", void 0), e([d({ readOnly: true })], I4.prototype, "formattedMediaInfos", null), e([d()], I4.prototype, "layer", void 0), e([d({ readOnly: true })], I4.prototype, "formattedMediaInfoCount", null), e([d()], I4.prototype, "mediaInfos", void 0), e([d()], I4.prototype, "popupTemplate", void 0), e([d()], I4.prototype, "relatedInfos", void 0), e([d()], I4.prototype, "title", void 0), I4 = e([n("esri.widgets.Feature.FeatureMedia.FeatureMediaViewModel")], I4);
var b6 = I4;

// node_modules/@esri/calcite-colors/dist/colors.module.js
var f5 = ["#ffffff", "#858585", "#ffbebe", "#ffebbe", "#ffebaf", "#ffffbe", "#e9ffbe", "#d3ffbe", "#beffe8", "#bee8ff", "#bed2ff", "#e8beff", "#ffbee8", "#ebebeb", "#707070", "#ff7f7f", "#ffa77f", "#ffd37f", "#ffff73", "#d1ff73", "#a3ff73", "#73ffdf", "#73dfff", "#73b2ff", "#df73ff", "#ff73df", "#d6d6d6", "#5c5c5c", "#ff0000", "#ff5500", "#ffaa00", "#ffff00", "#aaff00", "#55ff00", "#00ffc5", "#00c5ff", "#0070ff", "#c500ff", "#ff00c5", "#c2c2c2", "#474747", "#e60000", "#e64c00", "#e69800", "#e6e600", "#98e600", "#4ce600", "#00e6a9", "#00a9e6", "#005ce6", "#a900e6", "#e600a9", "#adadad", "#242424", "#a80000", "#a83800", "#a87000", "#a8a800", "#70a800", "#38a800", "#00a884", "#0084a8", "#004da8", "#8400a8", "#a80084", "#999999", "#1a1a1a", "#730000", "#732600", "#734c00", "#737300", "#4c7300", "#267300", "#00734c", "#004c73", "#002673", "#4c0073", "#73004"];
var b7 = [].concat(f5.slice(30, 39), f5.slice(28, 30).reverse());
var e9 = [{ name: "default", colors: b7 }, { name: "cat-dark", colors: ["#ed5151", "#149ece", "#a7c636", "#9e559c", "#fc921f", "#ffde3e", "#f789d8", "#b7814a", "#3caf99", "#6b6bd6", "#b54779", "#7f7f7f"] }, { name: "tropical-bliss", colors: ["#fce138", "#ff9399", "#fcd27e", "#f1983c", "#a553b7", "#b1a9d0", "#6ecffc", "#4c81cd", "#fc6f84", "#fc3e5a", "#6af689", "#48885c"] }, { name: "desert-blooms", colors: ["#102432", "#144d59", "#ffc730", "#ed9310", "#a64f1b", "#661510", "#d9351a", "#b31515", "#4a0932", "#8c213f", "#18382e", "#2c6954"] }, { name: "under-the-sea", colors: ["#bf9727", "#607100", "#00734c", "#704489", "#01acca", "#024e76", "#f09100", "#ea311f", "#c6004b", "#7570b3", "#666666", "#333333"] }, { name: "vibrant-rainbow", colors: ["#fffb00", "#f5cb11", "#9fd40c", "#46e39c", "#32b8a6", "#7ff2fa", "#ac08cc", "#dd33ff", "#eb7200", "#e8a784", "#bf2e2e", "#6c7000"] }, { name: "ocean-bay", colors: ["#191921", "#11495c", "#78b1c2", "#454f4b", "#8f8f82", "#9be0c0", "#87b051", "#f7ec88", "#ebdcc1", "#dbb658", "#c43541", "#75351e"] }, { name: "prairie-summer", colors: ["#332424", "#751555", "#d47013", "#d68989", "#211173", "#82aad6", "#7bfaeb", "#6ec9a8", "#6b6408", "#eada40", "#ccc54a", "#1fc235"] }, { name: "pastel-chalk", colors: ["#fffd99", "#f5e6a4", "#c1d48c", "#b8e3d0", "#a0b8b5", "#cbf7fa", "#d791f2", "#dfc1eb", "#f2b983", "#e8c4b2", "#bf8e8e", "#94995c"] }, { name: "seq-yellow-orange-red-bright", colors: ["#910000", "#b1260b", "#c0370f", "#e05919", "#ef6a1d", "#ff7b22", "#ffa143", "#ffb454", "#ffda74", "#ffed85"] }, { name: "seq-reds-bright", colors: ["#57453b", "#7b4238", "#9f4036", "#c23d33", "#d7483c", "#ec5244", "#f3696c", "#f9816c", "#ffc4ae", "#fff0dc"] }, { name: "seq-purples-bright", colors: ["#4e465c", "#5a4a78", "#695291", "#775baa", "#8663c3", "#946bdc", "#aa89e8", "#c1a6f3", "#d7c4ff", "#e6e1ff"] }, { name: "seq-blues-bright", colors: ["#404d54", "#435c6c", "#48799d", "#4b88b6", "#4d96ce", "#50a5e7", "#74bbed", "#98d0f3", "#bce6f9", "#e6faff"] }, { name: "seq-greens-bright", colors: ["#39544c", "#386757", "#368165", "#359b73", "#33b581", "#4bc392", "#64d2a2", "#7ce0b3", "#cbf6d9", "#f4ffea"] }, { name: "seq-browns-bright", colors: ["#524834", "#715b38", "#8f6e3c", "#ae8140", "#cc9444", "#eba748", "#eeb664", "#f0c47f", "#f9e0b7", "#fff8eb"] }];

// node_modules/@arcgis/core/widgets/support/chartUtils.js
var n6 = "en-us";
var h8 = /* @__PURE__ */ new Map([["ar", () => import("./ar-UWYCPFII.js").then((t7) => t7.a)], ["bg-bg", () => import("./bg_BG-MO7FODKI.js").then((t7) => t7.b)], ["bs-ba", () => import("./bs_BA-KKFABCAX.js").then((t7) => t7.b)], ["ca-es", () => import("./ca_ES-25H5US2V.js").then((t7) => t7.c)], ["cs-cz", () => import("./cs_CZ-WHTROBYK.js").then((t7) => t7.c)], ["da-dk", () => import("./da_DK-VEV66AOC.js").then((t7) => t7.d)], ["de-de", () => import("./de_DE-6443ZK6O.js").then((t7) => t7.d)], ["de-ch", () => import("./de_CH-TWPFJEHB.js").then((t7) => t7.d)], ["el-gr", () => import("./el_GR-LTK4535S.js").then((t7) => t7.e)], ["en-us", () => import("./en_US-2YY6554O.js").then((t7) => t7.e)], ["en-ca", () => import("./en_CA-QSQSM4JJ.js").then((t7) => t7.e)], ["es-es", () => import("./es_ES-AJGPUEAW.js").then((t7) => t7.e)], ["et-ee", () => import("./et_EE-LTG22AM7.js").then((t7) => t7.e)], ["fi-fi", () => import("./fi_FI-RZUQI4TO.js").then((t7) => t7.f)], ["fr-fr", () => import("./fr_FR-22IPJB7Q.js").then((t7) => t7.f)], ["he-il", () => import("./he_IL-K62W4JJ5.js").then((t7) => t7.h)], ["hr-hr", () => import("./hr_HR-NXO6R4WJ.js").then((t7) => t7.h)], ["hu-hu", () => import("./hu_HU-SJJFWT3A.js").then((t7) => t7.h)], ["id-id", () => import("./id_ID-FTR3Y5NP.js").then((t7) => t7.i)], ["it-it", () => import("./it_IT-KHQIIZLC.js").then((t7) => t7.i)], ["ja-jp", () => import("./ja_JP-IIHBWNYB.js").then((t7) => t7.j)], ["ko-kr", () => import("./ko_KR-Y2XLD4ZS.js").then((t7) => t7.k)], ["lt-lt", () => import("./lt_LT-6WJXSRFB.js").then((t7) => t7.l)], ["lv-lv", () => import("./lv_LV-PEXE7PAQ.js").then((t7) => t7.l)], ["nb-no", () => import("./nb_NO-7C2PDNOR.js").then((t7) => t7.n)], ["nl-nl", () => import("./nl_NL-3NTW6EIG.js").then((t7) => t7.n)], ["pl-pl", () => import("./pl_PL-GYVXCGWR.js").then((t7) => t7.p)], ["pt-br", () => import("./pt_BR-RYTJUGXS.js").then((t7) => t7.p)], ["pt-pt", () => import("./pt_PT-KKHSDKV5.js").then((t7) => t7.p)], ["ro-ro", () => import("./ro_RO-P4CQGBLH.js").then((t7) => t7.r)], ["ru-ru", () => import("./ru_RU-46ZXTN2W.js").then((t7) => t7.r)], ["sk-sk", () => import("./sk_SK-WK47WP7I.js").then((t7) => t7.s)], ["sl-sl", () => import("./sl_SL-ZLOQHMA7.js").then((t7) => t7.s)], ["sr-rs", () => import("./sr_RS-CATQKQZP.js").then((t7) => t7.s)], ["sv-se", () => import("./sv_SE-C7FONXZG.js").then((t7) => t7.s)], ["th-th", () => import("./th_TH-64QM6X65.js").then((t7) => t7.t)], ["tr-tr", () => import("./tr_TR-SITPLSGG.js").then((t7) => t7.t)], ["uk-ua", () => import("./uk_UA-A7XUWDNR.js").then((t7) => t7.u)], ["vi-vn", () => import("./vi_VN-CBINZM6P.js").then((t7) => t7.v)], ["zh-cn", () => import("./zh_Hans-NUKCCXNR.js").then((t7) => t7.z)], ["zh-hk", () => import("./zh_Hant-DXX4XR44.js").then((t7) => t7.z)], ["zh-tw", () => import("./zh_Hant-DXX4XR44.js").then((t7) => t7.z)]]);
function e10(t7) {
  const s10 = t7.split("-")[0].toLowerCase();
  let n8 = null;
  for (const e12 of h8.keys())
    if (e12.startsWith(s10)) {
      n8 = e12;
      break;
    }
  return n8;
}
function r4(t7) {
  return t7 ? h8.has(t7.toLowerCase()) ? t7.toLowerCase() : e10(t7) || n6 : n6;
}
var o3;
var i5;
async function c11(t7 = l()) {
  if (t7 = r4(t7), o3 && t7 === i5)
    return o3;
  o3 = import("./chunks-QJBAH4MX.js").then((t8) => t8.i), i5 = t7;
  try {
    const [s10, n8] = await Promise.all([o3, h8.get(i5)()]);
    i5 === t7 && (s10.am4core.options.defaultLocale = n8.default), s10.am4core.options.suppressWarnings = true, s10.am4core.options.autoDispose = true;
  } catch {
    return o3 = null, i5 = null, null;
  }
  return o3;
}
function u6(s10, n8 = "default") {
  const h10 = e9.find((t7) => t7.name === n8);
  return h10 ? h10.colors.map((t7) => s10.color(t7)) : null;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureMedia.js
var M2 = { base: "esri-feature-media", mediaContainer: "esri-feature-media__container", mediaItemContainer: "esri-feature-media__item-container", mediaItem: "esri-feature-media__item", mediaItemTitle: "esri-feature-media__item-title", mediaItemCaption: "esri-feature-media__item-caption", mediaPrevious: "esri-feature-media__previous", mediaPreviousIconLTR: "esri-feature-media__previous-icon", mediaPreviousIconRTL: "esri-feature-media__previous-icon--rtl", mediaNext: "esri-feature-media__next", mediaNextIconLTR: "esri-feature-media__next-icon", mediaNextIconRTL: "esri-feature-media__next-icon--rtl", mediaChart: "esri-feature-media__chart", mediaButton: "esri-feature-media__button", mediaIcon: "esri-feature-media__icon", iconLeftTriangleArrow: "esri-icon-left-triangle-arrow", iconRightTriangleArrow: "esri-icon-right-triangle-arrow" };
var I5 = 0.05;
var y7 = 0.95;
var w5 = 15;
var g7 = "color";
var b8 = "tooltip";
var C2 = "value";
var T2 = "default-line-value";
var x3 = class extends O {
  constructor(e12, t7) {
    super(e12, t7), this._refreshTimer = null, this._refreshIntervalInfo = null, this._featureElementInfo = null, this.attributes = null, this.activeMediaInfoIndex = null, this.description = null, this.fieldInfoMap = null, this.layer = null, this.mediaInfos = null, this.popupTemplate = null, this.relatedInfos = null, this.title = null, this.viewModel = new b6(), this.messages = null, this._getChartDependencies = async (e13) => {
      const t8 = await c11(), { destroyed: i8, viewModel: r6 } = this;
      if (i8 || !r6 || !e13)
        return;
      const { activeMediaInfo: a8 } = r6, o6 = await this._getRendererColors(t8);
      this._renderChart({ chartDiv: e13, mediaInfo: a8, chartsModule: t8, colorMap: o6 });
    };
  }
  initialize() {
    this._featureElementInfo = new c7(), this.own([l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.activeMediaInfo, (_b = this.viewModel) == null ? void 0 : _b.activeMediaInfoIndex];
    }, () => this._setupMediaRefreshTimer(), h), l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.description, (_b = this.viewModel) == null ? void 0 : _b.title];
    }, () => this._setupFeatureElementInfo(), h)]);
  }
  destroy() {
    this._clearMediaRefreshTimer(), this._featureElementInfo.destroy();
  }
  render() {
    var _a;
    return n2("div", { bind: this, class: M2.base, onkeyup: this._handleMediaKeyup }, (_a = this._featureElementInfo) == null ? void 0 : _a.render(), this.renderMedia());
  }
  renderMedia() {
    const { formattedMediaInfoCount: e12 } = this.viewModel;
    return e12 ? n2("div", { key: "media-element-container", class: M2.mediaContainer }, this.renderMediaPageButton("previous"), this.renderMediaInfo(), this.renderMediaPageButton("next")) : null;
  }
  renderImageMediaInfo(e12) {
    const { _refreshIntervalInfo: t7 } = this, { activeMediaInfoIndex: i8, formattedMediaInfoCount: r6 } = this.viewModel, { value: a8, refreshInterval: o6, altText: s10, title: n8, type: l9 } = e12, { sourceURL: d8, linkURL: c17 } = a8, u10 = T(c17) ? "_blank" : "_self", p11 = "_blank" === u10 ? "noreferrer" : "", h10 = o6 ? t7 : null, f8 = h10 ? h10.timestamp : 0, _3 = h10 ? h10.sourceURL : d8, M4 = n2("img", { alt: s10 || n8, key: `media-${l9}-${i8}-${r6}-${f8}`, src: _3 }), I6 = c17 ? n2("a", { title: n8, href: c17, rel: p11, target: u10 }, M4) : null;
    return I6 || M4;
  }
  renderChartMediaInfo(e12) {
    const { activeMediaInfoIndex: t7, formattedMediaInfoCount: i8 } = this.viewModel;
    return n2("div", { key: `media-${e12.type}-${t7}-${i8}`, bind: this, class: M2.mediaChart, afterCreate: this._getChartDependencies });
  }
  renderMediaInfoType() {
    const { activeMediaInfo: e12 } = this.viewModel;
    return e12 ? "image" === e12.type ? this.renderImageMediaInfo(e12) : e12.type.includes("chart") ? this.renderChartMediaInfo(e12) : null : null;
  }
  renderMediaInfo() {
    const { activeMediaInfo: e12 } = this.viewModel;
    if (!e12)
      return null;
    const t7 = e12.title ? n2("div", { key: "media-title", class: M2.mediaItemTitle, innerHTML: e12.title }) : null, i8 = e12.caption ? n2("div", { key: "media-caption", class: M2.mediaItemCaption, innerHTML: e12.caption }) : null;
    return n2("div", { key: "media-container", class: M2.mediaItemContainer }, n2("div", { key: "media-item-container", class: M2.mediaItem }, this.renderMediaInfoType()), t7, i8);
  }
  renderMediaPageButton(e12) {
    if (this.viewModel.formattedMediaInfoCount < 2)
      return null;
    const t7 = "previous" === e12, i8 = t7 ? this.messages.previous : this.messages.next, r6 = t7 ? this.classes(M2.mediaButton, M2.mediaPrevious) : this.classes(M2.mediaButton, M2.mediaNext), a8 = t7 ? this.classes(M2.mediaIcon, M2.mediaPreviousIconLTR, M2.iconLeftTriangleArrow) : this.classes(M2.mediaIcon, M2.mediaNextIconLTR, M2.iconRightTriangleArrow), o6 = t7 ? this.classes(M2.mediaIcon, M2.mediaPreviousIconRTL, M2.iconRightTriangleArrow) : this.classes(M2.mediaIcon, M2.mediaNextIconRTL, M2.iconLeftTriangleArrow), s10 = t7 ? "media-previous" : "media-next", n8 = t7 ? this._previous : this._next;
    return n2("button", { type: "button", key: s10, title: i8, "aria-label": i8, tabIndex: 0, class: r6, bind: this, onclick: n8 }, n2("span", { "aria-hidden": "true", class: a8 }), n2("span", { "aria-hidden": "true", class: o6 }));
  }
  _setupFeatureElementInfo() {
    const { description: e12, title: t7 } = this;
    this._featureElementInfo.set({ description: e12, title: t7 });
  }
  _next() {
    this.viewModel.next();
  }
  _previous() {
    this.viewModel.previous();
  }
  async _getRendererColors(e12) {
    var _a;
    const { am4core: t7 } = e12, i8 = (_a = this.viewModel) == null ? void 0 : _a.layer, r6 = /* @__PURE__ */ new Map();
    if (!i8)
      return r6;
    const a8 = await h3(i8.renderer);
    a8.delete(null);
    return Array.from(a8.values()).every((e13) => 1 === (e13 == null ? void 0 : e13.length)) ? (r6.set(T2, t7.color({ r: 50, g: 50, b: 50, a: 1 })), Array.from(a8.keys()).forEach((e13) => {
      e13 && r6.set(e13, t7.color(a8.get(e13)[0].toCss(true)));
    }), r6) : r6;
  }
  _handleMediaKeyup(e12) {
    const i8 = i(e12);
    "ArrowLeft" === i8 && (e12.stopPropagation(), this.viewModel.previous()), "ArrowRight" === i8 && (e12.stopPropagation(), this.viewModel.next());
  }
  _renderChart(e12) {
    const { abilities: t7 } = this.viewModel, { chartsModule: i8, chartDiv: r6, mediaInfo: a8, colorMap: o6 } = e12, { value: s10, type: n8 } = a8, { am4core: l9 } = i8, d8 = u6(l9);
    function c17(e13) {
      e13 instanceof l9.ColorSet && d8 && (e13.list = d8);
    }
    r3() && l9.useTheme(i8.am4themes_dark);
    const m10 = window.matchMedia("(prefers-reduced-motion: reduce)");
    t7.chartAnimation && !m10.matches ? l9.useTheme(i8.am4themes_animated) : l9.unuseTheme(i8.am4themes_animated), l9.useTheme(c17);
    const u10 = "pie-chart" === n8 ? this._createPieChart(e12) : this._createXYChart(e12);
    r6.setAttribute("aria-label", a8.altText || a8.title), u10.data = s10.series.map((e13) => ({ [b8]: e13.tooltip, [C2]: e13.value, [g7]: o6.get(e13.fieldName) })).filter((e13) => "pie-chart" !== n8 || e13.value > 0);
  }
  _customizeChartTooltip(e12, t7) {
    e12.label.wrap = true, e12.label.maxWidth = 200, e12.autoTextColor = false, e12.getFillFromObject = false, e12.label.fill = t7.color("#ffffff"), e12.background.fill = t7.color({ r: 0, g: 0, b: 0, a: 0.7 });
  }
  _createPieChart(e12) {
    const { chartDiv: t7, chartsModule: i8 } = e12, { am4core: r6, am4charts: a8 } = i8, o6 = r6.create(t7, a8.PieChart);
    o6.rtl = f2(this.container);
    const s10 = o6.series.push(new a8.PieSeries());
    return s10.labels.template.disabled = true, s10.ticks.template.disabled = true, s10.dataFields.value = C2, s10.dataFields.category = b8, this._customizeChartTooltip(s10.tooltip, r6), s10.slices.template.tooltipText = o6.rtl ? "{category}: %{value.percent.formatNumber('#.0')}" : "{category}: {value.percent.formatNumber('#.0')}%", s10.slices.template.propertyFields.fill = g7, s10.slices.template.propertyFields.stroke = g7, o6;
  }
  _getMinSeriesValue(e12) {
    let t7 = 0;
    return e12.forEach((e13) => t7 = Math.min(e13.value, t7)), t7;
  }
  _createColumnChart(e12, t7) {
    const { chartsModule: i8, mediaInfo: r6 } = t7, { value: a8 } = r6, { am4core: o6, am4charts: s10 } = i8, n8 = e12.xAxes.push(new s10.CategoryAxis());
    n8.dataFields.category = b8, n8.renderer.labels.template.disabled = true, this._customizeChartTooltip(n8.tooltip, o6), n8.tooltip.events.on("sizechanged", () => {
      n8.tooltip.dy = -n8.tooltip.contentHeight;
    });
    const l9 = e12.yAxes.push(new s10.ValueAxis()), d8 = l9.renderer.labels.template;
    l9.renderer.minLabelPosition = I5, l9.renderer.maxLabelPosition = y7, l9.min = this._getMinSeriesValue(a8.series), this._customizeChartTooltip(l9.tooltip, o6), d8.wrap = true;
    const c17 = e12.series.push(new s10.ColumnSeries());
    c17.dataFields.valueY = C2, c17.dataFields.categoryX = b8, c17.columns.template.propertyFields.fill = g7, c17.columns.template.propertyFields.stroke = g7, e12.cursor = new s10.XYCursor(), a8.series.length > w5 && (e12.scrollbarX = new o6.Scrollbar());
  }
  _createBarChart(e12, t7) {
    const { chartsModule: i8, mediaInfo: r6 } = t7, { value: a8 } = r6, { am4core: o6, am4charts: s10 } = i8, n8 = e12.yAxes.push(new s10.CategoryAxis());
    n8.dataFields.category = b8, n8.renderer.inversed = true, n8.renderer.labels.template.disabled = true, this._customizeChartTooltip(n8.tooltip, o6), n8.tooltip.events.on("sizechanged", () => {
      n8.tooltip.dx = n8.tooltip.contentWidth;
    });
    const l9 = e12.xAxes.push(new s10.ValueAxis()), d8 = l9.renderer.labels.template;
    l9.renderer.minLabelPosition = I5, l9.renderer.maxLabelPosition = y7, l9.min = this._getMinSeriesValue(a8.series), this._customizeChartTooltip(l9.tooltip, o6), d8.wrap = true;
    const c17 = e12.series.push(new s10.ColumnSeries());
    c17.dataFields.valueX = C2, c17.dataFields.categoryY = b8, c17.columns.template.propertyFields.fill = g7, c17.columns.template.propertyFields.stroke = g7, e12.cursor = new s10.XYCursor(), a8.series.length > w5 && (e12.scrollbarY = new o6.Scrollbar());
  }
  _createLineChart(e12, t7) {
    const { chartsModule: i8, mediaInfo: r6, colorMap: a8 } = t7, { value: o6 } = r6, { am4core: s10, am4charts: n8 } = i8, l9 = e12.xAxes.push(new n8.CategoryAxis());
    l9.dataFields.category = b8, l9.renderer.labels.template.disabled = true, this._customizeChartTooltip(l9.tooltip, s10), l9.tooltip.events.on("sizechanged", () => {
      l9.tooltip.dy = -l9.tooltip.contentHeight;
    });
    const d8 = e12.yAxes.push(new n8.ValueAxis()), c17 = d8.renderer.labels.template;
    d8.renderer.minLabelPosition = I5, d8.renderer.maxLabelPosition = y7, d8.min = this._getMinSeriesValue(o6.series), this._customizeChartTooltip(d8.tooltip, s10), c17.wrap = true;
    const m10 = e12.series.push(new n8.LineSeries());
    m10.dataFields.categoryX = b8, m10.dataFields.valueY = C2, m10.strokeWidth = 1;
    const u10 = a8.get(T2);
    u10 && (m10.stroke = u10);
    const p11 = m10.bullets.push(new n8.CircleBullet());
    p11.propertyFields.fill = g7, p11.propertyFields.stroke = g7, e12.cursor = new n8.XYCursor(), o6.series.length > w5 && (e12.scrollbarX = new s10.Scrollbar());
  }
  _createXYChart(e12) {
    const { chartDiv: t7, chartsModule: i8, mediaInfo: r6 } = e12, { type: a8 } = r6, { am4core: o6, am4charts: s10 } = i8, n8 = o6.create(t7, s10.XYChart);
    return n8.rtl = f2(this.container), "column-chart" === a8 && this._createColumnChart(n8, e12), "bar-chart" === a8 && this._createBarChart(n8, e12), "line-chart" === a8 && this._createLineChart(n8, e12), n8;
  }
  _clearMediaRefreshTimer() {
    const { _refreshTimer: e12 } = this;
    e12 && (clearTimeout(e12), this._refreshTimer = null);
  }
  _updateMediaInfoTimestamp(e12) {
    const t7 = Date.now();
    this._refreshIntervalInfo = { timestamp: t7, sourceURL: this._getImageSource(e12, t7) }, this.scheduleRender();
  }
  _setupMediaRefreshTimer() {
    this._clearMediaRefreshTimer();
    const { activeMediaInfo: e12 } = this.viewModel;
    e12 && "image" === e12.type && e12.refreshInterval && this._setRefreshTimeout(e12);
  }
  _setRefreshTimeout(e12) {
    const { refreshInterval: t7, value: i8 } = e12;
    if (!t7)
      return;
    const r6 = 6e4 * t7;
    this._updateMediaInfoTimestamp(i8.sourceURL);
    const a8 = setInterval(() => {
      this._updateMediaInfoTimestamp(i8.sourceURL);
    }, r6);
    this._refreshTimer = a8;
  }
  _getImageSource(e12, t7) {
    const i8 = e12.includes("?") ? "&" : "?", [r6, a8 = ""] = e12.split("#");
    return `${r6}${i8}timestamp=${t7}${a8 ? "#" : ""}${a8}`;
  }
};
e([o("viewModel.attributes")], x3.prototype, "attributes", void 0), e([o("viewModel.activeMediaInfoIndex")], x3.prototype, "activeMediaInfoIndex", void 0), e([o("viewModel.description")], x3.prototype, "description", void 0), e([o("viewModel.fieldInfoMap")], x3.prototype, "fieldInfoMap", void 0), e([o("viewModel.layer")], x3.prototype, "layer", void 0), e([o("viewModel.mediaInfos")], x3.prototype, "mediaInfos", void 0), e([o("viewModel.popupTemplate")], x3.prototype, "popupTemplate", void 0), e([o("viewModel.relatedInfos")], x3.prototype, "relatedInfos", void 0), e([o("viewModel.title")], x3.prototype, "title", void 0), e([d({ type: b6 })], x3.prototype, "viewModel", void 0), e([d(), e3("esri/widgets/Feature/t9n/Feature")], x3.prototype, "messages", void 0), x3 = e([n("esri.widgets.Feature.FeatureMedia")], x3);
var F3 = x3;

// node_modules/@arcgis/core/widgets/Feature/support/arcadeFeatureUtils.js
var s7 = ["$datastore", "$map", "$layer", "$aggregatedfeatures"];
var n7 = "esri.widgets.Feature.support.arcadeFeatureUtils";
var o4 = s.getLogger(n7);
function c12(e12) {
  return "string" == typeof e12 ? te(ee(e12)) : Array.isArray(e12) ? p8(e12) : "esri.arcade.Dictionary" === (e12 == null ? void 0 : e12.declaredClass) ? l7(e12) : e12;
}
function p8(e12) {
  return `<ul class="esri-widget__list">${e12.map((e13) => `<li>${"string" == typeof e13 ? te(ee(e13)) : e13}</li>`).join("")}</ul>`;
}
function l7(e12) {
  return `<table class="esri-widget__table">${e12.keys().map((r6) => {
    const t7 = e12.field(r6);
    return `<tr><th>${r6}</th><td>${"string" == typeof t7 ? te(ee(t7)) : t7}</td></tr>`;
  }).join("")}</table>`;
}
function u7({ aggregatedFeatures: e12, arcadeUtils: r6, featureSetVars: a8, context: i8, viewInfo: s10, map: n8, graphic: o6, interceptor: c17 }) {
  a8.forEach((a9) => {
    const p11 = a9.toLowerCase(), l9 = { map: n8, spatialReference: s10.sr, interceptor: c17 };
    if ("$map" === p11 && (i8.vars[p11] = r6.convertMapToFeatureSetCollection(l9)), "$layer" === p11 && (i8.vars[p11] = r6.convertFeatureLayerToFeatureSet({ layer: o6.sourceLayer, spatialReference: s10.sr, interceptor: c17 })), "$datastore" === p11 && (i8.vars[p11] = r6.convertServiceUrlToWorkspace({ url: o6.sourceLayer.url, spatialReference: s10.sr, interceptor: c17 })), "$aggregatedfeatures" === p11) {
      const a10 = o6.layer, { fields: n9, objectIdField: l10, geometryType: u10, spatialReference: f8, displayField: g10 } = a10, y9 = new Ke({ fields: n9, objectIdField: l10, geometryType: u10, spatialReference: f8, displayField: g10, ..."feature" === a10.type ? { templates: a10.templates, typeIdField: a10.typeIdField, types: a10.types } : null, source: e12 });
      i8.vars[p11] = r6.convertFeatureLayerToFeatureSet({ layer: y9, spatialReference: s10.sr, interceptor: c17 });
    }
  });
}
function f6() {
  return import("./arcadeUtils-7D7J3JER.js");
}
async function g8({ graphic: e12, view: r6 }) {
  const { isAggregate: t7, layer: a8 } = e12;
  if (!t7 || !a8 || "2d" !== (r6 == null ? void 0 : r6.type))
    return [];
  const i8 = await r6.whenLayerView(a8);
  if (!i8.createQuery || !i8.queryFeatures)
    return [];
  const s10 = i8.createQuery();
  s10.aggregateIds = [e12.getObjectId()];
  const { features: n8 } = await i8.queryFeatures(s10);
  return n8;
}
async function y8({ expressionInfo: e12, arcadeUtils: r6, interceptor: t7, spatialReference: a8, map: i8, graphic: n8, view: c17 }) {
  if (!e12 || !e12.expression)
    return null;
  const p11 = r6.createSyntaxTree(e12.expression), l9 = s7.filter((e13) => r6.hasVariable(p11, e13)), [f8] = await Promise.all([g8({ graphic: n8, view: c17 }), r6.loadScriptDependencies(p11, true, l9)]), y9 = r6.getViewInfo({ spatialReference: a8 }), d8 = r6.createExecContext(n8, y9);
  d8.interceptor = t7, d8.useAsync = true, u7({ aggregatedFeatures: f8, arcadeUtils: r6, featureSetVars: l9, context: d8, viewInfo: y9, map: i8, graphic: n8, interceptor: t7 });
  const m10 = r6.createFunction(p11, d8);
  return r6.executeAsyncFunction(m10, d8).catch((r7) => o4.error("arcade-execution-error", { error: r7, graphic: n8, expressionInfo: e12 }));
}
async function d6({ expressionInfos: e12, spatialReference: t7, graphic: a8, interceptor: i8, map: s10, view: n8 }) {
  if (!e12 || !e12.length)
    return {};
  const o6 = await f6(), p11 = {};
  for (const r6 of e12)
    p11[`expression/${r6.name}`] = y8({ expressionInfo: r6, arcadeUtils: o6, interceptor: i8, spatialReference: t7, map: s10, graphic: a8, view: n8 });
  const l9 = await E(p11), u10 = {};
  for (const r6 in l9)
    u10[r6] = c12(l9[r6].value);
  return u10;
}

// node_modules/@arcgis/core/widgets/Feature/FeatureExpression/FeatureExpressionViewModel.js
var j6 = 1;
var v4 = class extends a3(y) {
  constructor(e12) {
    super(e12), this._abortController = null, this.expressionInfo = null, this.graphic = null, this.contentElement = null, this.contentElementViewModel = null, this.interceptor = null, this.view = null, this._cancelQuery = () => {
      const { _abortController: e13 } = this;
      e13 && e13.abort(), this._abortController = null;
    }, this._createVM = () => {
      var _a, _b;
      const e13 = (_a = this.contentElement) == null ? void 0 : _a.type;
      (_b = this.contentElementViewModel) == null ? void 0 : _b.destroy();
      const t7 = "fields" === e13 ? new n5() : "media" === e13 ? new b6() : "text" === e13 ? new l4() : null;
      this._set("contentElementViewModel", t7);
    }, this._compile = async () => {
      this._cancelQuery();
      const e13 = new AbortController();
      this._abortController = e13, await this._compileExpression(), this._abortController === e13 && (this._abortController = null);
    }, this._compileThrottled = e5(this._compile, j6, this), this._compileExpression = async () => {
      const { expressionInfo: e13, graphic: t7, interceptor: r6, spatialReference: n8, map: s10, view: i8, _abortController: l9 } = this;
      if (!(e13 && t7 && n8 && s10))
        return void this._set("contentElement", null);
      const p11 = await f6();
      if (l9 !== this._abortController)
        return;
      const a8 = await y8({ arcadeUtils: p11, expressionInfo: e13, graphic: t7, interceptor: r6, map: s10, spatialReference: n8, view: i8 });
      if (!a8 || "esri.arcade.Dictionary" !== a8.declaredClass)
        return void this._set("contentElement", null);
      const h10 = await Me(a8, l9.signal), u10 = h10 == null ? void 0 : h10.type, f8 = "media" === u10 ? I.fromJSON(h10) : "text" === u10 ? c4.fromJSON(h10) : "fields" === u10 ? c3.fromJSON(h10) : null;
      this._set("contentElement", f8);
    }, this.handles.add([l2(() => [this.expressionInfo, this.graphic, this.map, this.spatialReference, this.view], () => this._compileThrottled(), h), l2(() => [this.contentElement], () => this._createVM(), h)]);
  }
  destroy() {
    var _a;
    this._cancelQuery(), (_a = this.contentElementViewModel) == null ? void 0 : _a.destroy(), this._set("contentElementViewModel", null), this._set("contentElement", null);
  }
  get spatialReference() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.spatialReference) || null;
  }
  set spatialReference(e12) {
    void 0 !== e12 ? this._override("spatialReference", e12) : this._clearOverride("spatialReference");
  }
  get state() {
    const { _abortController: e12, contentElement: t7, contentElementViewModel: o6 } = this;
    return e12 ? "loading" : t7 || o6 ? "ready" : "disabled";
  }
  get map() {
    var _a;
    return ((_a = this.view) == null ? void 0 : _a.map) || null;
  }
  set map(e12) {
    void 0 !== e12 ? this._override("map", e12) : this._clearOverride("map");
  }
};
e([d()], v4.prototype, "_abortController", void 0), e([d({ type: i2 })], v4.prototype, "expressionInfo", void 0), e([d({ type: g2 })], v4.prototype, "graphic", void 0), e([d({ readOnly: true })], v4.prototype, "contentElement", void 0), e([d({ readOnly: true })], v4.prototype, "contentElementViewModel", void 0), e([d()], v4.prototype, "interceptor", void 0), e([d()], v4.prototype, "spatialReference", null), e([d({ readOnly: true })], v4.prototype, "state", null), e([d()], v4.prototype, "map", null), e([d()], v4.prototype, "view", void 0), v4 = e([n("esri.widgets.Feature.FeatureExpression.FeatureExpressionViewModel")], v4);
var E3 = v4;

// node_modules/@arcgis/core/widgets/Feature/FeatureExpression.js
var c13 = { iconLoading: "esri-icon-loading-indicator esri-rotating", base: "esri-feature-expression", loadingSpinnerContainer: "esri-feature__loading-container", spinner: "esri-feature__loading-spinner" };
var u8 = class extends O {
  constructor(e12, t7) {
    super(e12, t7), this.viewModel = new E3();
  }
  initialize() {
    this.own(l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.contentElementViewModel;
    }, () => this._setupExpressionWidget(), h));
  }
  destroy() {
    this._destroyContentWidget();
  }
  renderLoading() {
    return n2("div", { key: "loading-container", class: c13.loadingSpinnerContainer }, n2("span", { class: this.classes(c13.iconLoading, c13.spinner) }));
  }
  render() {
    var _a;
    const { state: e12 } = this.viewModel;
    return n2("div", { class: c13.base }, "loading" === e12 ? this.renderLoading() : "disabled" === e12 ? null : (_a = this._contentWidget) == null ? void 0 : _a.render());
  }
  _destroyContentWidget() {
    const { _contentWidget: e12 } = this;
    e12 && (e12.viewModel = null, e12.destroy()), this._contentWidget = null;
  }
  _setupExpressionWidget() {
    const { contentElementViewModel: e12, contentElement: t7 } = this.viewModel, o6 = t7 == null ? void 0 : t7.type;
    this._destroyContentWidget();
    const s10 = e12 ? "fields" === o6 ? new c9({ viewModel: e12 }) : "media" === o6 ? new F3({ viewModel: e12 }) : "text" === o6 ? new l5({ viewModel: e12 }) : null : null;
    this._contentWidget = s10, this.scheduleRender();
  }
};
e([d({ type: E3 })], u8.prototype, "viewModel", void 0), u8 = e([n("esri.widgets.Feature.FeatureExpression")], u8);
var m7 = u8;

// node_modules/@arcgis/core/arcade/featureset/support/FeatureSetQueryInterceptor.js
var e11 = class {
  constructor(e12, a8) {
    this.preLayerQueryCallback = e12, this.preRequestCallback = a8, this.preLayerQueryCallback || (this.preLayerQueryCallback = (e13) => {
    }), this.preRequestCallback || (this.preLayerQueryCallback = (e13) => {
    });
  }
};

// node_modules/@arcgis/core/widgets/Feature/FeatureViewModel.js
var q2;
var D2 = 1;
var Q2 = "content-view-models";
var B4 = "esri.widgets.FeatureViewModel";
var G2 = s.getLogger(B4);
var H2 = { attachmentsContent: true, chartAnimation: true, customContent: true, expressionContent: true, fieldsContent: true, mediaContent: true, textContent: true };
var z2 = q2 = class extends y {
  constructor(e12) {
    super(e12), this._handles = new u2(), this._error = null, this._featureAbortController = null, this.graphicChangedThrottled = e5(this._graphicChanged, D2, this), this._expressionAttributes = null, this._graphicExpressionAttributes = null, this.abilities = { ...H2 }, this.content = null, this.contentViewModels = [], this.defaultPopupTemplateEnabled = false, this.formattedAttributes = null, this.lastEditInfo = null, this.relatedInfos = /* @__PURE__ */ new Map(), this.title = "", this.view = null, this._isAllowedContentType = (e13) => {
      const { abilities: t7 } = this;
      return "attachments" === e13.type && t7.attachmentsContent || "custom" === e13.type && t7.customContent || "fields" === e13.type && t7.fieldsContent || "media" === e13.type && t7.mediaContent || "text" === e13.type && t7.textContent || "expression" === e13.type && t7.expressionContent;
    }, this._handles.add(l2(() => [this.graphic, this._effectivePopupTemplate, this.abilities], () => this.graphicChangedThrottled(), h));
  }
  destroy() {
    this._clear(), this._cancelFeatureQuery(), this._error = null, this._handles.destroy(), this._handles = null, this.graphic = null, this._destroyContentViewModels(), this.relatedInfos.clear();
  }
  get _effectivePopupTemplate() {
    return r(this.graphic) ? this.graphic.getEffectivePopupTemplate(this.defaultPopupTemplateEnabled) : null;
  }
  get _fieldInfoMap() {
    return X(Y(this._effectivePopupTemplate), this._sourceLayer);
  }
  get _sourceLayer() {
    return j4(this.graphic);
  }
  castAbilities(e12) {
    return { ...H2, ...e12 };
  }
  get state() {
    return this.graphic ? this._error ? "error" : this.waitingForContent ? "loading" : "ready" : "disabled";
  }
  set graphic(e12) {
    this._set("graphic", e12 ? e12.clone() : null);
  }
  get spatialReference() {
    return this.get("view.spatialReference") || null;
  }
  set spatialReference(e12) {
    void 0 !== e12 ? this._override("spatialReference", e12) : this._clearOverride("spatialReference");
  }
  get map() {
    return this.get("view.map") || null;
  }
  set map(e12) {
    void 0 !== e12 ? this._override("map", e12) : this._clearOverride("map");
  }
  get waitingForContent() {
    return !!this._featureAbortController;
  }
  setActiveMedia(e12, t7) {
    const r6 = this.contentViewModels[e12];
    r6 instanceof b6 && r6.setActiveMedia(t7);
  }
  nextMedia(e12) {
    const t7 = this.contentViewModels[e12];
    t7 instanceof b6 && t7.next();
  }
  previousMedia(e12) {
    const t7 = this.contentViewModels[e12];
    t7 instanceof b6 && t7.previous();
  }
  _clear() {
    this._set("title", ""), this._set("content", null), this._set("formattedAttributes", null);
  }
  async _graphicChanged() {
    this._cancelFeatureQuery(), this._error = null, this._clear();
    const { graphic: e12 } = this;
    if (!e12)
      return;
    const t7 = new AbortController();
    this._featureAbortController = t7;
    try {
      await this._queryFeature({ signal: t7.signal });
    } catch (r6) {
      g(r6) || (this._error = r6, G2.error("error", "The popupTemplate could not be displayed for this feature.", { error: r6, graphic: e12, popupTemplate: this._effectivePopupTemplate }));
    }
    this._featureAbortController === t7 && (this._featureAbortController = null);
  }
  _cancelFeatureQuery() {
    const { _featureAbortController: e12 } = this;
    e12 && e12.abort(), this._featureAbortController = null;
  }
  _compileContentElement(e12, t7) {
    return "attachments" === e12.type ? this._compileAttachments(e12, t7) : "custom" === e12.type ? this._compileCustom(e12, t7) : "fields" === e12.type ? this._compileFields(e12, t7) : "media" === e12.type ? this._compileMedia(e12, t7) : "text" === e12.type ? this._compileText(e12, t7) : "expression" === e12.type ? this._compileExpression(e12, t7) : void 0;
  }
  _compileContent(e12) {
    if (this._destroyContentViewModels(), this.graphic)
      return Array.isArray(e12) ? e12.filter(this._isAllowedContentType).map((e13, t7) => this._compileContentElement(e13, t7)) : "string" == typeof e12 ? this._compileText(new c4({ text: e12 }), 0).text : e12;
  }
  _destroyContentViewModels() {
    var _a;
    (_a = this._handles) == null ? void 0 : _a.remove(Q2), this.contentViewModels.forEach((e12) => e12 && !e12.destroyed && e12.destroy()), this._set("contentViewModels", []);
  }
  _setExpressionContentVM(e12, t7) {
    const { formattedAttributes: r6 } = this, { contentElement: i8, contentElementViewModel: o6 } = e12, s10 = i8 == null ? void 0 : i8.type;
    o6 && s10 && ("fields" === s10 && (this._createFieldsFormattedAttributes({ contentElement: i8, contentElementIndex: t7, formattedAttributes: r6 }), o6.set(this._createFieldsVMParams(i8, t7))), "media" === s10 && (this._createMediaFormattedAttributes({ contentElement: i8, contentElementIndex: t7, formattedAttributes: r6 }), o6.set(this._createMediaVMParams(i8, t7))), "text" === s10 && o6.set(this._createTextVMParams(i8)));
  }
  _compileExpression(e12, t7) {
    const { expressionInfo: r6 } = e12, { graphic: i8, map: o6, spatialReference: s10, view: n8 } = this, a8 = new E3({ expressionInfo: r6, graphic: i8, interceptor: q2.interceptor, map: o6, spatialReference: s10, view: n8 });
    return this.contentViewModels[t7] = a8, this._handles.add(l2(() => a8.contentElementViewModel, () => this._setExpressionContentVM(a8, t7), h), Q2), e12;
  }
  _compileAttachments(e12, t7) {
    const { graphic: r6 } = this, { description: i8, title: o6 } = e12;
    return this.contentViewModels[t7] = new c6({ graphic: r6, ...this._compileTitleAndDesc({ title: o6, description: i8 }) }), e12;
  }
  _compileCustom(e12, t7) {
    const { graphic: r6 } = this, { creator: i8, destroyer: o6 } = e12;
    return this.contentViewModels[t7] = new l4({ graphic: r6, creator: i8, destroyer: o6 }), e12;
  }
  _compileTitleAndDesc({ title: e12, description: t7 }) {
    const { _fieldInfoMap: r6, _sourceLayer: i8, graphic: o6, formattedAttributes: s10, _expressionAttributes: n8 } = this, { attributes: a8 } = o6, l9 = s10.global;
    return { title: $({ attributes: a8, fieldInfoMap: r6, globalAttributes: l9, expressionAttributes: n8, layer: i8, text: e12 }), description: $({ attributes: a8, fieldInfoMap: r6, globalAttributes: l9, expressionAttributes: n8, layer: i8, text: t7 }) };
  }
  _createFieldsVMParams(e12, t7) {
    var _a;
    const { _effectivePopupTemplate: r6, formattedAttributes: i8 } = this, o6 = { ...i8.global, ...i8.content[t7] }, s10 = (_a = (e12 == null ? void 0 : e12.fieldInfos) || (r6 == null ? void 0 : r6.fieldInfos)) == null ? void 0 : _a.filter(({ fieldName: e13 }) => C(e13) || ue(e13) || o6.hasOwnProperty(e13)), n8 = r6 == null ? void 0 : r6.expressionInfos, { description: a8, title: l9 } = e12;
    return { attributes: o6, expressionInfos: n8, fieldInfos: s10, ...this._compileTitleAndDesc({ title: l9, description: a8 }) };
  }
  _compileFields(e12, t7) {
    const r6 = e12.clone(), i8 = new n5(this._createFieldsVMParams(e12, t7));
    return this.contentViewModels[t7] = i8, r6.fieldInfos = i8.formattedFieldInfos.slice(0), r6;
  }
  _createMediaVMParams(e12, t7) {
    const { abilities: r6, graphic: i8, _fieldInfoMap: o6, formattedAttributes: s10, _effectivePopupTemplate: n8, relatedInfos: a8, _sourceLayer: l9, _expressionAttributes: p11 } = this, { attributes: c17 } = i8, { description: d8, mediaInfos: u10, title: f8 } = e12;
    return { abilities: { chartAnimation: r6.chartAnimation }, activeMediaInfoIndex: e12.activeMediaInfoIndex || 0, attributes: c17, layer: l9, fieldInfoMap: o6, formattedAttributes: { ...s10.global, ...s10.content[t7] }, expressionAttributes: p11, mediaInfos: u10, popupTemplate: n8, relatedInfos: a8, ...this._compileTitleAndDesc({ title: f8, description: d8 }) };
  }
  _compileMedia(e12, t7) {
    const r6 = e12.clone(), i8 = new b6(this._createMediaVMParams(e12, t7));
    return r6.mediaInfos = i8.formattedMediaInfos.slice(0), this.contentViewModels[t7] = i8, r6;
  }
  _createTextVMParams(e12) {
    const { graphic: t7, _fieldInfoMap: r6, _sourceLayer: i8, _expressionAttributes: o6 } = this;
    if (e12 && e12.text) {
      const { attributes: s10 } = t7, n8 = this.formattedAttributes.global;
      e12.text = $({ attributes: s10, fieldInfoMap: r6, globalAttributes: n8, expressionAttributes: o6, layer: i8, text: e12.text });
    }
    return { graphic: t7, creator: e12.text };
  }
  _compileText(e12, t7) {
    const r6 = e12.clone();
    return this.contentViewModels[t7] = new l4(this._createTextVMParams(r6)), r6;
  }
  _compileLastEditInfo() {
    const { _effectivePopupTemplate: e12, _sourceLayer: t7, graphic: r6 } = this;
    if (!e12)
      return;
    const { lastEditInfoEnabled: i8 } = e12, o6 = t7 == null ? void 0 : t7.editFieldsInfo;
    return i8 && o6 ? W(o6, r6.attributes) : void 0;
  }
  _compileTitle(e12) {
    const { _fieldInfoMap: t7, _sourceLayer: r6, graphic: i8, _expressionAttributes: o6 } = this, { attributes: s10 } = i8, n8 = this.formattedAttributes.global;
    return $({ attributes: s10, fieldInfoMap: t7, globalAttributes: n8, expressionAttributes: o6, layer: r6, text: e12 });
  }
  async _getTitle() {
    const { _effectivePopupTemplate: e12, graphic: t7 } = this, r6 = e12 == null ? void 0 : e12.title;
    return x2(r6, { graphic: t7 });
  }
  async _getContent() {
    const { _effectivePopupTemplate: e12, graphic: t7 } = this, r6 = e12 == null ? void 0 : e12.content;
    return x2(r6, { graphic: t7 });
  }
  async _queryFeature(e12) {
    const { _featureAbortController: t7, _sourceLayer: r6, graphic: i8, _effectivePopupTemplate: o6, spatialReference: s10, map: n8, view: a8 } = this, { content: { value: p11 }, title: { value: c17 } } = await E({ content: this._getContent(), title: this._getTitle() });
    if (t7 !== this._featureAbortController || !i8)
      return;
    await ae({ graphic: i8, popupTemplate: o6, layer: r6, spatialReference: s10 }, e12);
    const { expressionAttributes: { value: d8 } } = await E({ checkForRelatedFeatures: this._checkForRelatedFeatures(e12), expressionAttributes: d6({ expressionInfos: o6 == null ? void 0 : o6.expressionInfos, spatialReference: s10, graphic: i8, map: n8, interceptor: q2.interceptor, view: a8 }) });
    t7 === this._featureAbortController && i8 && (this._expressionAttributes = d8, this._graphicExpressionAttributes = { ...i8.attributes, ...d8 }, this._set("formattedAttributes", this._createFormattedAttributes(p11)), this._set("title", this._compileTitle(c17)), this._set("lastEditInfo", this._compileLastEditInfo() || null), this._set("content", this._compileContent(p11) || null));
  }
  _createMediaFormattedAttributes({ contentElement: e12, contentElementIndex: t7, formattedAttributes: r6 }) {
    const { _effectivePopupTemplate: i8, graphic: o6, relatedInfos: s10, _sourceLayer: n8, _fieldInfoMap: a8, _graphicExpressionAttributes: l9 } = this;
    r6.content[t7] = ne({ fieldInfos: i8 == null ? void 0 : i8.fieldInfos, graphic: o6, attributes: { ...l9, ...e12.attributes }, layer: n8, fieldInfoMap: a8, relatedInfos: s10 });
  }
  _createFieldsFormattedAttributes({ contentElement: e12, contentElementIndex: t7, formattedAttributes: r6 }) {
    if (e12.fieldInfos) {
      const { graphic: i8, relatedInfos: o6, _sourceLayer: s10, _fieldInfoMap: n8, _graphicExpressionAttributes: a8 } = this;
      r6.content[t7] = ne({ fieldInfos: e12.fieldInfos, graphic: i8, attributes: { ...a8, ...e12.attributes }, layer: s10, fieldInfoMap: n8, relatedInfos: o6 });
    }
  }
  _createFormattedAttributes(e12) {
    const { _effectivePopupTemplate: t7, graphic: r6, relatedInfos: i8, _sourceLayer: o6, _fieldInfoMap: s10, _graphicExpressionAttributes: n8 } = this, a8 = t7 == null ? void 0 : t7.fieldInfos, l9 = { global: ne({ fieldInfos: a8, graphic: r6, attributes: n8, layer: o6, fieldInfoMap: s10, relatedInfos: i8 }), content: [] };
    return Array.isArray(e12) && e12.forEach((e13, t8) => {
      "fields" === e13.type && this._createFieldsFormattedAttributes({ contentElement: e13, contentElementIndex: t8, formattedAttributes: l9 }), "media" === e13.type && this._createMediaFormattedAttributes({ contentElement: e13, contentElementIndex: t8, formattedAttributes: l9 });
    }), l9;
  }
  _checkForRelatedFeatures(e12) {
    const { graphic: t7, _effectivePopupTemplate: r6 } = this;
    return this._queryRelatedInfos(t7, Y(r6), e12);
  }
  async _queryRelatedInfos(e12, t7, r6) {
    const { relatedInfos: i8, _sourceLayer: o6 } = this;
    i8.clear();
    const s10 = r(o6.associatedLayer) ? await o6.associatedLayer.load(r6) : o6;
    if (!s10)
      return;
    const a8 = t7.filter((e13) => e13 && ue(e13.fieldName));
    if (!a8 || !a8.length)
      return;
    t7.forEach((e13) => this._configureRelatedInfo(e13, s10));
    const l9 = await b5({ relatedInfos: i8, layer: s10 }, r6);
    Object.keys(l9).forEach((e13) => {
      var _a;
      const t8 = i8.get(e13.toString()), r7 = (_a = l9[e13]) == null ? void 0 : _a.value;
      t8 && r7 && (t8.layerInfo = r7.data);
    });
    const p11 = await R3({ graphic: e12, relatedInfos: i8, layer: s10 }, r6);
    Object.keys(p11).forEach((e13) => {
      var _a;
      F2((_a = p11[e13]) == null ? void 0 : _a.value, i8.get(e13.toString()));
    });
  }
  _configureRelatedInfo(e12, t7) {
    const { relatedInfos: r6 } = this, i8 = d5(e12.fieldName);
    if (!i8)
      return;
    const { layerId: o6, fieldName: s10 } = i8;
    if (!o6)
      return;
    const n8 = r6.get(o6.toString()) || h7(o6, t7);
    n8 && ($2({ relatedInfo: n8, fieldName: s10, fieldInfo: e12 }), this.relatedInfos.set(o6, n8));
  }
};
z2.interceptor = new e11(pe, me), e([d()], z2.prototype, "_error", void 0), e([d()], z2.prototype, "_featureAbortController", void 0), e([d({ readOnly: true })], z2.prototype, "_effectivePopupTemplate", null), e([d({ readOnly: true })], z2.prototype, "_fieldInfoMap", null), e([d({ readOnly: true })], z2.prototype, "_sourceLayer", null), e([d()], z2.prototype, "abilities", void 0), e([s3("abilities")], z2.prototype, "castAbilities", null), e([d({ readOnly: true })], z2.prototype, "content", void 0), e([d({ readOnly: true })], z2.prototype, "contentViewModels", void 0), e([d({ type: Boolean })], z2.prototype, "defaultPopupTemplateEnabled", void 0), e([d({ readOnly: true })], z2.prototype, "state", null), e([d({ readOnly: true })], z2.prototype, "formattedAttributes", void 0), e([d({ type: g2, value: null })], z2.prototype, "graphic", null), e([d({ readOnly: true })], z2.prototype, "lastEditInfo", void 0), e([d({ readOnly: true })], z2.prototype, "relatedInfos", void 0), e([d()], z2.prototype, "spatialReference", null), e([d({ readOnly: true })], z2.prototype, "title", void 0), e([d()], z2.prototype, "map", null), e([d({ readOnly: true })], z2.prototype, "waitingForContent", null), e([d()], z2.prototype, "view", void 0), z2 = q2 = e([n(B4)], z2);
var J2 = z2;

// node_modules/@arcgis/core/widgets/Feature/support/FeatureContentMixin.js
var i6 = (i8) => {
  let c17 = class extends i8 {
    constructor() {
      super(...arguments), this.renderNodeContent = (e12) => e4(e12) && !e12.destroyed ? n2("div", { key: e12 }, e12.render()) : e12 instanceof HTMLElement ? n2("div", { key: e12, bind: e12, afterCreate: this._attachToNode }) : t4(e12) ? n2("div", { key: e12, bind: e12.domNode, afterCreate: this._attachToNode }) : null;
    }
    _attachToNode(e12) {
      const r6 = this;
      e12.appendChild(r6);
    }
  };
  return c17 = e([n("esri.widgets.Feature.ContentMixin")], c17), c17;
};

// node_modules/@arcgis/core/widgets/Feature.js
var _2 = { iconText: "esri-icon-font-fallback-text", iconLoading: "esri-icon-loading-indicator esri-rotating", esriTable: "esri-widget__table", esriWidget: "esri-widget", base: "esri-feature", container: "esri-feature__size-container", title: "esri-feature__title", main: "esri-feature__main-container", btn: "esri-feature__button", icon: "esri-feature__icon", content: "esri-feature__content", contentElement: "esri-feature__content-element", text: "esri-feature__text", lastEditedInfo: "esri-feature__last-edited-info", fields: "esri-feature__fields", fieldHeader: "esri-feature__field-header", fieldData: "esri-feature__field-data", fieldDataDate: "esri-feature__field-data--date", loadingSpinnerContainer: "esri-feature__loading-container", spinner: "esri-feature__loading-spinner" };
var w6 = { title: true, content: true, lastEditedInfo: true };
var M3 = class extends i6(O) {
  constructor(e12, t7) {
    super(e12, t7), this._contentWidgets = [], this.graphic = null, this.defaultPopupTemplateEnabled = false, this.headingLevel = 2, this.label = void 0, this.messages = null, this.messagesCommon = null, this.messagesURIUtils = null, this.spatialReference = null, this.title = null, this.visibleElements = { ...w6 }, this.map = null, this.view = null, this.viewModel = new J2();
  }
  initialize() {
    this.own(l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.contentViewModels;
    }, () => this._setupContentWidgets(), h));
  }
  loadDependencies() {
    return import("./calcite-notice-TVHHMHMN.js");
  }
  destroy() {
    this._destroyContentWidgets();
  }
  castVisibleElements(e12) {
    return { ...w6, ...e12 };
  }
  render() {
    const { state: e12 } = this.viewModel, t7 = n2("div", { class: _2.container, key: "container" }, this.renderTitle(), "error" === e12 ? this.renderError() : "loading" === e12 ? this.renderLoading() : this.renderContentContainer());
    return n2("div", { class: this.classes(_2.base, _2.esriWidget) }, t7);
  }
  setActiveMedia(e12, t7) {
    this.viewModel.setActiveMedia(e12, t7);
  }
  nextMedia(e12) {
    this.viewModel.nextMedia(e12);
  }
  previousMedia(e12) {
    this.viewModel.previousMedia(e12);
  }
  renderError() {
    const { messagesCommon: e12, messages: t7, visibleElements: s10 } = this;
    return n2("calcite-notice", { active: true, color: "red", icon: "exclamation-mark-circle", scale: "s" }, s10.title ? n2("div", { key: "error-title", slot: "title" }, e12.errorMessage) : null, n2("div", { key: "error-message", slot: "message" }, t7.loadingError));
  }
  renderLoading() {
    return n2("div", { key: "loading-container", class: _2.loadingSpinnerContainer }, n2("span", { class: this.classes(_2.iconLoading, _2.spinner) }));
  }
  renderContentContainer() {
    const { visibleElements: e12 } = this;
    return e12.content ? n2("div", { class: _2.main }, [this.renderContent(), this.renderLastEditInfo()]) : null;
  }
  renderTitle() {
    const { visibleElements: e12, title: t7 } = this;
    return e12.title ? n2(n3, { level: this.headingLevel, class: _2.title, innerHTML: t7 }) : null;
  }
  renderContent() {
    const e12 = this.viewModel.content, t7 = "content";
    if (!e12)
      return null;
    if (Array.isArray(e12))
      return e12.length ? n2("div", { key: `${t7}-content-elements` }, e12.map(this.renderContentElement, this)) : null;
    if ("string" == typeof e12) {
      const e13 = this._contentWidgets[0];
      return !e13 || e13.destroyed ? null : n2("div", { key: `${t7}-content` }, e13.render());
    }
    return this.renderNodeContent(e12);
  }
  renderContentElement(e12, t7) {
    const { visibleElements: s10 } = this;
    if ("boolean" != typeof s10.content && !s10.content[e12.type])
      return null;
    switch (e12.type) {
      case "attachments":
        return this.renderAttachments(t7);
      case "custom":
        return this.renderCustom(e12, t7);
      case "fields":
        return this.renderFields(t7);
      case "media":
        return this.renderMedia(t7);
      case "text":
        return this.renderText(e12, t7);
      case "expression":
        return this.renderExpression(t7);
      default:
        return null;
    }
  }
  renderAttachments(e12) {
    const t7 = this._contentWidgets[e12];
    if (!t7 || t7.destroyed)
      return null;
    const { state: s10, attachmentInfos: i8 } = t7.viewModel;
    return "loading" === s10 || i8.length > 0 ? n2("div", { key: this._buildKey("attachments-element", e12), class: this.classes(_2.contentElement) }, t7.render()) : null;
  }
  renderExpression(e12) {
    const t7 = this._contentWidgets[e12];
    return !t7 || t7.destroyed ? null : n2("div", { key: this._buildKey("expression-element", e12), class: _2.contentElement }, t7.render());
  }
  renderCustom(e12, t7) {
    const { creator: s10 } = e12, i8 = this._contentWidgets[t7];
    return !i8 || i8.destroyed ? null : s10 ? n2("div", { key: this._buildKey("custom-element", t7), class: _2.contentElement }, i8.render()) : null;
  }
  renderFields(e12) {
    const t7 = this._contentWidgets[e12];
    return !t7 || t7.destroyed ? null : n2("div", { key: this._buildKey("fields-element", e12), class: _2.contentElement }, t7.render());
  }
  renderMedia(e12) {
    const t7 = this._contentWidgets[e12];
    return !t7 || t7.destroyed ? null : n2("div", { key: this._buildKey("media-element", e12), class: _2.contentElement }, t7.render());
  }
  renderLastEditInfo() {
    const { visibleElements: e12, messages: t7 } = this, { lastEditInfo: s10 } = this.viewModel;
    if (!s10 || !e12.lastEditedInfo)
      return null;
    const { date: i8, user: n8 } = s10, r6 = "edit" === s10.type ? n8 ? t7.lastEditedByUser : t7.lastEdited : n8 ? t7.lastCreatedByUser : t7.lastCreated, o6 = s4(r6, { date: i8, user: n8 });
    return n2("div", { key: "edit-info-element", class: this.classes(_2.lastEditedInfo, _2.contentElement) }, o6);
  }
  renderText(e12, t7) {
    const s10 = e12.text, i8 = this._contentWidgets[t7];
    return !i8 || i8.destroyed ? null : s10 ? n2("div", { key: this._buildKey("text-element", t7), class: this.classes(_2.contentElement, _2.text) }, i8.render()) : null;
  }
  _buildKey(e12, ...t7) {
    return `${e12}__${this.get("viewModel.graphic.uid") || "0"}-${t7.join("-")}`;
  }
  _destroyContentWidget(e12) {
    e12 && (e12.viewModel = null, !e12.destroyed && e12.destroy());
  }
  _destroyContentWidgets() {
    this._contentWidgets.forEach((e12) => this._destroyContentWidget(e12)), this._contentWidgets = [];
  }
  _setupContentWidgets() {
    this._destroyContentWidgets();
    const { headingLevel: e12, visibleElements: t7 } = this, s10 = this.get("viewModel.content"), { contentViewModels: i8 } = this.viewModel;
    if (Array.isArray(s10))
      s10.forEach((s11, n8) => {
        "attachments" === s11.type && (this._contentWidgets[n8] = new m4({ displayType: s11.displayType, headingLevel: t7.title ? e12 + 1 : e12, viewModel: i8[n8] })), "fields" === s11.type && (this._contentWidgets[n8] = new c9({ viewModel: i8[n8] })), "media" === s11.type && (this._contentWidgets[n8] = new F3({ viewModel: i8[n8] })), "text" === s11.type && (this._contentWidgets[n8] = new l5({ viewModel: i8[n8] })), "custom" === s11.type && (this._contentWidgets[n8] = new l5({ viewModel: i8[n8] })), "expression" === s11.type && (this._contentWidgets[n8] = new m7({ viewModel: i8[n8] }));
      }, this);
    else {
      const e13 = i8[0];
      e13 && !e13.destroyed && (this._contentWidgets[0] = new l5({ viewModel: e13 }));
    }
    this.scheduleRender();
  }
};
e([o("viewModel.graphic")], M3.prototype, "graphic", void 0), e([o("viewModel.defaultPopupTemplateEnabled")], M3.prototype, "defaultPopupTemplateEnabled", void 0), e([d()], M3.prototype, "headingLevel", void 0), e([d({ aliasOf: { source: "messages.widgetLabel", overridable: true } })], M3.prototype, "label", void 0), e([d(), e3("esri/widgets/Feature/t9n/Feature")], M3.prototype, "messages", void 0), e([d(), e3("esri/t9n/common")], M3.prototype, "messagesCommon", void 0), e([d(), e3("esri/widgets/support/t9n/uriUtils")], M3.prototype, "messagesURIUtils", void 0), e([o("viewModel.spatialReference")], M3.prototype, "spatialReference", void 0), e([o("viewModel.title")], M3.prototype, "title", void 0), e([d()], M3.prototype, "visibleElements", void 0), e([s3("visibleElements")], M3.prototype, "castVisibleElements", null), e([o("viewModel.map")], M3.prototype, "map", void 0), e([o("viewModel.view")], M3.prototype, "view", void 0), e([d({ type: J2 })], M3.prototype, "viewModel", void 0), M3 = e([n("esri.widgets.Feature")], M3);
var E4 = M3;

// node_modules/@arcgis/core/widgets/Spinner/SpinnerViewModel.js
var t5 = "esri.widgets.CompassViewModel";
var p9 = class extends h4 {
  constructor(s10) {
    super(s10), this.visible = false;
  }
};
e([d()], p9.prototype, "visible", void 0), p9 = e([n(t5)], p9);
var c14 = p9;

// node_modules/@arcgis/core/widgets/Spinner.js
var c15 = { base: "esri-spinner", spinnerStart: "esri-spinner--start", spinnerFinish: "esri-spinner--finish" };
var h9 = class extends O {
  constructor(i8, s10) {
    super(i8, s10), this._animationDelay = 500, this._animationPromise = null, this.location = null, this.view = null, this.viewModel = new c14(), this.visible = false;
  }
  initialize() {
    this.own([l2(() => this.visible, (i8) => this._visibleChange(i8))]);
  }
  destroy() {
    this._animationPromise = null;
  }
  show(i8) {
    const { location: s10, promise: e12 } = i8;
    s10 && (this.viewModel.location = s10), this.visible = true;
    const o6 = () => this.hide();
    e12 && e12.catch(() => {
    }).then(o6);
  }
  hide() {
    this.visible = false;
  }
  render() {
    const { visible: i8 } = this, { screenLocation: s10 } = this.viewModel, e12 = !!s10, o6 = i8 && e12, t7 = !i8 && e12, r6 = { [c15.spinnerStart]: o6, [c15.spinnerFinish]: t7 }, n8 = this._getPositionStyles();
    return n2("div", { class: this.classes(c15.base, r6), styles: n8 });
  }
  _visibleChange(i8) {
    if (i8)
      return void (this.viewModel.screenLocationEnabled = true);
    const s10 = L(this._animationDelay);
    this._animationPromise = s10, s10.catch(() => {
    }).then(() => {
      this._animationPromise === s10 && (this.viewModel.screenLocationEnabled = false, this._animationPromise = null);
    });
  }
  _getPositionStyles() {
    const { screenLocation: i8, view: e12 } = this.viewModel;
    if (t(e12) || t(i8))
      return {};
    const { padding: o6 } = e12;
    return { left: i8.x - o6.left + "px", top: i8.y - o6.top + "px" };
  }
};
e([o("viewModel.location")], h9.prototype, "location", void 0), e([o("viewModel.view")], h9.prototype, "view", void 0), e([d({ type: c14 })], h9.prototype, "viewModel", void 0), e([o("viewModel.visible")], h9.prototype, "visible", void 0), h9 = e([n("esri.widgets.Spinner")], h9);
var m8 = h9;

// node_modules/@arcgis/core/widgets/Popup/actions.js
var s8 = { iconZoom: "esri-icon-zoom-in-magnifying-glass", iconTrash: "esri-icon-trash", iconBrowseClusteredFeatures: "esri-icon-table" };
var o5 = new a5({ id: "zoom-to-feature", title: "{messages.zoom}", className: s8.iconZoom });
var t6 = new a5({ id: "remove-selected-feature", title: "{messages.remove}", className: s8.iconTrash });
var r5 = new a5({ id: "zoom-to-clustered-features", title: "{messages.zoom}", className: s8.iconZoom });
var i7 = new a5({ id: "browse-clustered-features", title: "{messages.browseClusteredFeatures}", className: s8.iconBrowseClusteredFeatures });

// node_modules/@arcgis/core/widgets/Popup/actionUtils.js
var s9 = "esri.widgets.Popup.PopupViewModel";
var c16 = s.getLogger(s9);
var u9 = (t7) => {
  const { event: s10, view: c17 } = t7, { action: u10 } = s10, d8 = c17 && c17.popup;
  if (!u10)
    return Promise.reject(new s2("trigger-action:missing-arguments", "Event has no action"));
  if (!d8)
    return Promise.reject(new s2("trigger-action:missing-arguments", "view.popup is missing"));
  const { disabled: l9, id: g10 } = u10;
  if (!g10)
    return Promise.reject(new s2("trigger-action:invalid-action", "action.id is missing"));
  if (l9)
    return Promise.reject(new s2("trigger-action:invalid-action", "Action is disabled"));
  if (g10 === o5.id)
    return w7(d8.viewModel).catch(b);
  if (g10 === r5.id)
    return p10(d8.viewModel);
  if (g10 === i7.id)
    return d8.featureMenuOpen = !d8.featureMenuOpen, d8.viewModel.browseClusterEnabled = !d8.viewModel.browseClusterEnabled, Promise.resolve();
  if (d8.viewModel.browseClusterEnabled = false, g10 === t6.id) {
    d8.close();
    const { selectedFeature: t8 } = d8;
    if (!t8)
      return Promise.reject(new s2(`trigger-action:${t6.id}`, "selectedFeature is required", { selectedFeature: t8 }));
    const { sourceLayer: r6 } = t8;
    return r6 ? r6.remove(t8) : c17.graphics.remove(t8), Promise.resolve();
  }
  return Promise.resolve();
};
function d7(e12) {
  const { selectedFeature: t7, location: r6, view: o6 } = e12;
  if (!o6)
    return null;
  if ("3d" === o6.type)
    return t7 || r6;
  return e12.get("selectedFeature.geometry") || r6;
}
function l8(e12) {
  var _a, _b;
  return (e12 == null ? void 0 : e12.isAggregate) && "cluster" === ((_b = (_a = e12 == null ? void 0 : e12.sourceLayer) == null ? void 0 : _a.featureReduction) == null ? void 0 : _b.type);
}
function g9(t7, r6) {
  if ("3d" !== (r6 == null ? void 0 : r6.type) || !t7 || "esri.Graphic" !== t7.declaredClass)
    return true;
  const o6 = r6.getViewForGraphic(t7);
  if (o6 && "whenGraphicBounds" in o6) {
    let r7 = false;
    return o6.whenGraphicBounds(t7, { useViewElevation: true }).then((e12) => {
      r7 = !e12 || !e12.boundingBox || e12.boundingBox[0] === e12.boundingBox[3] && e12.boundingBox[1] === e12.boundingBox[4] && e12.boundingBox[2] === e12.boundingBox[5];
    }).catch(() => {
      const r8 = new s2("zoom-to:invalid-graphic", "Could not zoom to the location of the graphic.", { graphic: t7 });
      c16.error(r8);
    }), r7;
  }
  return true;
}
async function w7(t7) {
  const { location: r6, selectedFeature: i8, view: n8, zoomFactor: a8 } = t7, s10 = d7(t7);
  if (!s10) {
    const t8 = new s2("zoom-to:invalid-target-or-view", "Cannot zoom to location without a target and view.", { target: s10, view: n8 });
    throw c16.error(t8), t8;
  }
  const u10 = n8.scale / a8, l9 = t7.get("selectedFeature.geometry") || r6, w8 = l9 && "point" === l9.type && g9(i8, n8);
  o5.active = true, o5.disabled = true;
  try {
    await t7.view.goTo({ target: s10, scale: w8 ? u10 : void 0 });
  } finally {
    o5.active = false, o5.disabled = false, t7.zoomToLocation = null, w8 && (t7.location = l9);
  }
}
async function p10(t7) {
  const { selectedFeature: r6, view: o6 } = t7;
  if ("2d" !== (o6 == null ? void 0 : o6.type)) {
    const t8 = new s2("zoomToCluster:invalid-view", "View must be 2d MapView.", { view: o6 });
    throw c16.error(t8), t8;
  }
  if (!l8(r6)) {
    const t8 = new s2("zoomToCluster:invalid-selectedFeature", "Selected feature must represent an aggregate/cluster graphic.", { selectedFeature: r6 });
    throw c16.error(t8), t8;
  }
  const n8 = r6.sourceLayer, a8 = await o6.whenLayerView(n8), s10 = a8.createQuery();
  s10.aggregateIds = [r6.getObjectId()], r5.active = true, r5.disabled = true;
  const { extent: u10 } = await a8.queryExtent(s10);
  await o6.goTo({ target: u10 }), r5.active = false, r5.disabled = false;
}
async function f7(e12) {
  const { selectedFeature: t7, view: r6 } = e12, o6 = t7.sourceLayer, i8 = await r6.whenLayerView(o6), n8 = i8.createQuery();
  n8.aggregateIds = [t7.getObjectId()];
  const { extent: a8 } = await i8.queryExtent(n8);
  e12.selectedClusterBoundaryFeature.geometry = a8, r6.graphics.add(e12.selectedClusterBoundaryFeature);
}
async function v5(e12) {
  const { selectedFeature: t7, view: r6 } = e12, o6 = t7.sourceLayer, i8 = await r6.whenLayerView(o6), a8 = i8.createQuery();
  a8.aggregateIds = [t7.getObjectId()], i7.active = true, i7.disabled = true;
  const { features: s10 } = await i8.queryFeatures(a8);
  i7.active = false, i7.disabled = false, r6.popup.open({ features: [t7].concat(s10), featureMenuOpen: true });
}
function m9(e12) {
  const t7 = e12.features.filter((e13) => l8(e13));
  t7.length && (e12.features = t7);
}

// node_modules/@arcgis/core/widgets/Popup/PopupViewModel.js
var S5 = j2.ofType({ key: "type", defaultKeyValue: "button", base: c5, typeMap: { button: a5, toggle: a6 } });
var B5 = () => [o5.clone()];
var R4 = () => [r5.clone(), i7.clone()];
var G3 = "esri.widgets.Popup.PopupViewModel";
var z3 = s.getLogger(G3);
var H3 = class extends e7(h4) {
  constructor(e12) {
    super(e12), this._handles = new u2(), this._pendingPromises = /* @__PURE__ */ new Set(), this._fetchFeaturesController = null, this._selectedClusterFeature = null, this.featurePage = null, this.actions = new S5(), this.activeFeature = null, this.defaultPopupTemplateEnabled = false, this.autoCloseEnabled = false, this.autoOpenEnabled = true, this.browseClusterEnabled = false, this.content = null, this.featuresPerPage = 20, this.featureViewModelAbilities = null, this.featureViewModels = [], this.highlightEnabled = true, this.includeDefaultActions = true, this.selectedClusterBoundaryFeature = new g2({ symbol: new S2({ outline: { width: 1.5, color: "cyan" }, style: "none" }) }), this.title = null, this.updateLocationEnabled = false, this.view = null, this.visible = false, this.zoomFactor = 4, this.zoomToLocation = null;
  }
  get isLoadingFeature() {
    return this.featureViewModels.some((e12) => e12.waitingForContent);
  }
  initialize() {
    this._handles.add([l2(() => [this.autoOpenEnabled, this.view], () => this._autoOpenEnabledChange()), this.on("view-change", () => this._autoClose()), l2(() => [this.highlightEnabled, this.selectedFeature, this.visible, this.view], () => this._highlightSelectedFeature()), l2(() => [this.highlightEnabled, this.activeFeature, this.visible, this.view], () => this._highlightActiveFeature()), l2(() => {
      var _a, _b;
      return (_b = (_a = this.view) == null ? void 0 : _a.animation) == null ? void 0 : _b.state;
    }, (e12) => this._animationStateChange(e12)), l2(() => this.location, (e12) => this._locationChange(e12)), l2(() => this.selectedFeature, (e12) => this._selectedFeatureChange(e12)), l2(() => [this.selectedFeatureIndex, this.featureCount, this.featuresPerPage], () => this._selectedFeatureIndexChange()), l2(() => [this.featurePage, this.selectedFeatureIndex, this.featureCount, this.featuresPerPage, this.featureViewModels], () => this._setGraphicOnFeatureViewModels()), l2(() => this.featureViewModels, () => this._featureViewModelsChange()), this.on("trigger-action", (e12) => u9({ event: e12, view: this.view })), f(() => !this.waitingForResult, () => this._waitingForResultChange(), U), l2(() => {
      var _a, _b;
      return [this.features, (_a = this.view) == null ? void 0 : _a.map, (_b = this.view) == null ? void 0 : _b.spatialReference];
    }, () => this._updateFeatureVMs()), l2(() => {
      var _a;
      return (_a = this.view) == null ? void 0 : _a.scale;
    }, () => this._viewScaleChange()), f(() => !this.visible, () => this.browseClusterEnabled = false), l2(() => this.browseClusterEnabled, (e12) => e12 ? this.enableClusterBrowsing() : this.disableClusterBrowsing())]);
  }
  destroy() {
    this._cancelFetchingFeatures(), this._handles.destroy(), this._handles = null, this._pendingPromises.clear(), this.browseClusterEnabled = false, this.view = null;
  }
  get active() {
    return !(!this.visible || this.waitingForResult);
  }
  get allActions() {
    const e12 = this._get("allActions") || new S5();
    e12.removeAll();
    const { actions: t7, defaultActions: i8, defaultPopupTemplateEnabled: s10, includeDefaultActions: r6, selectedFeature: o6 } = this, n8 = r6 ? i8.concat(t7) : t7, a8 = o6 && ("function" == typeof o6.getEffectivePopupTemplate && o6.getEffectivePopupTemplate(s10) || o6.popupTemplate), l9 = a8 && a8.actions, u10 = a8 && a8.overwriteActions ? l9 : l9 ? l9.concat(n8) : n8;
    return u10 && u10.filter(Boolean).forEach((t8) => e12.add(t8)), e12;
  }
  get defaultActions() {
    const e12 = this._get("defaultActions") || new S5();
    return e12.removeAll(), e12.addMany(l8(this.selectedFeature) ? R4() : B5()), e12;
  }
  get featureCount() {
    return this.features.length;
  }
  get features() {
    return this._get("features") || [];
  }
  set features(e12) {
    const t7 = e12 || [];
    this._set("features", t7);
    const { pendingPromisesCount: i8, promiseCount: s10, selectedFeatureIndex: r6 } = this, o6 = s10 && t7.length;
    o6 && i8 && -1 === r6 ? this.selectedFeatureIndex = 0 : o6 && -1 !== r6 || (this.selectedFeatureIndex = t7.length ? 0 : -1);
  }
  get location() {
    return this._get("location") || null;
  }
  set location(e12) {
    const t7 = this.get("view.spatialReference.isWebMercator");
    e12 && e12.get("spatialReference.isWGS84") && t7 && (e12 = R(e12)), this._set("location", e12);
  }
  get pendingPromisesCount() {
    return this._pendingPromises.size;
  }
  get waitingForResult() {
    return !(!(!!this._fetchFeaturesController || this.pendingPromisesCount > 0) || 0 !== this.featureCount);
  }
  get promiseCount() {
    return this.promises.length;
  }
  get promises() {
    return this._get("promises") || [];
  }
  set promises(e12) {
    if (this._pendingPromises.clear(), this.features = [], !Array.isArray(e12) || !e12.length)
      return this._set("promises", []), void this.notifyChange("pendingPromisesCount");
    this._set("promises", e12), (e12 = e12.slice(0)).forEach((e13) => {
      this._pendingPromises.add(e13);
      const t7 = (t8) => {
        this._pendingPromises.has(e13) && this._updateFeatures(t8), this._updatePendingPromises(e13);
      }, i8 = () => this._updatePendingPromises(e13);
      e13.then(t7, i8);
    }), this.notifyChange("pendingPromisesCount");
  }
  get selectedFeature() {
    const { features: e12, selectedFeatureIndex: t7 } = this;
    if (-1 === t7)
      return null;
    return e12[t7] || null;
  }
  get selectedFeatureIndex() {
    const e12 = this._get("selectedFeatureIndex");
    return "number" == typeof e12 ? e12 : -1;
  }
  set selectedFeatureIndex(e12) {
    const { featureCount: t7 } = this;
    e12 = isNaN(e12) || e12 < -1 || !t7 ? -1 : (e12 + t7) % t7, this.activeFeature = null, this._set("selectedFeatureIndex", e12);
  }
  get selectedFeatureViewModel() {
    return this.featureViewModels[this.selectedFeatureIndex] || null;
  }
  get state() {
    return this.get("view.ready") ? "ready" : "disabled";
  }
  centerAtLocation() {
    const { view: e12 } = this, t7 = d7(this);
    if (!t7) {
      const i8 = new s2("center-at-location:invalid-target-or-view", "Cannot center at a location without a target and view.", { target: t7, view: e12 });
      return z3.error(i8), Promise.reject(i8);
    }
    return this.callGoTo({ target: { target: t7, scale: e12.scale } });
  }
  clear() {
    this.set({ promises: [], features: [], content: null, title: null, location: null, activeFeature: null });
  }
  fetchFeatures(e12, t7) {
    const { view: i8 } = this;
    if (!i8 || !e12) {
      const t8 = new s2("fetch-features:invalid-screenpoint-or-view", "Cannot fetch features without a screenPoint and view.", { screenPoint: e12, view: i8 });
      return z3.error(t8), Promise.reject(t8);
    }
    return i8.fetchPopupFeatures(e12, { event: t7 && t7.event, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, signal: t7 && t7.signal });
  }
  open(e12) {
    const t7 = { updateLocationEnabled: false, promises: [], fetchFeatures: false, ...e12, visible: true }, { fetchFeatures: i8 } = t7;
    delete t7.fetchFeatures, i8 && this._setFetchFeaturesPromises(t7.location);
    const s10 = ["actionsMenuOpen", "collapsed", "featureMenuOpen"];
    for (const r6 of s10)
      delete t7[r6];
    this.set(t7);
  }
  triggerAction(e12) {
    const t7 = this.allActions.getItemAt(e12);
    t7 && !t7.disabled && this.emit("trigger-action", { action: t7 });
  }
  next() {
    return this.selectedFeatureIndex = this.selectedFeatureIndex + 1, this;
  }
  previous() {
    return this.selectedFeatureIndex = this.selectedFeatureIndex - 1, this;
  }
  disableClusterBrowsing() {
    m9(this), this._clearBrowsedClusterGraphics();
  }
  async enableClusterBrowsing() {
    const { view: e12, selectedFeature: t7 } = this;
    "2d" === (e12 == null ? void 0 : e12.type) ? l8(t7) ? (await f7(this), await v5(this)) : z3.warn("enableClusterBrowsing:invalid-selectedFeature: Selected feature must represent an aggregate/cluster graphic.", t7) : z3.warn("enableClusterBrowsing:invalid-view: View must be 2d MapView.", t7);
  }
  _animationStateChange(e12) {
    this.zoomToLocation || (o5.disabled = "waiting-for-target" === e12);
  }
  _clearBrowsedClusterGraphics() {
    var _a;
    const e12 = (_a = this.view) == null ? void 0 : _a.graphics;
    e12 && (e12.remove(this.selectedClusterBoundaryFeature), e12.remove(this._selectedClusterFeature)), this._selectedClusterFeature = null, this.selectedClusterBoundaryFeature.geometry = null;
  }
  _viewScaleChange() {
    if (l8(this.selectedFeature))
      return this.browseClusterEnabled = false, this.visible = false, void this.clear();
    this.browseClusterEnabled && (this.features = [this.selectedFeature]);
  }
  _locationChange(e12) {
    const { selectedFeature: t7, updateLocationEnabled: i8 } = this;
    i8 && e12 && (!t7 || t7.geometry) && this.centerAtLocation();
  }
  _selectedFeatureIndexChange() {
    this.featurePage = this.featureCount > 1 ? Math.floor(this.selectedFeatureIndex / this.featuresPerPage) + 1 : null;
  }
  _featureViewModelsChange() {
    this.featurePage = this.featureCount > 1 ? 1 : null;
  }
  _setGraphicOnFeatureViewModels() {
    const { features: e12, featureCount: t7, featurePage: i8, featuresPerPage: s10, featureViewModels: r6 } = this;
    if (null === i8)
      return;
    const o6 = ((i8 - 1) * s10 + t7) % t7, n8 = o6 + s10;
    r6.slice(o6, n8).forEach((t8, i9) => {
      t8 && !t8.graphic && (t8.graphic = e12[o6 + i9]);
    });
  }
  async _selectedFeatureChange(e12) {
    if (!e12)
      return;
    const { location: t7, updateLocationEnabled: i8, view: s10 } = this;
    if (this.browseClusterEnabled) {
      if (this._selectedClusterFeature && (s10.graphics.remove(this._selectedClusterFeature), this._selectedClusterFeature = null), l8(e12))
        return;
      return e12.symbol = await x(e12), this._selectedClusterFeature = e12, void s10.graphics.add(this._selectedClusterFeature);
    }
    !i8 && t7 || !e12.geometry ? i8 && !e12.geometry && this.centerAtLocation().then(() => {
      this.location = s10.center.clone();
    }) : this.location = e2(this._getPointFromGeometry(e12.geometry));
  }
  _waitingForResultChange() {
    !this.featureCount && this.promises && (this.visible = false);
  }
  _setFetchFeaturesPromises(e12) {
    return this._fetchFeaturesWithController(this._getScreenPoint(e12 || this.location)).then((e13) => {
      const { clientOnlyGraphics: t7, promisesPerLayerView: i8 } = e13, s10 = Promise.resolve(t7), r6 = i8.map((e14) => e14.promise);
      this.promises = [s10, ...r6];
    });
  }
  _destroyFeatureVMs() {
    this.featureViewModels.forEach((e12) => e12 && !e12.destroyed && e12.destroy()), this._set("featureViewModels", []);
  }
  _updateFeatureVMs() {
    const { selectedFeature: e12, features: t7, featureViewModels: i8 } = this;
    if (l8(e12) || (this.browseClusterEnabled = false), this._destroyFeatureVMs(), !t7 || !t7.length)
      return;
    const s10 = i8.slice(0), r6 = [];
    t7.forEach((t8, i9) => {
      var _a, _b;
      if (!t8)
        return;
      let o6 = null;
      if (s10.some((e13, i10) => (e13 && e13.graphic === t8 && (o6 = e13, s10.splice(i10, 1)), !!o6)), o6)
        r6[i9] = o6;
      else {
        const s11 = new J2({ abilities: this.featureViewModelAbilities, defaultPopupTemplateEnabled: this.defaultPopupTemplateEnabled, spatialReference: (_a = this.view) == null ? void 0 : _a.spatialReference, graphic: t8 === e12 ? t8 : null, map: (_b = this.view) == null ? void 0 : _b.map, view: this.view });
        r6[i9] = s11;
      }
    }), s10.forEach((e13) => e13 && !e13.destroyed && e13.destroy()), this._set("featureViewModels", r6);
  }
  _getScreenPoint(e12) {
    const { view: t7 } = this;
    return t7 && e12 && "function" == typeof t7.toScreen ? t7.toScreen(e12) : null;
  }
  _autoOpenEnabledChange() {
    const e12 = "auto-fetch-features", { _handles: t7, autoOpenEnabled: i8 } = this;
    if (t7.remove(e12), i8 && this.view) {
      const i9 = this.view.on("click", (e13) => {
        "mouse" === e13.pointerType && 0 !== e13.button || this._fetchFeaturesAndOpen(e13);
      }, g3.WIDGET);
      t7.add(i9, e12);
    }
  }
  _cancelFetchingFeatures() {
    const e12 = this._fetchFeaturesController;
    e12 && e12.abort(), this._fetchFeaturesController = null, this.notifyChange("waitingForResult");
  }
  _fetchFeaturesWithController(e12, t7) {
    this._cancelFetchingFeatures();
    const i8 = new AbortController(), { signal: s10 } = i8;
    this._fetchFeaturesController = i8, this.notifyChange("waitingForResult");
    const r6 = this.fetchFeatures(e12, { signal: s10, event: t7 });
    return r6.catch(() => {
    }).then(() => {
      this._fetchFeaturesController = null, this.notifyChange("waitingForResult");
    }), r6;
  }
  _fetchFeaturesAndOpen(e12) {
    const { screenPoint: t7, mapPoint: i8 } = e12, { view: s10 } = this;
    this._fetchFeaturesWithController(t7, e12).then((e13) => {
      const { clientOnlyGraphics: t8, promisesPerLayerView: r6, location: o6 } = e13, n8 = [Promise.resolve(t8), ...r6.map((e14) => e14.promise)];
      return s10.popup.open({ location: o6 || i8, promises: n8 }), e13;
    });
  }
  _updatePendingPromises(e12) {
    e12 && this._pendingPromises.has(e12) && (this._pendingPromises.delete(e12), this.notifyChange("pendingPromisesCount"));
  }
  _autoClose() {
    this.autoCloseEnabled && (this.visible = false);
  }
  _getPointFromGeometry(e12) {
    return t(e12) ? null : "point" === e12.type ? e12 : "extent" === e12.type ? e12.center : "polygon" === e12.type ? e12.centroid : "multipoint" === e12.type || "polyline" === e12.type ? e12.extent.center : null;
  }
  async _getLayerView(e12, t7) {
    return await e12.when(), e12.whenLayerView(t7);
  }
  _getHighlightLayer(e12) {
    const { layer: t7, sourceLayer: i8 } = e12;
    return "map-notes" === (i8 == null ? void 0 : i8.type) || "subtype-group" === (i8 == null ? void 0 : i8.type) ? i8 : t7;
  }
  _getHighlightTarget(e12, t7) {
    const i8 = "imagery" === t7.type ? void 0 : "objectIdField" in t7 && t7.objectIdField, s10 = e12.attributes;
    return s10 && i8 && s10[i8] || e12;
  }
  async _highlightActiveFeature() {
    const e12 = "highlight-active-feature";
    this._handles.remove(e12);
    const { highlightEnabled: t7, view: i8, activeFeature: s10, visible: r6 } = this;
    if (!(s10 && i8 && t7 && r6))
      return;
    const o6 = this._getHighlightLayer(s10);
    if (!(o6 && o6 instanceof b3))
      return;
    const n8 = this._getLayerView(i8, o6);
    this._highlightActiveFeaturePromise = n8;
    const a8 = await n8;
    if (!(a8 && e6(a8) && this._highlightActiveFeaturePromise === n8 && this.activeFeature && this.highlightEnabled))
      return;
    const l9 = a8.highlight(this._getHighlightTarget(s10, o6));
    this._handles.add(l9, e12);
  }
  async _highlightSelectedFeature() {
    const e12 = "highlight-selected-feature";
    this._handles.remove(e12);
    const { selectedFeature: t7, highlightEnabled: i8, view: s10, visible: r6 } = this;
    if (!(t7 && s10 && i8 && r6))
      return;
    const o6 = this._getHighlightLayer(t7);
    if (!(o6 && o6 instanceof b3))
      return;
    const n8 = this._getLayerView(s10, o6);
    this._highlightSelectedFeaturePromise = n8;
    const a8 = await n8;
    if (!(a8 && e6(a8) && this._highlightSelectedFeaturePromise === n8 && this.selectedFeature && this.highlightEnabled && this.visible))
      return;
    const l9 = a8.highlight(this._getHighlightTarget(t7, o6));
    this._handles.add(l9, e12);
  }
  _updateFeatures(e12) {
    const { features: t7 } = this;
    if (!e12 || !e12.length)
      return;
    if (!t7.length)
      return void (this.features = e12);
    const i8 = e12.filter((e13) => !t7.includes(e13));
    this.features = t7.concat(i8);
  }
};
e([d()], H3.prototype, "featurePage", void 0), e([d()], H3.prototype, "isLoadingFeature", null), e([d({ type: S5 })], H3.prototype, "actions", void 0), e([d({ readOnly: true })], H3.prototype, "active", null), e([d()], H3.prototype, "activeFeature", void 0), e([d({ readOnly: true })], H3.prototype, "allActions", null), e([d({ type: Boolean })], H3.prototype, "defaultPopupTemplateEnabled", void 0), e([d()], H3.prototype, "autoCloseEnabled", void 0), e([d()], H3.prototype, "autoOpenEnabled", void 0), e([d()], H3.prototype, "browseClusterEnabled", void 0), e([d()], H3.prototype, "content", void 0), e([d({ type: S5, readOnly: true })], H3.prototype, "defaultActions", null), e([d({ readOnly: true })], H3.prototype, "featureCount", null), e([d()], H3.prototype, "features", null), e([d()], H3.prototype, "featuresPerPage", void 0), e([d()], H3.prototype, "featureViewModelAbilities", void 0), e([d({ readOnly: true })], H3.prototype, "featureViewModels", void 0), e([d()], H3.prototype, "highlightEnabled", void 0), e([d()], H3.prototype, "includeDefaultActions", void 0), e([d({ type: j })], H3.prototype, "location", null), e([d({ readOnly: true })], H3.prototype, "pendingPromisesCount", null), e([d({ readOnly: true })], H3.prototype, "selectedClusterBoundaryFeature", void 0), e([d({ readOnly: true })], H3.prototype, "waitingForResult", null), e([d({ readOnly: true })], H3.prototype, "promiseCount", null), e([d()], H3.prototype, "promises", null), e([d({ value: null, readOnly: true })], H3.prototype, "selectedFeature", null), e([d({ value: -1 })], H3.prototype, "selectedFeatureIndex", null), e([d({ readOnly: true })], H3.prototype, "selectedFeatureViewModel", null), e([d({ readOnly: true })], H3.prototype, "state", null), e([d()], H3.prototype, "title", void 0), e([d()], H3.prototype, "updateLocationEnabled", void 0), e([d()], H3.prototype, "view", void 0), e([d()], H3.prototype, "visible", void 0), e([d()], H3.prototype, "zoomFactor", void 0), e([d()], H3.prototype, "zoomToLocation", void 0), e([d()], H3.prototype, "centerAtLocation", null), H3 = e([n(G3)], H3);
var U5 = H3;

// node_modules/@arcgis/core/widgets/Popup.js
var N2 = "selected-index";
var T3 = 0;
var B6 = "popup-spinner";
var D3 = { iconLeftTriangleArrow: "esri-icon-left-triangle-arrow", iconRightTriangleArrow: "esri-icon-right-triangle-arrow", iconDockToTop: "esri-icon-maximize", iconDockToBottom: "esri-icon-dock-bottom", iconDockToLeft: "esri-icon-dock-left", iconDockToRight: "esri-icon-dock-right", iconClose: "esri-icon-close", iconUndock: "esri-icon-minimize", iconCheckMark: "esri-icon-check-mark", iconLoading: "esri-icon-loading-indicator", iconDefaultAction: "esri-icon-default-action", iconActionsMenu: "esri-icon-handle-horizontal", rotating: "esri-rotating", base: "esri-popup", widget: "esri-widget", main: "esri-popup__main-container", loadingContainer: "esri-popup__loading-container", isCollapsible: "esri-popup--is-collapsible", isCollapsed: "esri-popup--is-collapsed", shadow: "esri-popup--shadow", isDocked: "esri-popup--is-docked", isDockedTopLeft: "esri-popup--is-docked-top-left", isDockedTopCenter: "esri-popup--is-docked-top-center", isDockedTopRight: "esri-popup--is-docked-top-right", isDockedBottomLeft: "esri-popup--is-docked-bottom-left", isDockedBottomCenter: "esri-popup--is-docked-bottom-center", isDockedBottomRight: "esri-popup--is-docked-bottom-right", alignTopCenter: "esri-popup--aligned-top-center", alignBottomCenter: "esri-popup--aligned-bottom-center", alignTopLeft: "esri-popup--aligned-top-left", alignBottomLeft: "esri-popup--aligned-bottom-left", alignTopRight: "esri-popup--aligned-top-right", alignBottomRight: "esri-popup--aligned-bottom-right", isFeatureMenuOpen: "esri-popup--feature-menu-open", isActionsMenuOpen: "esri-popup--actions-menu-open", hasFeatureUpdated: "esri-popup--feature-updated", header: "esri-popup__header", headerButtons: "esri-popup__header-buttons", headerContainer: "esri-popup__header-container", headerContainerButton: "esri-popup__header-container--button", headerTitle: "esri-popup__header-title", content: "esri-popup__content", footer: "esri-popup__footer", footerHasPagination: "esri-popup__footer--has-pagination", footerHasActions: "esri-popup__footer--has-actions", footerHasActionsMenu: "esri-popup__footer--has-actions-menu", button: "esri-popup__button", buttonDisabled: "esri-popup__button--disabled", buttonDock: "esri-popup__button--dock", icon: "esri-popup__icon", iconDock: "esri-popup__icon--dock-icon", inlineActionsContainer: "esri-popup__inline-actions-container", actionsMenuButton: "esri-popup__actions-menu-button", actions: "esri-popup__actions", action: "esri-popup__action", actionImage: "esri-popup__action-image", actionText: "esri-popup__action-text", actionToggle: "esri-popup__action-toggle", actionToggleOn: "esri-popup__action-toggle--on", pointer: "esri-popup__pointer", pointerDirection: "esri-popup__pointer-direction", navigation: "esri-popup__navigation", paginationPrevious: "esri-popup__pagination-previous", paginationNext: "esri-popup__pagination-next", paginationPreviousIconLTR: "esri-popup__pagination-previous-icon", paginationPreviousIconRTL: "esri-popup__pagination-previous-icon--rtl", paginationNextIconLTR: "esri-popup__pagination-next-icon", paginationNextIconRTL: "esri-popup__pagination-next-icon--rtl", featureMenu: "esri-popup__feature-menu", featureMenuList: "esri-popup__feature-menu-list", featureMenuItem: "esri-popup__feature-menu-item", featureMenuViewport: "esri-popup__feature-menu-viewport", featureMenuHeader: "esri-popup__feature-menu-header", featureMenuNote: "esri-popup__feature-menu-note", featureMenuSelected: "esri-popup__feature-menu-item--selected", featureMenuButton: "esri-popup__feature-menu-button", featureMenuTitle: "esri-popup__feature-menu-title", featureMenuObserver: "esri-popup__feature-menu-observer", featureMenuLoader: "esri-popup__feature-menu-loader", collapseButton: "esri-popup__collapse-button" };
var E5 = { buttonEnabled: true, position: "auto", breakpoint: { width: 544 } };
var P2 = "esri-popup";
function L5(e12, t7) {
  return void 0 === t7 ? `${P2}__${e12}` : `${P2}__${e12}-${t7}`;
}
var S6 = "esri.widgets.Popup";
var V2 = s.getLogger(S6);
var U6 = { closeButton: true, featureNavigation: true };
var R5 = class extends i6(O) {
  constructor(e12, t7) {
    super(e12, t7), this._blurClose = false, this._blurContainer = false, this._containerNode = null, this._mainContainerNode = null, this._featureMenuNode = null, this._actionsMenuNode = null, this._focusClose = false, this._focusContainer = false, this._focusDockButton = false, this._focusFeatureMenuButton = false, this._focusActionsMenuButton = false, this._focusFirstFeature = false, this._focusFirstAction = false, this._handles = new u2(), this._pointerOffsetInPx = 16, this._spinner = null, this._feature = null, this._featureMenuIntersectionObserverCallback = ([e13]) => {
      (e13 == null ? void 0 : e13.isIntersecting) && this.viewModel.featurePage++;
    }, this._featureMenuIntersectionObserver = new IntersectionObserver(this._featureMenuIntersectionObserverCallback, { root: window.document }), this._displaySpinnerThrottled = e5(() => this._displaySpinner(), T3), this.actions = null, this.alignment = "auto", this.autoCloseEnabled = null, this.autoOpenEnabled = null, this.defaultPopupTemplateEnabled = null, this.content = null, this.collapsed = false, this.collapseEnabled = true, this.dockEnabled = false, this.featureCount = null, this.featureMenuOpen = false, this.features = null, this.goToOverride = null, this.headingLevel = 2, this.highlightEnabled = null, this.location = null, this.label = void 0, this.maxInlineActions = 3, this.messages = null, this.messagesCommon = null, this.promises = null, this.selectedFeature = null, this.selectedFeatureIndex = null, this.spinnerEnabled = true, this.title = null, this.updateLocationEnabled = null, this.view = null, this.viewModel = new U5(), this.visible = null, this.visibleElements = { ...U6 }, this._addSelectedFeatureIndexHandle(), this.own([l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, () => this._positionContainer()), l2(() => {
      var _a;
      return [(_a = this.viewModel) == null ? void 0 : _a.active, this.dockEnabled];
    }, () => this._toggleScreenLocationEnabled()), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.screenLocation;
    }, (e13, t8) => {
      !!e13 != !!t8 && this.reposition();
    }), l2(() => {
      var _a, _b, _c, _d, _e, _f;
      return [(_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.padding, (_d = (_c = this.viewModel) == null ? void 0 : _c.view) == null ? void 0 : _d.size, (_e = this.viewModel) == null ? void 0 : _e.active, (_f = this.viewModel) == null ? void 0 : _f.location, this.alignment];
    }, () => this.reposition()), l2(() => this.spinnerEnabled, (e13) => this._spinnerEnabledChange(e13)), l2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.size;
    }, (e13, t8) => this._updateDockEnabledForViewSize(e13, t8)), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.view;
    }, (e13, t8) => this._viewChange(e13, t8)), l2(() => {
      var _a, _b;
      return (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ready;
    }, (e13, t8) => this._viewReadyChange(e13, t8)), l2(() => {
      var _a, _b;
      return [(_a = this.viewModel) == null ? void 0 : _a.waitingForResult, (_b = this.viewModel) == null ? void 0 : _b.location];
    }, () => {
      this._hideSpinner(), this._displaySpinnerThrottled();
    }), l2(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.title, (_d = (_c = this.selectedFeatureWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.state];
    }, () => this._setTitleFromFeatureWidget()), l2(() => {
      var _a, _b, _c, _d;
      return [(_b = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.content, (_d = (_c = this.selectedFeatureWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.state];
    }, () => this._setContentFromFeatureWidget()), f(() => !this.collapsed, () => {
      var _a, _b;
      "xsmall" === ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint) && this.viewModel.active && this.collapseEnabled && this.viewModel.centerAtLocation();
    }), a(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.allActions;
    }, "change", () => this._watchActions()), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.allActions;
    }, () => this._watchActions(), h), l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.featureViewModels;
    }, () => this._featureMenuViewportScrollTop())]);
  }
  destroy() {
    var _a, _b;
    this._destroySelectedFeatureWidget(), this._destroySpinner(), (_a = this._handles) == null ? void 0 : _a.destroy(), this._unobserveFeatureMenuObserver(), (_b = this._featureMenuIntersectionObserver) == null ? void 0 : _b.disconnect(), this._handles = null;
  }
  get actionsMenuId() {
    return `${this.id}-actions-menu`;
  }
  get actionsMenuButtonId() {
    return `${this.id}-actions-menu-button`;
  }
  get featureMenuId() {
    return `${this.id}-feature-menu`;
  }
  get titleId() {
    return `${this.id}-popup-title`;
  }
  get contentId() {
    return `${this.id}-popup-content`;
  }
  get hasContent() {
    var _a, _b, _c, _d, _e, _f, _g;
    return !!(this.selectedFeatureWidget ? ((_b = (_a = this.selectedFeatureWidget) == null ? void 0 : _a.viewModel) == null ? void 0 : _b.waitingForContent) || "error" === ((_d = (_c = this.selectedFeatureWidget) == null ? void 0 : _c.viewModel) == null ? void 0 : _d.state) || ((_f = (_e = this.selectedFeatureWidget) == null ? void 0 : _e.viewModel) == null ? void 0 : _f.content) : (_g = this.viewModel) == null ? void 0 : _g.content);
  }
  get featureNavigationVisible() {
    return this.viewModel.active && this.viewModel.featureCount > 1 && this.visibleElements.featureNavigation;
  }
  get collapsible() {
    return !!(this.collapseEnabled && this.viewModel.title && this.hasContent);
  }
  get featureMenuVisible() {
    return this.featureNavigationVisible && this.featureMenuOpen;
  }
  get contentCollapsed() {
    return this.collapsible && !this.featureMenuVisible && this.collapsed;
  }
  get dividedActions() {
    return this._divideActions();
  }
  set actionsMenuOpen(e12) {
    this._set("actionsMenuOpen", !!e12);
  }
  get actionsMenuOpen() {
    return !!this.viewModel.active && this._get("actionsMenuOpen");
  }
  get currentAlignment() {
    return this._getCurrentAlignment();
  }
  get currentDockPosition() {
    return this._getCurrentDockPosition();
  }
  get dockOptions() {
    return this._get("dockOptions") || E5;
  }
  set dockOptions(e12) {
    const t7 = { ...E5 }, i8 = this.get("viewModel.view.breakpoints"), o6 = {};
    i8 && (o6.width = i8.xsmall, o6.height = i8.xsmall);
    const n8 = { ...t7, ...e12 }, s10 = { ...t7.breakpoint, ...o6 }, { breakpoint: r6 } = n8;
    true === r6 ? n8.breakpoint = s10 : "object" == typeof r6 && (n8.breakpoint = { ...s10, ...r6 }), this._set("dockOptions", n8), this._setCurrentDockPosition(), this.reposition();
  }
  get selectedFeatureWidget() {
    const { _feature: e12, visibleElements: t7, headingLevel: i8 } = this, { selectedFeatureViewModel: o6 } = this.viewModel, n8 = { ...t7, title: false };
    return o6 ? (e12 ? (e12.viewModel = o6, e12.visibleElements = n8) : this._feature = new E4({ headingLevel: i8 + 1, viewModel: o6, visibleElements: n8 }), this._feature) : null;
  }
  castVisibleElements(e12) {
    return { ...U6, ...e12 };
  }
  blur() {
    const { active: e12 } = this.viewModel;
    e12 || V2.warn("Popup can only be blurred when currently active."), this.visibleElements.closeButton ? this._blurClose = true : this._blurContainer = true, this.scheduleRender();
  }
  clear() {
    this.viewModel.clear();
  }
  close() {
    this.visible = false;
  }
  fetchFeatures(e12, t7) {
    return this.viewModel.fetchFeatures(e12, t7);
  }
  focus() {
    const { active: e12 } = this.viewModel;
    e12 || V2.warn("Popup can only be focused when currently active."), this.visibleElements.closeButton ? this._focusClose = true : this._focusContainer = true, this.scheduleRender();
  }
  next() {
    return this.viewModel.next();
  }
  open(e12) {
    var _a, _b;
    this._handles.remove(N2);
    const t7 = !!e12 && !!e12.featureMenuOpen, i8 = !!e12 && !!e12.actionsMenuOpen, o6 = { collapsed: !!e12 && !!e12.collapsed, actionsMenuOpen: i8, featureMenuOpen: t7 };
    "xsmall" === ((_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint) && (o6.collapsed = true), this.set(o6), this.viewModel.open(e12), this._shouldFocus(e12), this._addSelectedFeatureIndexHandle();
  }
  previous() {
    return this.viewModel.previous();
  }
  reposition() {
    this.renderNow(), this._positionContainer(), this._setCurrentAlignment();
  }
  triggerAction(e12) {
    this.viewModel.triggerAction(e12);
  }
  render() {
    var _a, _b, _c, _d;
    const { actionsMenuOpen: e12, dockEnabled: t7, featureMenuVisible: i8, dividedActions: o6, currentAlignment: n8, currentDockPosition: s10 } = this, { active: r6 } = this.viewModel, { menuActions: a8 } = o6, l9 = r6 && a8.length > 1 && e12, u10 = r6 && t7, c17 = r6 && !t7, d8 = (_b = (_a = this.selectedFeature) == null ? void 0 : _a.layer) == null ? void 0 : _b.title, p11 = (_d = (_c = this.selectedFeature) == null ? void 0 : _c.layer) == null ? void 0 : _d.id, h10 = { [D3.alignTopCenter]: "top-center" === n8, [D3.alignBottomCenter]: "bottom-center" === n8, [D3.alignTopLeft]: "top-left" === n8, [D3.alignBottomLeft]: "bottom-left" === n8, [D3.alignTopRight]: "top-right" === n8, [D3.alignBottomRight]: "bottom-right" === n8, [D3.isDocked]: u10, [D3.shadow]: c17, [D3.isDockedTopLeft]: "top-left" === s10, [D3.isDockedTopCenter]: "top-center" === s10, [D3.isDockedTopRight]: "top-right" === s10, [D3.isDockedBottomLeft]: "bottom-left" === s10, [D3.isDockedBottomCenter]: "bottom-center" === s10, [D3.isDockedBottomRight]: "bottom-right" === s10, [D3.isFeatureMenuOpen]: i8, [D3.isActionsMenuOpen]: l9 };
    return n2("div", { class: this.classes(D3.base, h10), role: "presentation", "data-layer-title": d8, "data-layer-id": p11, bind: this, afterCreate: this._positionContainer, afterUpdate: this._positionContainer }, r6 ? [this.renderMainContainer(), this.renderPointer()] : null);
  }
  renderLoadingIcon() {
    return n2("span", { "aria-hidden": "true", class: this.classes(D3.icon, D3.iconLoading, D3.rotating) });
  }
  renderNavigationLoading() {
    const { messagesCommon: e12 } = this;
    return this.viewModel.pendingPromisesCount ? n2("div", { key: L5("loading-container"), role: "presentation", class: D3.loadingContainer, "aria-label": e12.loading, title: e12.loading }, this.renderLoadingIcon()) : null;
  }
  renderPreviousIcon() {
    const e12 = f2(this.container), t7 = { [D3.iconRightTriangleArrow]: e12, [D3.paginationPreviousIconRTL]: e12, [D3.iconLeftTriangleArrow]: !e12, [D3.paginationPreviousIconLTR]: !e12 };
    return n2("span", { "aria-hidden": "true", class: this.classes(D3.icon, t7) });
  }
  renderPreviousButton() {
    const { messages: e12 } = this;
    return n2("div", { role: "button", tabIndex: 0, bind: this, onclick: this._previous, onkeydown: this._previous, class: this.classes(D3.button, D3.paginationPrevious), "aria-label": e12.previous, title: e12.previous }, this.renderPreviousIcon());
  }
  renderNextIcon() {
    const e12 = f2(this.container), t7 = { [D3.iconLeftTriangleArrow]: e12, [D3.paginationNextIconRTL]: e12, [D3.iconRightTriangleArrow]: !e12, [D3.paginationNextIconLTR]: !e12 };
    return n2("span", { "aria-hidden": "true", class: this.classes(D3.icon, t7) });
  }
  renderNextButton() {
    const { messages: e12 } = this;
    return n2("div", { role: "button", tabIndex: 0, bind: this, onclick: this._next, onkeydown: this._next, class: this.classes(D3.button, D3.paginationNext), "aria-label": e12.next, title: e12.next }, this.renderNextIcon());
  }
  renderFeatureMenuButton() {
    const { featureMenuOpen: e12, featureMenuId: t7, messagesCommon: i8 } = this, { featureCount: o6, selectedFeatureIndex: n8 } = this.viewModel;
    return n2("div", { role: "button", tabIndex: 0, bind: this, onclick: this._toggleFeatureMenu, onkeydown: this._toggleFeatureMenu, afterCreate: this._focusFeatureMenuButtonNode, afterUpdate: this._focusFeatureMenuButtonNode, class: this.classes(D3.button, D3.featureMenuButton), "aria-haspopup": "true", "aria-controls": t7, "aria-expanded": e12.toString(), "aria-label": i8.menu, title: i8.menu }, this._getPageText(o6, n8));
  }
  renderNavigationButtons() {
    return this.featureNavigationVisible ? [this.renderPreviousButton(), this.renderNavigationLoading() || this.renderFeatureMenuButton(), this.renderNextButton()] : null;
  }
  renderDockIcon() {
    const { dockEnabled: e12 } = this, t7 = this._wouldDockTo(), i8 = { [D3.iconUndock]: e12, [D3.iconDock]: !e12, [D3.iconDockToRight]: !e12 && ("top-right" === t7 || "bottom-right" === t7), [D3.iconDockToLeft]: !e12 && ("top-left" === t7 || "bottom-left" === t7), [D3.iconDockToTop]: !e12 && "top-center" === t7, [D3.iconDockToBottom]: !e12 && "bottom-center" === t7 };
    return n2("span", { "aria-hidden": "true", class: this.classes(i8, D3.icon) });
  }
  renderDockButton() {
    var _a, _b, _c;
    const { dockEnabled: e12, messages: t7 } = this, i8 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.widthBreakpoint, o6 = e12 ? t7.undock : t7.dock;
    return "xsmall" !== i8 && ((_c = this.dockOptions) == null ? void 0 : _c.buttonEnabled) ? n2("div", { role: "button", "aria-label": o6, title: o6, tabIndex: 0, bind: this, onclick: this._toggleDockEnabled, onkeydown: this._toggleDockEnabled, afterCreate: this._focusDockButtonNode, afterUpdate: this._focusDockButtonNode, class: this.classes(D3.button, D3.buttonDock) }, this.renderDockIcon()) : null;
  }
  renderTitle() {
    const { title: e12 } = this.viewModel, { titleId: t7, collapsible: i8, contentCollapsed: o6, messagesCommon: n8 } = this, s10 = { [D3.headerContainerButton]: i8 }, r6 = n2(n3, { level: this.headingLevel, class: D3.headerTitle, innerHTML: e12 }), a8 = i8 ? n2("button", { key: `${e12}--collapsible`, id: t7, title: o6 ? n8.expand : n8.collapse, bind: this, enterAnimation: this._createFeatureUpdatedAnimation(), class: this.classes(D3.headerContainer, s10), "aria-expanded": o6 ? "false" : "true", onclick: this._toggleCollapsed, type: "button" }, r6) : n2("div", { key: e12, id: t7, bind: this, enterAnimation: this._createFeatureUpdatedAnimation(), class: this.classes(D3.headerContainer, s10) }, r6);
    return e12 ? a8 : null;
  }
  renderCloseIcon() {
    return n2("span", { "aria-hidden": "true", class: this.classes(D3.icon, D3.iconClose) });
  }
  renderCloseButton() {
    const { visibleElements: e12, messagesCommon: t7 } = this;
    return e12.closeButton ? n2("div", { role: "button", tabIndex: 0, bind: this, onclick: this._close, onkeydown: this._close, class: D3.button, "aria-label": t7.close, title: t7.close, afterCreate: this._closeButtonNodeUpdated, afterUpdate: this._closeButtonNodeUpdated }, this.renderCloseIcon()) : null;
  }
  renderHeader() {
    return n2("header", { class: D3.header }, this.renderTitle(), n2("div", { class: D3.headerButtons }, this.renderDockButton(), this.renderCloseButton()));
  }
  renderContentContainer() {
    const { contentId: e12, hasContent: t7, contentCollapsed: i8 } = this, { content: o6 } = this.viewModel;
    return t7 && !i8 ? n2("article", { key: o6, enterAnimation: this._createFeatureUpdatedAnimation(), id: e12, class: D3.content }, this.renderContent()) : null;
  }
  renderActionsMenuButton() {
    const { actionsMenuId: e12, actionsMenuButtonId: t7, actionsMenuOpen: i8, dividedActions: o6, messagesCommon: n8 } = this, s10 = i8 ? n8.close : n8.open, { menuActions: r6 } = o6;
    return r6.length ? n2("div", { key: L5("actions-menu-button"), class: this.classes(D3.button, D3.actionsMenuButton), role: "button", id: t7, "aria-haspopup": "true", "aria-controls": i8 ? e12 : null, tabIndex: 0, bind: this, onclick: this._toggleActionsMenu, onkeydown: this._toggleActionsMenu, afterCreate: this._focusActionsMenuButtonNode, afterUpdate: this._focusActionsMenuButtonNode, "aria-label": s10, title: s10 }, n2("span", { "aria-hidden": "true", class: D3.iconActionsMenu })) : null;
  }
  renderMenuActions() {
    const { actionsMenuId: e12, actionsMenuButtonId: t7, actionsMenuOpen: i8, dividedActions: o6 } = this, { menuActions: n8 } = o6;
    return n8.length && i8 ? n2("ul", { id: e12, role: "menu", "aria-labelledby": t7, key: L5("actions"), class: D3.actions, bind: this, onkeyup: this._handleActionMenuKeyup, afterCreate: this._actionsMenuNodeUpdated, afterUpdate: this._actionsMenuNodeUpdated }, n8.toArray().map((e13) => this.renderAction({ action: e13, type: "menu-item" }))) : null;
  }
  renderInlineActions() {
    const { inlineActions: e12 } = this.dividedActions;
    return !!e12.length && e12.toArray().map((e13) => this.renderAction({ action: e13, type: "inline" }));
  }
  renderInlineActionsContainer() {
    const { inlineActions: e12, menuActions: t7 } = this.dividedActions, i8 = !!e12.length, o6 = !!t7.length;
    return i8 || o6 ? n2("div", { key: "inline-actions-container", "data-inline-actions": i8.toString(), "data-menu-actions": o6.toString(), class: D3.inlineActionsContainer }, this.renderInlineActions(), this.renderActionsMenuButton(), this.renderMenuActions()) : null;
  }
  renderNavigation() {
    return this.featureNavigationVisible ? n2("section", { key: L5("navigation"), class: this.classes(D3.navigation) }, this.renderNavigationButtons()) : null;
  }
  renderFooter() {
    const { featureNavigationVisible: e12, dividedActions: t7 } = this, { inlineActions: i8, menuActions: o6 } = t7, n8 = !!i8.length, s10 = !!o6.length, r6 = { [D3.footerHasPagination]: e12, [D3.footerHasActions]: n8, [D3.footerHasActionsMenu]: s10 };
    return e12 || n8 ? n2("div", { key: L5("feature-buttons"), class: this.classes(D3.footer, r6) }, this.renderInlineActionsContainer(), this.renderNavigation()) : null;
  }
  renderFeatureMenuContainer() {
    const { messages: e12 } = this, { featureViewModels: t7, isLoadingFeature: i8 } = this.viewModel, o6 = s4(e12.selectedFeatures, { total: t7.length });
    return n2("section", { key: L5("menu"), class: D3.featureMenu }, n2("strong", { class: D3.featureMenuHeader }, o6), n2("nav", { bind: this, class: D3.featureMenuViewport, "data-node-ref": "_featureMenuViewportNode", afterCreate: v }, this.renderFeatureMenu(), n2("div", { class: D3.featureMenuObserver, bind: this, afterCreate: this._featureMenuIntersectionObserverCreated }), i8 ? n2("div", { class: D3.featureMenuLoader }, this.renderLoadingIcon()) : null));
  }
  renderPointer() {
    return this.dockEnabled ? null : n2("div", { key: L5("pointer"), class: D3.pointer, role: "presentation" }, n2("div", { class: this.classes(D3.pointerDirection, D3.shadow) }));
  }
  renderMainContainer() {
    const { dockEnabled: e12, currentAlignment: t7, currentDockPosition: i8, titleId: o6, contentId: n8, collapsible: s10, hasContent: r6, contentCollapsed: a8, visibleElements: l9 } = this, { title: u10 } = this.viewModel, c17 = "bottom-left" === t7 || "bottom-center" === t7 || "bottom-right" === t7 || "top-left" === i8 || "top-center" === i8 || "top-right" === i8, d8 = "top-left" === t7 || "top-center" === t7 || "top-right" === t7 || "bottom-left" === i8 || "bottom-center" === i8 || "bottom-right" === i8, p11 = { [D3.shadow]: e12, [D3.isCollapsible]: s10, [D3.isCollapsed]: a8 };
    return n2("div", { class: this.classes(D3.main, D3.widget, p11), tabIndex: l9.closeButton ? null : -1, role: "dialog", "aria-labelledby": u10 ? o6 : "", "aria-describedby": r6 && !a8 ? n8 : "", bind: this, onkeyup: this._handleMainKeyup, afterCreate: this._mainContainerNodeUpdated, afterUpdate: this._mainContainerNodeUpdated }, c17 ? this.renderFooter() : null, c17 ? this.renderFeatureMenuContainer() : null, this.renderHeader(), this.renderContentContainer(), d8 ? this.renderFooter() : null, d8 ? this.renderFeatureMenuContainer() : null);
  }
  renderContent() {
    var _a;
    const e12 = (_a = this.viewModel) == null ? void 0 : _a.content;
    return e12 ? "string" == typeof e12 ? n2("div", { key: e12, innerHTML: e12 }) : this.renderNodeContent(e12) : null;
  }
  renderActionText(e12) {
    return n2("span", { key: "text", class: D3.actionText }, e12);
  }
  renderActionIcon(e12) {
    const t7 = this._getActionClass(e12), i8 = this._getActionImage(e12), o6 = { [D3.iconLoading]: e12.active, [D3.rotating]: e12.active, [D3.icon]: !!t7, [D3.actionImage]: !e12.active && !!i8 };
    return t7 && (o6[t7] = !e12.active), n2("span", { key: "icon", "aria-hidden": "true", class: this.classes(D3.icon, o6), styles: this._getIconStyles(i8) });
  }
  renderAction(e12) {
    const { action: t7, type: i8 } = e12, o6 = this._getActionTitle(t7), n8 = { [D3.action]: "toggle" !== t7.type, [D3.actionToggle]: "toggle" === t7.type, [D3.actionToggleOn]: "toggle" === t7.type && t7.value, [D3.buttonDisabled]: t7.disabled }, s10 = [this.renderActionIcon(t7), this.renderActionText(o6)], r6 = "menu-item" === i8 ? n2("li", { key: t7.uid, role: "menuitem", tabIndex: 0, title: o6, "aria-label": o6, class: this.classes(D3.button, n8), onkeyup: this._handleActionMenuItemKeyup, bind: this, "data-action-uid": t7.uid, onclick: this._triggerAction, onkeydown: this._triggerAction }, s10) : n2("div", { key: t7.uid, role: "button", tabIndex: 0, title: o6, "aria-label": o6, class: this.classes(D3.button, n8), onkeyup: this._handleActionMenuItemKeyup, bind: this, "data-action-uid": t7.uid, onclick: this._triggerAction, onkeydown: this._triggerAction }, s10);
    return t7.visible ? r6 : null;
  }
  renderFeatureMenuItem(e12, t7) {
    const { messages: i8, messagesCommon: o6 } = this, { selectedFeatureIndex: n8, selectedFeatureViewModel: s10 } = this.viewModel, r6 = e12 === s10, a8 = { [D3.featureMenuSelected]: r6 }, l9 = r6 ? n2("span", { key: L5(`feature-menu-selected-feature-${n8}`), title: i8.selectedFeature, "aria-label": i8.selectedFeature, class: D3.iconCheckMark }) : null, u10 = n2("span", { innerHTML: e12.title || o6.untitled });
    return n2("li", { role: "menuitem", tabIndex: -1, key: L5(`feature-menu-feature-${n8}`), class: this.classes(a8, D3.featureMenuItem), bind: this, "data-feature-index": t7, onblur: this._removeActiveFeature, onfocus: this._setActiveFeature, onkeyup: this._handleFeatureMenuItemKeyup, onclick: this._selectFeature, onkeydown: this._selectFeature, onmouseover: this._setActiveFeature, onmouseleave: this._removeActiveFeature }, n2("span", { class: D3.featureMenuTitle }, u10, l9));
  }
  renderFeatureMenu() {
    const { featureMenuId: e12 } = this, { featureViewModels: t7 } = this.viewModel;
    return t7.length > 1 ? n2("ol", { class: D3.featureMenuList, id: e12, bind: this, afterCreate: this._featureMenuNodeUpdated, afterUpdate: this._featureMenuNodeUpdated, onkeyup: this._handleFeatureMenuKeyup, role: "menu" }, t7.filter((e13) => !!e13.graphic).map((e13, t8) => this.renderFeatureMenuItem(e13, t8))) : null;
  }
  _getActionTitle(e12) {
    const { messages: t7, selectedFeature: i8, messagesCommon: o6 } = this, { id: n8 } = e12, s10 = i8 == null ? void 0 : i8.attributes, r6 = "zoom-to-feature" === n8 ? s4(e12.title, { messages: t7 }) : "remove-selected-feature" === n8 ? s4(e12.title, { messages: o6 }) : "zoom-to-clustered-features" === n8 || "browse-clustered-features" === n8 ? s4(e12.title, { messages: t7 }) : e12.title;
    return r6 && s10 ? s4(r6, s10) : r6;
  }
  _getActionClass(e12) {
    const { selectedFeature: t7 } = this, i8 = t7 == null ? void 0 : t7.attributes, { className: o6, image: n8 } = e12, s10 = n8 || o6 ? o6 : D3.iconDefaultAction;
    return s10 && i8 ? s4(s10, i8) : s10;
  }
  _getActionImage(e12) {
    const { selectedFeature: t7 } = this, i8 = t7 == null ? void 0 : t7.attributes, { image: o6 } = e12;
    return o6 && i8 ? s4(o6, i8) : o6;
  }
  _createFeatureUpdatedAnimation() {
    return w("enter", D3.hasFeatureUpdated);
  }
  _getInlineActionCount() {
    const { maxInlineActions: e12, featureNavigationVisible: t7 } = this;
    if ("number" != typeof e12)
      return null;
    const i8 = Math.round(e12);
    return Math.max(t7 ? i8 - 1 : i8, 0);
  }
  _watchActions() {
    const { allActions: e12 } = this.viewModel;
    this.notifyChange("dividedActions");
    const t7 = "actions";
    this._handles.remove(t7), e12 && e12.forEach((e13) => {
      this._handles.add(l2(() => [e13.uid, e13.active, e13.className, e13.disabled, e13.id, e13.title, e13.image, e13.visible], () => this.scheduleRender()), t7);
    });
  }
  _divideActions() {
    const { allActions: e12 } = this.viewModel, i8 = e12.filter((e13) => e13.visible), o6 = this._getInlineActionCount(), n8 = null === o6, s10 = 0 === o6;
    return { inlineActions: n8 ? i8.slice(0) : s10 ? new j2() : i8.slice(0, o6), menuActions: n8 ? new j2() : s10 ? i8.slice(0) : i8.slice(o6) };
  }
  _featureMenuOpenChanged(e12) {
    e12 ? this._focusFirstFeature = true : this._focusFeatureMenuButton = true;
  }
  _actionsMenuOpenChanged(e12) {
    e12 ? this._focusFirstAction = true : this._focusActionsMenuButton = true;
  }
  _setTitleFromFeatureWidget() {
    var _a, _b;
    const { selectedFeatureWidget: e12, messagesCommon: t7 } = this;
    e12 && (this.viewModel.title = "error" === ((_a = e12.viewModel) == null ? void 0 : _a.state) ? t7.errorMessage : ((_b = e12.viewModel) == null ? void 0 : _b.title) || "");
  }
  _setContentFromFeatureWidget() {
    const { selectedFeatureWidget: e12 } = this;
    e12 && (this.viewModel.content = e12);
  }
  _unobserveFeatureMenuObserver() {
    this._featureMenuIntersectionObserverNode && this._featureMenuIntersectionObserver.unobserve(this._featureMenuIntersectionObserverNode);
  }
  _featureMenuIntersectionObserverCreated(e12) {
    this._unobserveFeatureMenuObserver(), this._featureMenuIntersectionObserver.observe(e12), this._featureMenuIntersectionObserverNode = e12;
  }
  _handleFeatureMenuKeyup(e12) {
    "Escape" === i(e12) && (e12.stopPropagation(), this._focusFeatureMenuButton = true, this.featureMenuOpen = false, this.scheduleRender());
  }
  _handleActionMenuKeyup(e12) {
    "Escape" === i(e12) && (e12.stopPropagation(), this._focusActionsMenuButton = true, this.actionsMenuOpen = false, this.scheduleRender());
  }
  _setActiveFeature(e12) {
    const { viewModel: t7 } = this, i8 = e12.currentTarget["data-feature-index"];
    t7.activeFeature = t7.features[i8] || null;
  }
  _removeActiveFeature() {
    this.viewModel.activeFeature = null;
  }
  _handleFeatureMenuItemKeyup(e12) {
    const t7 = i(e12), { _featureMenuNode: o6 } = this, n8 = e12.currentTarget["data-feature-index"];
    if (!o6)
      return;
    const s10 = o6.querySelectorAll("li"), r6 = s10.length;
    if ("ArrowUp" !== t7)
      if ("ArrowDown" !== t7)
        if ("Home" !== t7)
          if ("End" !== t7)
            ;
          else {
            e12.stopPropagation();
            s10[s10.length - 1].focus();
          }
        else {
          e12.stopPropagation();
          s10[0].focus();
        }
      else {
        e12.stopPropagation();
        s10[(n8 + 1 + r6) % r6].focus();
      }
    else {
      e12.stopPropagation();
      s10[(n8 - 1 + r6) % r6].focus();
    }
  }
  _handleActionMenuItemKeyup(e12) {
    const t7 = i(e12), { _actionsMenuNode: o6 } = this, n8 = e12.currentTarget.dataset.actionUid, { menuActions: s10 } = this.dividedActions, r6 = s10.findIndex((e13) => e13.uid === n8);
    if (!o6)
      return;
    const a8 = o6.querySelectorAll("li"), l9 = a8.length;
    if ("ArrowUp" !== t7)
      if ("ArrowDown" !== t7)
        if ("Home" !== t7)
          if ("End" !== t7)
            ;
          else {
            e12.stopPropagation();
            a8[a8.length - 1].focus();
          }
        else {
          e12.stopPropagation();
          a8[0].focus();
        }
      else {
        e12.stopPropagation();
        a8[(r6 + 1 + l9) % l9].focus();
      }
    else {
      e12.stopPropagation();
      a8[(r6 - 1 + l9) % l9].focus();
    }
  }
  _handleMainKeyup(e12) {
    const t7 = i(e12);
    "ArrowLeft" === t7 && (e12.stopPropagation(), this.previous()), "ArrowRight" === t7 && (e12.stopPropagation(), this.next());
  }
  _spinnerEnabledChange(e12) {
    if (this._destroySpinner(), !e12)
      return;
    const t7 = this.get("viewModel.view");
    this._createSpinner(t7);
  }
  _hideSpinner() {
    const { _spinner: e12 } = this;
    e12 && (e12.location = null, e12.hide());
  }
  _displaySpinner() {
    const { _spinner: e12 } = this;
    if (!e12)
      return;
    const { location: t7, waitingForResult: i8 } = this.viewModel;
    i8 ? e12.show({ location: t7 }) : e12.hide();
  }
  _getIconStyles(e12) {
    return { "background-image": e12 ? `url(${e12})` : "" };
  }
  async _shouldFocus(e12) {
    e12.shouldFocus && (await j3(() => {
      var _a;
      return true === ((_a = this.viewModel) == null ? void 0 : _a.active);
    }), this.focus());
  }
  _addSelectedFeatureIndexHandle() {
    const e12 = l2(() => {
      var _a;
      return (_a = this.viewModel) == null ? void 0 : _a.selectedFeatureIndex;
    }, (e13, t7) => this._selectedFeatureIndexUpdated(e13, t7));
    this._handles.add(e12, N2);
  }
  _selectedFeatureIndexUpdated(e12, t7) {
    const { featureCount: i8 } = this;
    i8 && e12 !== t7 && -1 !== e12 && (this.actionsMenuOpen = false, this.featureMenuOpen = false);
  }
  _destroySelectedFeatureWidget() {
    const { _feature: e12 } = this;
    e12 && (e12.viewModel = null, e12 && !e12.destroyed && e12.destroy()), this._feature = null;
  }
  _isScreenLocationWithinView(e12, t7) {
    return e12.x > -1 && e12.y > -1 && e12.x <= t7.width && e12.y <= t7.height;
  }
  _isOutsideView(e12) {
    const { popupHeight: t7, popupWidth: i8, screenLocation: o6, side: n8, view: s10 } = e12;
    if (isNaN(i8) || isNaN(t7) || !s10 || !o6)
      return false;
    const r6 = s10.padding;
    return "right" === n8 && o6.x + i8 / 2 > s10.width - r6.right || ("left" === n8 && o6.x - i8 / 2 < r6.left || ("top" === n8 && o6.y - t7 < r6.top || "bottom" === n8 && o6.y + t7 > s10.height - r6.bottom));
  }
  _calculateAutoAlignment(e12) {
    if ("auto" !== e12)
      return e12;
    const { _pointerOffsetInPx: t7, _containerNode: i8, _mainContainerNode: o6, viewModel: n8 } = this, { screenLocation: r6, view: a8 } = n8;
    if (t(r6) || !a8 || !i8)
      return "top-center";
    if (!this._isScreenLocationWithinView(r6, a8))
      return this._get("currentAlignment") || "top-center";
    function l9(e13) {
      return parseInt(e13.replace(/[^-\d\.]/g, ""), 10);
    }
    const u10 = o6 ? window.getComputedStyle(o6, null) : null, c17 = u10 ? l9(u10.getPropertyValue("max-height")) : 0, d8 = u10 ? l9(u10.getPropertyValue("height")) : 0, { height: p11, width: h10 } = i8.getBoundingClientRect(), g10 = h10 + t7, _3 = Math.max(p11, c17, d8) + t7, f8 = this._isOutsideView({ popupHeight: _3, popupWidth: g10, screenLocation: r6, side: "right", view: a8 }), v6 = this._isOutsideView({ popupHeight: _3, popupWidth: g10, screenLocation: r6, side: "left", view: a8 }), m10 = this._isOutsideView({ popupHeight: _3, popupWidth: g10, screenLocation: r6, side: "top", view: a8 }), b9 = this._isOutsideView({ popupHeight: _3, popupWidth: g10, screenLocation: r6, side: "bottom", view: a8 });
    return v6 ? m10 ? "bottom-right" : "top-right" : f8 ? m10 ? "bottom-left" : "top-left" : m10 ? b9 ? "top-center" : "bottom-center" : "top-center";
  }
  _callCurrentAlignment(e12) {
    return "function" == typeof e12 ? e12.call(this) : e12;
  }
  _getCurrentAlignment() {
    const { alignment: e12, dockEnabled: t7 } = this;
    return t7 || !this.viewModel.active ? null : this._calculatePositionResult(this._calculateAutoAlignment(this._callCurrentAlignment(e12)));
  }
  _setCurrentAlignment() {
    this._set("currentAlignment", this._getCurrentAlignment());
  }
  _setCurrentDockPosition() {
    this._set("currentDockPosition", this._getCurrentDockPosition());
  }
  _calculatePositionResult(e12) {
    const t7 = ["left", "right"];
    return f2(this.container) && t7.reverse(), e12.replace(/leading/gi, t7[0]).replace(/trailing/gi, t7[1]);
  }
  _callDockPosition(e12) {
    return "function" == typeof e12 ? e12.call(this) : e12;
  }
  _getDockPosition() {
    var _a;
    return this._calculatePositionResult(this._calculateAutoDockPosition(this._callDockPosition((_a = this.dockOptions) == null ? void 0 : _a.position)));
  }
  _getCurrentDockPosition() {
    return this.dockEnabled && this.viewModel.active ? this._getDockPosition() : null;
  }
  _wouldDockTo() {
    return this.dockEnabled ? null : this._getDockPosition();
  }
  _calculateAutoDockPosition(e12) {
    var _a;
    if ("auto" !== e12)
      return e12;
    const t7 = (_a = this.viewModel) == null ? void 0 : _a.view, i8 = f2(this.container) ? "top-left" : "top-right";
    if (!t7)
      return i8;
    const o6 = t7.padding || { left: 0, right: 0, top: 0, bottom: 0 }, n8 = t7.width - o6.left - o6.right, { breakpoints: s10 } = t7;
    return s10 && n8 <= s10.xsmall ? "bottom-center" : i8;
  }
  _positionContainer(e12 = this._containerNode) {
    if (e12 && (this._containerNode = e12), !e12)
      return;
    const { screenLocation: t7 } = this.viewModel, { width: i8 } = e12.getBoundingClientRect(), o6 = this._calculatePositionStyle(t7, i8);
    o6 && (e12.style.top = o6.top, e12.style.left = o6.left, e12.style.bottom = o6.bottom, e12.style.right = o6.right);
  }
  _calculateFullWidth(e12) {
    const { currentAlignment: t7, _pointerOffsetInPx: i8 } = this;
    return "top-left" === t7 || "bottom-left" === t7 || "top-right" === t7 || "bottom-right" === t7 ? e12 + i8 : e12;
  }
  _calculateAlignmentPosition(e12, t7, i8, o6) {
    const { currentAlignment: n8, _pointerOffsetInPx: s10 } = this, r6 = o6 / 2, a8 = i8.height - t7, l9 = i8.width - e12, { padding: u10 } = this.view;
    return "bottom-center" === n8 ? { top: t7 + s10 - u10.top, left: e12 - r6 - u10.left } : "top-left" === n8 ? { bottom: a8 + s10 - u10.bottom, right: l9 + s10 - u10.right } : "bottom-left" === n8 ? { top: t7 + s10 - u10.top, right: l9 + s10 - u10.right } : "top-right" === n8 ? { bottom: a8 + s10 - u10.bottom, left: e12 + s10 - u10.left } : "bottom-right" === n8 ? { top: t7 + s10 - u10.top, left: e12 + s10 - u10.left } : "top-center" === n8 ? { bottom: a8 + s10 - u10.bottom, left: e12 - r6 - u10.left } : void 0;
  }
  _calculatePositionStyle(e12, t7) {
    const { dockEnabled: i8, view: o6 } = this;
    if (!o6)
      return;
    if (i8)
      return { left: "", top: "", right: "", bottom: "" };
    if (t(e12) || !t7)
      return;
    const n8 = this._calculateFullWidth(t7), r6 = this._calculateAlignmentPosition(e12.x, e12.y, o6, n8);
    return r6 ? { top: void 0 !== r6.top ? `${r6.top}px` : "auto", left: void 0 !== r6.left ? `${r6.left}px` : "auto", bottom: void 0 !== r6.bottom ? `${r6.bottom}px` : "auto", right: void 0 !== r6.right ? `${r6.right}px` : "auto" } : void 0;
  }
  _viewChange(e12, t7) {
    e12 && t7 && (this.close(), this.clear());
  }
  _viewReadyChange(e12, t7) {
    if (e12) {
      const e13 = this.get("viewModel.view");
      this._wireUpView(e13);
    } else
      t7 && (this.close(), this.clear());
  }
  _wireUpView(e12) {
    if (this._destroySpinner(), !e12)
      return;
    const { spinnerEnabled: t7 } = this;
    t7 && this._createSpinner(e12), this._setDockEnabledForViewSize(this.dockOptions);
  }
  _dockingThresholdCrossed(e12, t7, i8) {
    const [o6, n8] = e12, [s10, r6] = t7, { width: a8, height: l9 } = i8;
    return o6 <= a8 && s10 > a8 || o6 > a8 && s10 <= a8 || n8 <= l9 && r6 > l9 || n8 > l9 && r6 <= l9;
  }
  _updateDockEnabledForViewSize(e12, t7) {
    if (!e12 || !t7)
      return;
    const i8 = this.get("viewModel.view.padding") || { left: 0, right: 0, top: 0, bottom: 0 }, o6 = i8.left + i8.right, n8 = i8.top + i8.bottom, s10 = [], r6 = [];
    s10[0] = e12[0] - o6, s10[1] = e12[1] - n8, r6[0] = t7[0] - o6, r6[1] = t7[1] - n8;
    const { dockOptions: a8 } = this, l9 = a8.breakpoint;
    this._dockingThresholdCrossed(s10, r6, l9) && this._setDockEnabledForViewSize(a8), this._setCurrentDockPosition();
  }
  _focusDockButtonNode(e12) {
    this._focusDockButton && (this._focusDockButton = false, e12.focus());
  }
  _closeButtonNodeUpdated(e12) {
    return this._focusClose ? (this._focusClose = false, void e12.focus()) : this._blurClose ? (this._blurClose = false, void e12.blur()) : void 0;
  }
  _mainContainerNodeUpdated(e12) {
    return this._mainContainerNode = e12, this._focusContainer ? (this._focusContainer = false, void e12.focus()) : this._blurContainer ? (this._blurContainer = false, void e12.blur()) : void 0;
  }
  _featureMenuNodeUpdated(e12) {
    if (this._featureMenuNode = e12, !e12 || !this._focusFirstFeature)
      return;
    this._focusFirstFeature = false;
    const t7 = e12.querySelectorAll("li");
    if (t7.length) {
      t7[0].focus();
    }
  }
  _actionsMenuNodeUpdated(e12) {
    if (this._actionsMenuNode = e12, !e12 || !this._focusFirstAction)
      return;
    this._focusFirstAction = false;
    const t7 = e12.querySelectorAll("li");
    if (t7.length) {
      t7[0].focus();
    }
  }
  _focusFeatureMenuButtonNode(e12) {
    this._focusFeatureMenuButton && (this._focusFeatureMenuButton = false, e12.focus());
  }
  _focusActionsMenuButtonNode(e12) {
    this._focusActionsMenuButton && (this._focusActionsMenuButton = false, e12.focus());
  }
  _featureMenuViewportScrollTop() {
    this._featureMenuViewportNode && (this._featureMenuViewportNode.scrollTop = 0);
  }
  _toggleScreenLocationEnabled() {
    const { dockEnabled: e12, viewModel: t7 } = this;
    if (!t7)
      return;
    const i8 = t7.active && !e12;
    t7.screenLocationEnabled = i8;
  }
  _shouldDockAtCurrentViewSize(e12) {
    var _a, _b;
    const t7 = e12.breakpoint, i8 = (_b = (_a = this.viewModel) == null ? void 0 : _a.view) == null ? void 0 : _b.ui;
    if (!i8)
      return false;
    const { width: o6, height: n8 } = i8;
    if (isNaN(o6) || isNaN(n8))
      return false;
    const s10 = t7.hasOwnProperty("width") && o6 <= t7.width, r6 = t7.hasOwnProperty("height") && n8 <= t7.height;
    return s10 || r6;
  }
  _setDockEnabledForViewSize(e12) {
    e12.breakpoint && (this.dockEnabled = this._shouldDockAtCurrentViewSize(e12));
  }
  _getPageText(e12, t7) {
    return this.featureNavigationVisible ? s4(this.messages.pageText, { index: t7 + 1, total: e12 }) : null;
  }
  _destroySpinner() {
    const { _spinner: e12, view: t7 } = this;
    e12 && (t7 && t7.ui && t7.ui.remove(this._spinner, B6), e12.destroy(), this._spinner = null);
  }
  _createSpinner(e12) {
    e12 && (this._spinner = new m8({ view: e12 }), e12.ui.add(this._spinner, { key: B6, position: "manual" }));
  }
  _toggleCollapsed() {
    this.collapsed = !this.collapsed;
  }
  _close() {
    this.close(), this.view && this.view.focus();
  }
  _toggleDockEnabled() {
    this.dockEnabled = !this.dockEnabled, this._focusDockButton = true, this.scheduleRender();
  }
  _toggleFeatureMenu() {
    const e12 = !this.featureMenuOpen;
    this._featureMenuOpenChanged(e12), this.actionsMenuOpen = false, this.featureMenuOpen = e12;
  }
  _toggleActionsMenu() {
    const e12 = !this.actionsMenuOpen;
    this._actionsMenuOpenChanged(e12), this.featureMenuOpen = false, this.actionsMenuOpen = e12;
  }
  _triggerAction(e12) {
    const t7 = e12.currentTarget.dataset.actionUid, { allActions: i8 } = this.viewModel, o6 = i8.findIndex((e13) => e13.uid === t7), n8 = i8.getItemAt(o6);
    n8 && "toggle" === n8.type && (n8.value = !n8.value), this.actionsMenuOpen = false, this.viewModel.triggerAction(o6);
  }
  _selectFeature(e12) {
    const t7 = e12.currentTarget["data-feature-index"];
    isNaN(t7) || (this.viewModel.selectedFeatureIndex = t7), this.featureMenuOpen = false, this._focusFeatureMenuButton = true, this.scheduleRender();
  }
  _next() {
    this.next();
  }
  _previous() {
    this.previous();
  }
};
e([d({ readOnly: true })], R5.prototype, "actionsMenuId", null), e([d({ readOnly: true })], R5.prototype, "actionsMenuButtonId", null), e([d({ readOnly: true })], R5.prototype, "featureMenuId", null), e([d({ readOnly: true })], R5.prototype, "titleId", null), e([d({ readOnly: true })], R5.prototype, "contentId", null), e([d({ readOnly: true })], R5.prototype, "hasContent", null), e([d({ readOnly: true })], R5.prototype, "featureNavigationVisible", null), e([d({ readOnly: true })], R5.prototype, "collapsible", null), e([d({ readOnly: true })], R5.prototype, "featureMenuVisible", null), e([d({ readOnly: true })], R5.prototype, "contentCollapsed", null), e([d({ readOnly: true })], R5.prototype, "dividedActions", null), e([o("viewModel.actions")], R5.prototype, "actions", void 0), e([d()], R5.prototype, "actionsMenuOpen", null), e([d()], R5.prototype, "alignment", void 0), e([o("viewModel.autoCloseEnabled")], R5.prototype, "autoCloseEnabled", void 0), e([o("viewModel.autoOpenEnabled")], R5.prototype, "autoOpenEnabled", void 0), e([o("viewModel.defaultPopupTemplateEnabled")], R5.prototype, "defaultPopupTemplateEnabled", void 0), e([o("viewModel.content")], R5.prototype, "content", void 0), e([d()], R5.prototype, "collapsed", void 0), e([d()], R5.prototype, "collapseEnabled", void 0), e([d({ readOnly: true })], R5.prototype, "currentAlignment", null), e([d({ readOnly: true })], R5.prototype, "currentDockPosition", null), e([d()], R5.prototype, "dockOptions", null), e([d()], R5.prototype, "dockEnabled", void 0), e([o("viewModel.featureCount")], R5.prototype, "featureCount", void 0), e([d()], R5.prototype, "featureMenuOpen", void 0), e([o("viewModel.features")], R5.prototype, "features", void 0), e([o("viewModel.goToOverride")], R5.prototype, "goToOverride", void 0), e([d()], R5.prototype, "headingLevel", void 0), e([o("viewModel.highlightEnabled")], R5.prototype, "highlightEnabled", void 0), e([o("viewModel.location")], R5.prototype, "location", void 0), e([d({ aliasOf: { source: "messages.widgetLabel", overridable: true } })], R5.prototype, "label", void 0), e([d()], R5.prototype, "maxInlineActions", void 0), e([d(), e3("esri/widgets/Popup/t9n/Popup")], R5.prototype, "messages", void 0), e([d(), e3("esri/t9n/common")], R5.prototype, "messagesCommon", void 0), e([o("viewModel.promises")], R5.prototype, "promises", void 0), e([o("viewModel.selectedFeature")], R5.prototype, "selectedFeature", void 0), e([o("viewModel.selectedFeatureIndex")], R5.prototype, "selectedFeatureIndex", void 0), e([d({ readOnly: true })], R5.prototype, "selectedFeatureWidget", null), e([d()], R5.prototype, "spinnerEnabled", void 0), e([o("viewModel.title")], R5.prototype, "title", void 0), e([o("viewModel.updateLocationEnabled")], R5.prototype, "updateLocationEnabled", void 0), e([o("viewModel.view")], R5.prototype, "view", void 0), e([d({ type: U5 }), t3(["triggerAction", "trigger-action"])], R5.prototype, "viewModel", void 0), e([o("viewModel.visible")], R5.prototype, "visible", void 0), e([d()], R5.prototype, "visibleElements", void 0), e([s3("visibleElements")], R5.prototype, "castVisibleElements", null), e([t2()], R5.prototype, "_close", null), e([t2()], R5.prototype, "_toggleDockEnabled", null), e([t2()], R5.prototype, "_toggleFeatureMenu", null), e([t2()], R5.prototype, "_toggleActionsMenu", null), e([t2()], R5.prototype, "_triggerAction", null), e([t2()], R5.prototype, "_selectFeature", null), e([t2()], R5.prototype, "_next", null), e([t2()], R5.prototype, "_previous", null), R5 = e([n(S6)], R5);
var j7 = R5;

export {
  c11 as c,
  j7 as j
};
//# sourceMappingURL=chunk-ZZCCRN4U.js.map
