import {
  e as e2,
  l,
  v
} from "./chunk-J6DXGG2A.js";
import {
  y
} from "./chunk-TBT57L4K.js";
import {
  m
} from "./chunk-5Z5455ZY.js";
import {
  o
} from "./chunk-GSRNZQFV.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";

// node_modules/@arcgis/core/layers/mixins/TemporalLayer.js
var a = (f) => {
  let a2 = class extends f {
    constructor() {
      super(...arguments), this.timeExtent = null, this.timeOffset = null, this.useViewTime = true;
    }
    readOffset(e3, t) {
      const o2 = t.timeInfo.exportOptions;
      if (!o2)
        return null;
      const i = o2.timeOffset, s = e2.fromJSON(o2.timeOffsetUnits);
      return i && s ? new l({ value: i, unit: s }) : null;
    }
    set timeInfo(e3) {
      m(e3, this.fieldsIndex), this._set("timeInfo", e3);
    }
  };
  return e([d({ type: y, json: { write: false } })], a2.prototype, "timeExtent", void 0), e([d({ type: l })], a2.prototype, "timeOffset", void 0), e([o("service", "timeOffset", ["timeInfo.exportOptions"])], a2.prototype, "readOffset", null), e([d({ value: null, type: v, json: { write: true, origins: { "web-document": { read: false, write: false }, "portal-item": { read: false, write: false } } } })], a2.prototype, "timeInfo", null), e([d({ type: Boolean, json: { read: { source: "timeAnimation" }, write: { target: "timeAnimation" }, origins: { "web-scene": { read: false, write: false } } } })], a2.prototype, "useViewTime", void 0), a2 = e([n("esri.layers.mixins.TemporalLayer")], a2), a2;
};

export {
  a
};
//# sourceMappingURL=chunk-6O7ZZEV7.js.map
