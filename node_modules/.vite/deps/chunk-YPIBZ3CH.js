import {
  w
} from "./chunk-XLCZFN6R.js";
import {
  j
} from "./chunk-OXRBYKVX.js";
import {
  p as p2
} from "./chunk-C7S44TP4.js";
import {
  m as m2,
  p
} from "./chunk-JT3LXQ47.js";
import {
  D
} from "./chunk-TADZYUVR.js";
import {
  B
} from "./chunk-EI4MOLML.js";
import {
  r
} from "./chunk-2HDG7SIE.js";
import {
  o
} from "./chunk-NWRK6QLX.js";
import {
  l
} from "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  m
} from "./chunk-G5JBUC5N.js";

// node_modules/@arcgis/core/layers/mixins/FeatureEffectLayer.js
var t = { write: { allowNull: true } };
var p3 = (p8) => {
  let c5 = class extends p8 {
    constructor() {
      super(...arguments), this.featureEffect = null;
    }
  };
  return e([d({ type: w, json: { origins: { "web-map": t, "portal-item": t } } })], c5.prototype, "featureEffect", void 0), c5 = e([n("esri.layers.mixins.FeatureEffectLayer")], c5), c5;
};

// node_modules/@arcgis/core/layers/support/FeatureReduction.js
var t2 = class extends l {
  constructor() {
    super(...arguments), this.type = null;
  }
};
e([d({ type: ["selection", "cluster", "binning"], readOnly: true, json: { read: false, write: true } })], t2.prototype, "type", void 0), t2 = e([n("esri.layers.support.FeatureReduction")], t2);

// node_modules/@arcgis/core/layers/support/FeatureReductionSelection.js
var t3;
var c = t3 = class extends t2 {
  constructor(r4) {
    super(r4), this.type = "selection";
  }
  clone() {
    return new t3();
  }
};
e([d({ type: ["selection"] })], c.prototype, "type", void 0), c = t3 = e([n("esri.layers.support.FeatureReductionSelection")], c);
var p4 = c;

// node_modules/@arcgis/core/layers/support/OutStatistic.js
var r2;
var e2 = r2 = class extends l {
  constructor() {
    super(...arguments), this.statisticType = null, this.onStatisticField = null, this.onStatisticValueExpression = null;
  }
  clone() {
    return new r2({ statisticType: this.statisticType, onStatisticField: this.onStatisticField, onStatisticValueExpression: this.onStatisticValueExpression });
  }
};
e([d({ type: String, json: { write: true } })], e2.prototype, "statisticType", void 0), e([d({ type: String, json: { write: true } })], e2.prototype, "onStatisticField", void 0), e([d({ type: String, json: { write: true } })], e2.prototype, "onStatisticValueExpression", void 0), e2 = r2 = e([n("esri.layers.support.OutStatistic")], e2);
var p5 = e2;

// node_modules/@arcgis/core/layers/support/AggregateField.js
var i;
var p6 = i = class extends l {
  constructor() {
    super(...arguments), this.name = null, this.outStatistic = null;
  }
  clone() {
    return new i({ name: this.name, outStatistic: this.outStatistic.clone() });
  }
};
e([d({ type: String, json: { write: true } })], p6.prototype, "name", void 0), e([d({ type: p5, json: { write: true } })], p6.prototype, "outStatistic", void 0), p6 = i = e([n("esri.layers.support.AggregateField")], p6);
var c2 = p6;

// node_modules/@arcgis/core/layers/support/FeatureReductionBinning.js
var u;
var c3 = u = class extends t2 {
  constructor(e3) {
    super(e3), this.type = "binning", this.fixedBinLevel = 3, this.labelingInfo = null, this.labelsVisible = true, this.popupEnabled = true, this.popupTemplate = null, this.fields = [];
  }
  clone() {
    return new u({ fields: m(this.fields), fixedBinLevel: this.fixedBinLevel, labelingInfo: m(this.labelingInfo), labelsVisible: this.labelsVisible, popupEnabled: this.popupEnabled, popupTemplate: m(this.popupTemplate), renderer: m(this.renderer) });
  }
};
e([r({ binning: "binning" })], c3.prototype, "type", void 0), e([d({ type: Number, json: { write: true } })], c3.prototype, "fixedBinLevel", void 0), e([d({ type: [j], json: { read: { source: "drawingInfo.labelingInfo" }, write: { target: "drawingInfo.labelingInfo" } } })], c3.prototype, "labelingInfo", void 0), e([d(m2)], c3.prototype, "labelsVisible", void 0), e([d(p)], c3.prototype, "popupEnabled", void 0), e([d({ type: B, json: { name: "popupInfo", write: true } })], c3.prototype, "popupTemplate", void 0), e([d({ type: [c2], json: { write: true, origins: { "web-document": { write: false }, "portal-item": { write: false } } } })], c3.prototype, "fields", void 0), e([d({ types: p2, json: { write: true } })], c3.prototype, "renderer", void 0), c3 = u = e([n("esri.layers.support.FeatureReductionBinning")], c3);
var f = c3;

// node_modules/@arcgis/core/layers/support/FeatureReductionCluster.js
var c4;
var y = c4 = class extends l {
  constructor(e3) {
    super(e3), this.type = "cluster", this.clusterRadius = o("80px"), this.clusterMinSize = o("12px"), this.clusterMaxSize = o("50px"), this.popupEnabled = true, this.popupTemplate = null, this.symbol = null, this.labelingInfo = null, this.labelsVisible = true, this.fields = null;
  }
  clone() {
    return new c4({ clusterRadius: this.clusterRadius, clusterMinSize: this.clusterMinSize, clusterMaxSize: this.clusterMaxSize, labelingInfo: m(this.labelingInfo), labelsVisible: this.labelsVisible, fields: m(this.fields), renderer: m(this.renderer), popupEnabled: this.popupEnabled, popupTemplate: m(this.popupTemplate) });
  }
};
e([d({ type: ["cluster"], readOnly: true, json: { write: true } })], y.prototype, "type", void 0), e([d({ type: Number, cast: (e3) => "auto" === e3 ? e3 : o(e3), json: { write: true } })], y.prototype, "clusterRadius", void 0), e([d({ type: Number, cast: o, json: { write: true } })], y.prototype, "clusterMinSize", void 0), e([d({ type: Number, cast: o, json: { write: true } })], y.prototype, "clusterMaxSize", void 0), e([d(p)], y.prototype, "popupEnabled", void 0), e([d({ type: B, json: { read: { source: "popupInfo" }, write: { target: "popupInfo" } } })], y.prototype, "popupTemplate", void 0), e([d({ types: p2, json: { write: true } })], y.prototype, "renderer", void 0), e([d({ types: D })], y.prototype, "symbol", void 0), e([d({ type: [j], json: { read: { source: "drawingInfo.labelingInfo" }, write: { target: "drawingInfo.labelingInfo" } } })], y.prototype, "labelingInfo", void 0), e([d(m2)], y.prototype, "labelsVisible", void 0), e([d({ type: [c2], json: { write: true, origins: { "web-document": { write: false }, "portal-item": { write: false } } } })], y.prototype, "fields", void 0), y = c4 = e([n("esri.layers.support.FeatureReductionCluster")], y);
var j2 = y;

// node_modules/@arcgis/core/layers/support/featureReductionUtils.js
var n2 = { key: "type", base: t2, typeMap: { selection: j2 } };
var p7 = { types: { key: "type", base: t2, typeMap: { selection: p4, cluster: j2, binning: f } }, json: { name: "layerDefinition.featureReduction", write: { allowNull: true }, origins: { "web-map": { types: n2 }, "portal-item": { types: n2 }, "web-scene": { types: { key: "type", base: t2, typeMap: { selection: p4 } } } } } };

// node_modules/@arcgis/core/layers/support/labelingInfo.js
var n3 = /\[([^\[\]]+)\]/gi;
function r3(r4, i2, o2) {
  return r4 ? r4.map((r5) => {
    const s = new j();
    if (s.read(r5, o2), s.labelExpression) {
      const e3 = i2.fields || i2.layerDefinition && i2.layerDefinition.fields || this.fields;
      s.labelExpression = s.labelExpression.replace(n3, (n4, r6) => `[${t4(r6, e3)}]`);
    }
    return s;
  }) : null;
}
function t4(e3, n4) {
  if (!n4)
    return e3;
  const r4 = e3.toLowerCase();
  for (let t5 = 0; t5 < n4.length; t5++) {
    const e4 = n4[t5].name;
    if (e4.toLowerCase() === r4)
      return e4;
  }
  return e3;
}

export {
  p3 as p,
  t2 as t,
  p4 as p2,
  p7 as p3,
  r3 as r
};
//# sourceMappingURL=chunk-YPIBZ3CH.js.map
