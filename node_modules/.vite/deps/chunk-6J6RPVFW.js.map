{
  "version": 3,
  "sources": ["../../@arcgis/core/geometry/Circle.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../chunks/tslib.es6.js\";import{convertUnit as r,lengthToDegrees as t}from\"../core/unitUtils.js\";import{property as s}from\"../core/accessorSupport/decorators/property.js\";import\"../core/arrayUtils.js\";import\"../core/has.js\";import\"../core/accessorSupport/ensureType.js\";import{subclass as i}from\"../core/accessorSupport/decorators/subclass.js\";import o from\"./Point.js\";import c from\"./Polygon.js\";import{getReferenceEllipsoid as n}from\"./projectionEllipsoid.js\";import{directGeodeticSolver as a}from\"./support/geodesicUtils.js\";import{webMercatorToGeographic as p,geographicToWebMercator as l}from\"./support/webMercatorUtils.js\";import u from\"./support/WKIDUnitConversion.js\";var d;let h=d=class extends c{constructor(...e){super(...e),this.center=null,this.geodesic=!1,this.numberOfPoints=60,this.radius=1e3,this.radiusUnit=\"meters\"}normalizeCtorArgs(e,r){let t;if(e&&e.center)t=e;else{if(e&&e.rings)return super.normalizeCtorArgs(e,r);t={center:e}}return{...super.normalizeCtorArgs(),...t,...r}}initialize(){const e=this.center,s=this.numberOfPoints;if(this.hasZ=e&&e.hasZ,0!==this.rings.length||!e)return;const i=r(this.radius,this.radiusUnit,\"meters\"),o=e.spatialReference;let c,a=\"geographic\";if(o.isWebMercator?a=\"webMercator\":(null!=u[o.wkid]||o.wkt&&0===o.wkt.indexOf(\"PROJCS\"))&&(a=\"projected\"),this.geodesic){let r;switch(a){case\"webMercator\":r=p(e);break;case\"projected\":console.error(\"Creating a geodesic circle requires the center to be specified in web mercator or geographic coordinate system\");break;case\"geographic\":r=e}c=this._createGeodesicCircle(r,i,s),\"webMercator\"===a&&(c=l(c))}else{let r;\"webMercator\"===a||\"projected\"===a?r=i/this._convert2Meters(1,e.spatialReference):\"geographic\"===a&&(r=t(i,\"meters\",n(e.spatialReference).radius)),c=this._createPlanarCircle(e,r,s)}this.spatialReference=c.spatialReference,this.addRing(c.rings[0])}clone(){const{center:e,numberOfPoints:r,radius:t,radiusUnit:s,geodesic:i}=this;return new d({center:e.clone(),numberOfPoints:r,radius:t,radiusUnit:s,geodesic:i})}_createGeodesicCircle(e,r,t){let s=0;const i=[];for(;s<360;){const o=[0,0],c=[e.x,e.y];a(o,c,s,r),this.hasZ&&o.push(e.z),i.push(o),s+=360/t}return i.push(i[0]),new c(i)}_createPlanarCircle(e,r,t){const s=[],i=2*Math.PI/t;for(let o=0;o<t;++o){const t=i*o,c=[e.x+Math.cos(-t)*r,e.y+Math.sin(-t)*r];this.hasZ&&c.push(e.z),s.push(c)}return s.push(s[0]),new c({spatialReference:e.spatialReference,rings:[s]})}_convert2Meters(e,r){let t;if(null!=u[r.wkid])t=u.values[u[r.wkid]];else{const e=r.wkt,s=e.lastIndexOf(\",\")+1,i=e.lastIndexOf(\"]]\");t=parseFloat(e.substring(s,i))}return e*t}};e([s({type:o})],h.prototype,\"center\",void 0),e([s()],h.prototype,\"geodesic\",void 0),e([s()],h.prototype,\"numberOfPoints\",void 0),e([s()],h.prototype,\"radius\",void 0),e([s()],h.prototype,\"radiusUnit\",void 0),h=d=e([i(\"esri.geometry.Circle\")],h);const m=h;export{m as default};\n"],
  "mappings": "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",
  "names": ["d", "e", "r", "v", "t", "j"]
}
