import {
  o as o3
} from "./chunk-TR3U55RZ.js";
import {
  T as T2
} from "./chunk-3DCTMZI6.js";
import {
  n as n3
} from "./chunk-J73IXFNW.js";
import {
  A,
  B,
  C,
  D,
  E,
  F,
  G,
  H as H2,
  I,
  L,
  M as M2,
  O,
  S,
  T,
  U,
  V,
  a,
  b,
  c,
  d,
  g,
  h,
  i,
  j,
  k,
  l as l2,
  m,
  o as o2,
  p as p2,
  q,
  u as u2,
  v,
  w,
  x as x2,
  y,
  z as z2
} from "./chunk-MQBVOUKB.js";
import {
  O as O2
} from "./chunk-VMF4NMEB.js";
import {
  M,
  l
} from "./chunk-BPZGJQOB.js";
import {
  H,
  P,
  _,
  e,
  o,
  r,
  u,
  x,
  z
} from "./chunk-PKZEO23A.js";
import {
  n as n2
} from "./chunk-AIRC226G.js";
import {
  n2 as n,
  p2 as p,
  t2 as t
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/views/3d/support/meshProcessing.js
function t2(t3, o5, n4) {
  const r3 = o5 / 3, c3 = new Uint32Array(n4 + 1), e3 = new Uint32Array(n4 + 1), s = (t4, o6) => {
    t4 < o6 ? c3[t4 + 1]++ : e3[o6 + 1]++;
  };
  for (let x3 = 0; x3 < r3; x3++) {
    const o6 = t3[3 * x3], n5 = t3[3 * x3 + 1], r4 = t3[3 * x3 + 2];
    s(o6, n5), s(n5, r4), s(r4, o6);
  }
  let f3 = 0, l5 = 0;
  for (let x3 = 0; x3 < n4; x3++) {
    const t4 = c3[x3 + 1], o6 = e3[x3 + 1];
    c3[x3 + 1] = f3, e3[x3 + 1] = l5, f3 += t4, l5 += o6;
  }
  const i2 = new Uint32Array(6 * r3), a3 = c3[n4], w5 = (t4, o6, n5) => {
    if (t4 < o6) {
      const r4 = c3[t4 + 1]++;
      i2[2 * r4] = o6, i2[2 * r4 + 1] = n5;
    } else {
      const r4 = e3[o6 + 1]++;
      i2[2 * a3 + 2 * r4] = t4, i2[2 * a3 + 2 * r4 + 1] = n5;
    }
  };
  for (let x3 = 0; x3 < r3; x3++) {
    const o6 = t3[3 * x3], n5 = t3[3 * x3 + 1], r4 = t3[3 * x3 + 2];
    w5(o6, n5, x3), w5(n5, r4, x3), w5(r4, o6, x3);
  }
  const y5 = (t4, o6) => {
    const n5 = 2 * t4, r4 = o6 - t4;
    for (let c4 = 1; c4 < r4; c4++) {
      const t5 = i2[n5 + 2 * c4], o7 = i2[n5 + 2 * c4 + 1];
      let r5 = c4 - 1;
      for (; r5 >= 0 && i2[n5 + 2 * r5] > t5; r5--)
        i2[n5 + 2 * r5 + 2] = i2[n5 + 2 * r5], i2[n5 + 2 * r5 + 3] = i2[n5 + 2 * r5 + 1];
      i2[n5 + 2 * r5 + 2] = t5, i2[n5 + 2 * r5 + 3] = o7;
    }
  };
  for (let x3 = 0; x3 < n4; x3++)
    y5(c3[x3], c3[x3 + 1]), y5(a3 + e3[x3], a3 + e3[x3 + 1]);
  const A4 = new Int32Array(3 * r3), U2 = (o6, n5) => o6 === t3[3 * n5] ? 0 : o6 === t3[3 * n5 + 1] ? 1 : o6 === t3[3 * n5 + 2] ? 2 : -1, u6 = (t4, o6) => {
    const n5 = U2(t4, o6);
    A4[3 * o6 + n5] = -1;
  }, p6 = (t4, o6, n5, r4) => {
    const c4 = U2(t4, o6);
    A4[3 * o6 + c4] = r4;
    const e4 = U2(n5, r4);
    A4[3 * r4 + e4] = o6;
  };
  for (let x3 = 0; x3 < n4; x3++) {
    let t4 = c3[x3];
    const o6 = c3[x3 + 1];
    let n5 = e3[x3];
    const r4 = e3[x3 + 1];
    for (; t4 < o6 && n5 < r4; ) {
      const o7 = i2[2 * t4], r5 = i2[2 * a3 + 2 * n5];
      o7 === r5 ? (p6(x3, i2[2 * t4 + 1], r5, i2[2 * a3 + 2 * n5 + 1]), t4++, n5++) : o7 < r5 ? (u6(x3, i2[2 * t4 + 1]), t4++) : (u6(r5, i2[2 * a3 + 2 * n5 + 1]), n5++);
    }
    for (; t4 < o6; )
      u6(x3, i2[2 * t4 + 1]), t4++;
    for (; n5 < r4; ) {
      u6(i2[2 * a3 + 2 * n5], i2[2 * a3 + 2 * n5 + 1]), n5++;
    }
  }
  return A4;
}

// node_modules/@arcgis/core/views/3d/support/buffer/workerHelper.js
function z3(e3, t3) {
  return t3.push(e3.buffer), { buffer: e3.buffer, layout: F2(e3.layout) };
}
function D2(e3) {
  return G2(e3.layout).createView(e3.buffer);
}
function F2(e3) {
  const t3 = new Array();
  return e3.fields.forEach((e4, r3) => {
    const o5 = { ...e4, constructor: J(e4.constructor) };
    t3.push([r3, o5]);
  }), { stride: e3.stride, fields: t3, fieldNames: e3.fieldNames };
}
function G2(e3) {
  const t3 = T2();
  return t3.stride = e3.stride, t3.fieldNames = e3.fieldNames, e3.fields.forEach((e4) => t3.fields.set(e4[0], { ...e4[1], constructor: K(e4[1].constructor) })), t3;
}
var H3 = [y, u2, i, c, l2, p2, o2, m, T, h, a, b, d, A, O, x2, g, w, E, L, B, F, I, U, j, V, M2, S, k, q, v, z2, C, D, G, H2];
function J(e3) {
  return `${e3.ElementType}_${e3.ElementCount}`;
}
function K(e3) {
  return O3.get(e3);
}
var O3 = /* @__PURE__ */ new Map();
H3.forEach((e3) => O3.set(J(e3), e3));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/bufferLayouts.js
var A2 = T2().vec3f(O2.POSITION).u16(O2.COMPONENTINDEX).u16(O2.U16PADDING);
var e2 = T2().vec2u8(O2.SIDENESS);
var T3 = o3(e2);
var E2 = T2().vec3f(O2.POSITION0).vec3f(O2.POSITION1).u16(O2.COMPONENTINDEX).u8(O2.VARIANTOFFSET, { glNormalized: true }).u8(O2.VARIANTSTROKE).u8(O2.VARIANTEXTENSION, { glNormalized: true }).u8(O2.U8PADDING, { glPadding: true }).u16(O2.U16PADDING, { glPadding: true });
var S2 = E2.clone().vec3f(O2.NORMAL);
var r2 = E2.clone().vec3f(O2.NORMALA).vec3f(O2.NORMALB);
var o4 = /* @__PURE__ */ new Map([[O2.POSITION0, 0], [O2.POSITION1, 1], [O2.COMPONENTINDEX, 2], [O2.VARIANTOFFSET, 3], [O2.VARIANTSTROKE, 4], [O2.VARIANTEXTENSION, 5], [O2.NORMAL, 6], [O2.NORMALA, 6], [O2.NORMALB, 7], [O2.SIDENESS, 8]]);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/edgeBufferWriters.js
var a2 = class {
  updateSettings(t3) {
    this.settings = t3, this.edgeHashFunction = t3.reducedPrecision ? f : p3;
  }
  write(t3, o5, e3) {
    const n4 = this.edgeHashFunction(e3);
    W.seed = n4;
    const i2 = W.getIntRange(0, 255), r3 = W.getIntRange(0, this.settings.variants - 1), s = 0.7, a3 = W.getFloat(), c3 = 255 * (0.5 * g2(-(1 - Math.min(a3 / s, 1)) + Math.max(0, a3 - s) / (1 - s), 1.2) + 0.5);
    t3.position0.setVec(o5, e3.position0), t3.position1.setVec(o5, e3.position1), t3.componentIndex.set(o5, e3.componentIndex), t3.variantOffset.set(o5, i2), t3.variantStroke.set(o5, r3), t3.variantExtension.set(o5, c3);
  }
  trim(t3, o5) {
    return t3.slice(0, o5);
  }
};
var c2 = new Float32Array(6);
var m2 = new Uint32Array(c2.buffer);
var u3 = new Uint32Array(1);
function p3(t3) {
  const o5 = c2;
  o5[0] = t3.position0[0], o5[1] = t3.position0[1], o5[2] = t3.position0[2], o5[3] = t3.position1[0], o5[4] = t3.position1[1], o5[5] = t3.position1[2], u3[0] = 5381;
  for (let e3 = 0; e3 < m2.length; e3++)
    u3[0] = 31 * u3[0] + m2[e3];
  return u3[0];
}
function f(t3) {
  const o5 = c2;
  o5[0] = h2(t3.position0[0]), o5[1] = h2(t3.position0[1]), o5[2] = h2(t3.position0[2]), o5[3] = h2(t3.position1[0]), o5[4] = h2(t3.position1[1]), o5[5] = h2(t3.position1[2]), u3[0] = 5381;
  for (let e3 = 0; e3 < m2.length; e3++)
    u3[0] = 31 * u3[0] + m2[e3];
  return u3[0];
}
var l3 = 1e4;
function h2(t3) {
  return Math.round(t3 * l3) / l3;
}
function g2(t3, o5) {
  const e3 = t3 < 0 ? -1 : 1;
  return Math.abs(t3) ** o5 * e3;
}
var d2 = class {
  constructor() {
    this.commonWriter = new a2();
  }
  updateSettings(t3) {
    this.commonWriter.updateSettings(t3);
  }
  allocate(t3) {
    return S2.createBuffer(t3);
  }
  write(t3, n4, i2) {
    this.commonWriter.write(t3, n4, i2), u(y2, i2.faceNormal0, i2.faceNormal1), z(y2, y2), t3.normal.setVec(n4, y2);
  }
  trim(t3, o5) {
    return this.commonWriter.trim(t3, o5);
  }
};
d2.Layout = S2, d2.glLayout = o3(S2, 1);
var w2 = class {
  constructor() {
    this.commonWriter = new a2();
  }
  updateSettings(t3) {
    this.commonWriter.updateSettings(t3);
  }
  allocate(t3) {
    return r2.createBuffer(t3);
  }
  write(t3, o5, e3) {
    this.commonWriter.write(t3, o5, e3), t3.normalA.setVec(o5, e3.faceNormal0), t3.normalB.setVec(o5, e3.faceNormal1);
  }
  trim(t3, o5) {
    return this.commonWriter.trim(t3, o5);
  }
};
w2.Layout = r2, w2.glLayout = o3(r2, 1);
var y2 = n2();
var W = new t();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/edgePreprocessing.js
var p4 = -1;
var u4;
function h3(n4, i2, l5, f3 = N) {
  const g4 = n4.vertices.position, m4 = n4.vertices.componentIndex, u6 = M(f3.anglePlanar), h5 = M(f3.angleSignificantEdge), V3 = Math.cos(h5), S3 = Math.cos(u6), j2 = I2.edge, x3 = j2.position0, E3 = j2.position1, D4 = j2.faceNormal0, F3 = j2.faceNormal1, L3 = y3(n4), U2 = w3(n4), b3 = U2.length / 4, k2 = i2.allocate(b3);
  let C2 = 0;
  const H4 = b3, K2 = l5.allocate(H4);
  let M3 = 0, O4 = 0, P2 = 0;
  const T4 = p(0, b3), q2 = new Float32Array(b3);
  n(q2, (e3, t3, n5) => {
    g4.getVec(U2[4 * t3 + 0], x3), g4.getVec(U2[4 * t3 + 1], E3), n5[t3] = x(x3, E3);
  }), T4.sort((e3, t3) => q2[t3] - q2[e3]);
  const z4 = new Array(), B2 = new Array();
  for (let e3 = 0; e3 < b3; e3++) {
    const t3 = T4[e3], n5 = q2[t3], o5 = U2[4 * t3 + 0], r3 = U2[4 * t3 + 1], f4 = U2[4 * t3 + 2], h6 = U2[4 * t3 + 3], w5 = h6 === p4;
    if (g4.getVec(o5, x3), g4.getVec(r3, E3), w5)
      o(D4, L3[3 * f4 + 0], L3[3 * f4 + 1], L3[3 * f4 + 2]), r(F3, D4), j2.componentIndex = m4.get(o5), j2.cosAngle = P(D4, F3);
    else {
      if (o(D4, L3[3 * f4 + 0], L3[3 * f4 + 1], L3[3 * f4 + 2]), o(F3, L3[3 * h6 + 0], L3[3 * h6 + 1], L3[3 * h6 + 2]), j2.componentIndex = m4.get(o5), j2.cosAngle = P(D4, F3), A3(j2, S3))
        continue;
      j2.cosAngle < -0.9999 && r(F3, D4);
    }
    O4 += n5, P2++, w5 || v2(j2, V3) ? (i2.write(k2, C2++, j2), z4.push(n5)) : d3(j2, u6) && (l5.write(K2, M3++, j2), B2.push(n5));
  }
  const G3 = new Float32Array(z4.reverse()), J2 = new Float32Array(B2.reverse());
  return { regular: { instancesData: i2.trim(k2, C2), lodInfo: { lengths: G3 } }, silhouette: { instancesData: l5.trim(K2, M3), lodInfo: { lengths: J2 } }, averageEdgeLength: O4 / P2 };
}
function v2(e3, t3) {
  return e3.cosAngle < t3;
}
function A3(e3, t3) {
  return e3.cosAngle > t3;
}
function d3(e3, t3) {
  const o5 = l(e3.cosAngle), r3 = I2.fwd, s = I2.ortho;
  H(r3, e3.position1, e3.position0);
  return o5 * (P(_(s, e3.faceNormal0, e3.faceNormal1), r3) > 0 ? -1 : 1) > t3;
}
function w3(e3) {
  const t3 = e3.faces.length / 3, n4 = e3.faces, o5 = e3.neighbors;
  let r3 = 0;
  for (let a3 = 0; a3 < t3; a3++) {
    const e4 = o5[3 * a3 + 0], t4 = o5[3 * a3 + 1], s2 = o5[3 * a3 + 2], c4 = n4[3 * a3 + 0], i2 = n4[3 * a3 + 1], l5 = n4[3 * a3 + 2];
    r3 += e4 === p4 || c4 < i2 ? 1 : 0, r3 += t4 === p4 || i2 < l5 ? 1 : 0, r3 += s2 === p4 || l5 < c4 ? 1 : 0;
  }
  const s = new Int32Array(4 * r3);
  let c3 = 0;
  for (let a3 = 0; a3 < t3; a3++) {
    const e4 = o5[3 * a3 + 0], t4 = o5[3 * a3 + 1], r4 = o5[3 * a3 + 2], i2 = n4[3 * a3 + 0], l5 = n4[3 * a3 + 1], f3 = n4[3 * a3 + 2];
    (e4 === p4 || i2 < l5) && (s[c3++] = i2, s[c3++] = l5, s[c3++] = a3, s[c3++] = e4), (t4 === p4 || l5 < f3) && (s[c3++] = l5, s[c3++] = f3, s[c3++] = a3, s[c3++] = t4), (r4 === p4 || f3 < i2) && (s[c3++] = f3, s[c3++] = i2, s[c3++] = a3, s[c3++] = r4);
  }
  return s;
}
function y3(e3) {
  const t3 = e3.faces.length / 3, n4 = e3.vertices.position, o5 = e3.faces, r3 = V2.v0, s = V2.v1, c3 = V2.v2, a3 = new Float32Array(3 * t3);
  for (let i2 = 0; i2 < t3; i2++) {
    const e4 = o5[3 * i2 + 0], t4 = o5[3 * i2 + 1], m4 = o5[3 * i2 + 2];
    n4.getVec(e4, r3), n4.getVec(t4, s), n4.getVec(m4, c3), e(s, s, r3), e(c3, c3, r3), _(r3, s, c3), z(r3, r3), a3[3 * i2 + 0] = r3[0], a3[3 * i2 + 1] = r3[1], a3[3 * i2 + 2] = r3[2];
  }
  return a3;
}
!function(e3) {
  e3[e3.SOLID = 0] = "SOLID", e3[e3.SKETCH = 1] = "SKETCH";
}(u4 || (u4 = {}));
var I2 = { edge: { position0: n2(), position1: n2(), faceNormal0: n2(), faceNormal1: n2(), componentIndex: 0, cosAngle: 0 }, ortho: n2(), fwd: n2() };
var V2 = { v0: n2(), v1: n2(), v2: n2() };
var N = { anglePlanar: 4, angleSignificantEdge: 35 };

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/EdgeProcessingWorker.js
var u5 = class {
  async extract(e3) {
    const t3 = l4(e3), n4 = f2(t3), r3 = [t3.data.buffer];
    return { result: d4(n4, r3), transferList: r3 };
  }
  async extractComponentsEdgeLocations(e3) {
    const t3 = l4(e3), n4 = p5(t3.data, t3.skipDeduplicate, t3.indices, t3.indicesLength), i2 = h3(n4, L2, D3), s = [];
    return { result: z3(i2.regular.instancesData, s), transferList: s };
  }
  async extractEdgeLocations(e3) {
    const t3 = l4(e3), n4 = p5(t3.data, t3.skipDeduplicate, t3.indices, t3.indicesLength), i2 = h3(n4, w4, D3), s = [];
    return { result: z3(i2.regular.instancesData, s), transferList: s };
  }
};
function f2(e3) {
  const t3 = p5(e3.data, e3.skipDeduplicate, e3.indices, e3.indicesLength);
  return g3.updateSettings(e3.writerSettings), h4.updateSettings(e3.writerSettings), h3(t3, g3, h4);
}
function l4(e3) {
  return { data: A2.createView(e3.dataBuffer), indices: "Uint32Array" === e3.indicesType ? new Uint32Array(e3.indicesBuffer) : "Uint16Array" === e3.indicesType ? new Uint16Array(e3.indicesBuffer) : void 0, indicesLength: e3.indicesLength, writerSettings: e3.writerSettings, skipDeduplicate: e3.skipDeduplicate };
}
function d4(e3, t3) {
  t3.push(e3.regular.lodInfo.lengths.buffer), t3.push(e3.silhouette.lodInfo.lengths.buffer);
  return { regular: { instancesData: z3(e3.regular.instancesData, t3), lodInfo: { lengths: e3.regular.lodInfo.lengths.buffer } }, silhouette: { instancesData: z3(e3.silhouette.instancesData, t3), lodInfo: { lengths: e3.silhouette.lodInfo.lengths.buffer } }, averageEdgeLength: e3.averageEdgeLength };
}
function p5(n4, r3, i2, o5) {
  if (r3) {
    return { faces: i2, facesLength: o5, neighbors: t2(i2, o5, n4.count), vertices: n4 };
  }
  const a3 = n3(n4.buffer, n4.stride / 4, { originalIndices: i2, originalIndicesLength: o5 }), c3 = t2(a3.indices, o5, a3.uniqueCount);
  return { faces: a3.indices, facesLength: a3.indices.length, neighbors: c3, vertices: A2.createView(a3.buffer) };
}
var g3 = new d2();
var h4 = new w2();
var m3 = class {
  allocate(e3) {
    return b2.createBuffer(e3);
  }
  trim(e3, t3) {
    return e3.slice(0, t3);
  }
  write(e3, t3, n4) {
    e3.position0.setVec(t3, n4.position0), e3.position1.setVec(t3, n4.position1);
  }
};
var I3 = class {
  allocate(e3) {
    return y4.createBuffer(e3);
  }
  trim(e3, t3) {
    return e3.slice(0, t3);
  }
  write(e3, t3, n4) {
    e3.position0.setVec(t3, n4.position0), e3.position1.setVec(t3, n4.position1), e3.componentIndex.set(t3, n4.componentIndex);
  }
};
var w4 = new m3();
var L2 = new I3();
var D3 = { allocate: () => null, write: () => {
}, trim: () => null };
var b2 = T2().vec3f(O2.POSITION0).vec3f(O2.POSITION1);
var y4 = T2().vec3f(O2.POSITION0).vec3f(O2.POSITION1).u16(O2.COMPONENTINDEX).u16(O2.U16PADDING, { glPadding: true });
function v3() {
  return new u5();
}

export {
  D2 as D,
  A2 as A,
  e2 as e,
  T3 as T,
  o4 as o,
  d2 as d,
  w2 as w,
  u4 as u,
  u5 as u2,
  f2 as f,
  b2 as b,
  y4 as y,
  v3 as v
};
//# sourceMappingURL=chunk-QUUJFQ73.js.map
