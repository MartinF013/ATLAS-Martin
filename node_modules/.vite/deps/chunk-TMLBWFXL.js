import {
  e as e2,
  n as n2
} from "./chunk-6FKG7JUE.js";
import {
  U
} from "./chunk-65A2N4LL.js";
import {
  a,
  v
} from "./chunk-4PRVTUEZ.js";
import {
  l
} from "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import {
  b
} from "./chunk-23NWA6WL.js";

// node_modules/@arcgis/core/rest/support/ProjectParameters.js
var i = class extends l {
  constructor(r) {
    super(r), this.geometries = null, this.outSpatialReference = null, this.transformation = null, this.transformForward = null;
  }
  toJSON() {
    const r = this.geometries.map((r2) => r2.toJSON()), t = this.geometries[0], o2 = {};
    return o2.outSR = this.outSpatialReference.wkid || JSON.stringify(this.outSpatialReference.toJSON()), o2.inSR = t.spatialReference.wkid || JSON.stringify(t.spatialReference.toJSON()), o2.geometries = JSON.stringify({ geometryType: v(t), geometries: r }), this.transformation && (o2.transformation = this.transformation.wkid || JSON.stringify(this.transformation)), null != this.transformForward && (o2.transformForward = this.transformForward), o2;
  }
};
e([d()], i.prototype, "geometries", void 0), e([d({ json: { read: { source: "outSR" } } })], i.prototype, "outSpatialReference", void 0), e([d()], i.prototype, "transformation", void 0), e([d()], i.prototype, "transformForward", void 0), i = e([n("esri.rest.support.ProjectParameters")], i);
var a2 = i;

// node_modules/@arcgis/core/rest/geometryService/utils.js
function o(e3, r, o2) {
  const n4 = a(r);
  return e3.map((e4) => {
    const t = n4.fromJSON(e4);
    return t.spatialReference = o2, t;
  });
}

// node_modules/@arcgis/core/rest/geometryService/project.js
var i2 = b(a2);
async function n3(o2, m, n4) {
  m = i2(m);
  const u = n2(o2), c = { ...u.query, f: "json", ...m.toJSON() }, j = m.outSpatialReference, a3 = v(m.geometries[0]), f = e2(c, n4);
  return U(u.path + "/project", f).then(({ data: { geometries: r } }) => o(r, a3, j));
}

export {
  a2 as a,
  n3 as n
};
//# sourceMappingURL=chunk-TMLBWFXL.js.map
