import {
  O,
  l as l2
} from "./chunk-PQM6RARY.js";
import {
  L
} from "./chunk-5LWMNFCG.js";
import {
  e
} from "./chunk-EEJIELE6.js";
import {
  o
} from "./chunk-MDCKEJ7B.js";
import {
  h,
  l
} from "./chunk-T7BEWVV3.js";
import {
  r,
  t
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/views/3d/interactive/visualElements/VisualElementResources.js
var u = class {
  constructor(e2) {
    this.resourceFactory = e2, this._resources = null, this._visible = true, this._attached = false;
  }
  destroy() {
    this._destroyResources();
  }
  get object() {
    return r(this._resources) ? this._resources.object : null;
  }
  get resources() {
    return r(this._resources) ? this._resources.external : null;
  }
  get visible() {
    return this._visible;
  }
  set visible(e2) {
    e2 !== this._visible && (this._visible = e2, this._syncVisible());
  }
  get attached() {
    return this._attached;
  }
  set attached(e2) {
    e2 !== this._attached && (this._attached = e2, this._createOrDestroyResources());
  }
  recreate() {
    this.attached && this._createResources();
  }
  recreateGeometry() {
    if (!this.resourceFactory.recreateGeometry)
      return void this.recreate();
    const e2 = this.resourceFactory.view._stage;
    if (t(this._resources) || !e2)
      return;
    const r2 = this._resources.object;
    this._resources.external.forEach((s) => {
      s.type === e.Geometry && e2.remove(s);
    }), r2.removeAllGeometries();
    const t2 = this.resourceFactory.recreateGeometry(this._resources.external, r2, this._resources.layer);
    e2.addMany(t2);
  }
  _createOrDestroyResources() {
    this._attached ? this._resources || this._createResources() : this._destroyResources();
  }
  _createResources() {
    this._destroyResources();
    const e2 = this.resourceFactory, s = e2.view, i = s._stage;
    if (!i)
      return;
    const u2 = new l2({ isPickable: false, updatePolicy: o.SYNC });
    i.add(u2);
    const n = new O({ castShadow: false }), l3 = e2.createResources(n, u2);
    l3.forEach((e3) => {
      i.add(e3), e3 instanceof L && i.loadImmediate(e3);
    }), i.add(n), u2.add(n);
    const _ = e2.cameraChanged ? l(() => s.state.camera, (s2) => e2.cameraChanged(s2), h) : null;
    this._resources = { layer: u2, object: n, external: l3, cameraHandle: _ }, this._syncVisible();
  }
  _destroyResources() {
    if (t(this._resources))
      return;
    const e2 = this.resourceFactory.view._stage;
    e2 == null ? void 0 : e2.remove(this._resources.object), e2 == null ? void 0 : e2.remove(this._resources.layer), this._resources.external.forEach((s) => {
      e2 == null ? void 0 : e2.remove(s), "dispose" in s && s.dispose();
    }), this._resources.object.dispose(), this._resources.cameraHandle && this._resources.cameraHandle.remove(), this._resources = null;
  }
  _syncVisible() {
    t(this._resources) || this._resources.object.setVisible(this._visible);
  }
};

export {
  u
};
//# sourceMappingURL=chunk-3UQ4HI6Q.js.map
