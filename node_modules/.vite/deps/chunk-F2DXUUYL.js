import {
  B
} from "./chunk-Q3R7XFM5.js";
import {
  d
} from "./chunk-JYHTO6QC.js";
import {
  U
} from "./chunk-65A2N4LL.js";
import {
  F,
  Ot
} from "./chunk-5N3FSR63.js";
import {
  w
} from "./chunk-U3PSONS6.js";
import {
  s2 as s
} from "./chunk-HFTNOKM2.js";
import {
  a,
  r
} from "./chunk-CBQWMOBK.js";

// node_modules/@arcgis/core/support/featureFlags.js
var r2 = () => !!a("enable-feature:force-wosr");
var a2 = () => !!a("enable-feature:direct-3d-object-feature-layer-display");

// node_modules/@arcgis/core/symbols/support/styleUtils.js
var i = {};
async function u(e, r3) {
  try {
    return { data: (await j(e, r3)).data, baseUrl: Ot(e), styleUrl: e };
  } catch (t) {
    return w(t), null;
  }
}
function y(e, r3, o) {
  const s2 = r(r3.portal) ? r3.portal : B.getDefault();
  let n;
  const a3 = `${s2.url} - ${s2.user && s2.user.username} - ${e}`;
  return i[a3] || (i[a3] = m(e, s2, o).then((e2) => (n = e2, e2.fetchData())).then((r4) => ({ data: r4, baseUrl: n.itemUrl, styleName: e }))), i[a3];
}
function m(e, t, o) {
  return t.load(o).then(() => {
    const r3 = new d({ disableExtraQuery: true, query: `owner:${w2} AND type:${h} AND typekeywords:"${e}"` });
    return t.queryItems(r3, o);
  }).then(({ results: t2 }) => {
    let s2 = null;
    const n = e.toLowerCase();
    if (t2 && Array.isArray(t2))
      for (const e2 of t2) {
        if (e2.typeKeywords.some((e3) => e3.toLowerCase() === n) && e2.type === h && e2.owner === w2) {
          s2 = e2;
          break;
        }
      }
    if (!s2)
      throw new s("symbolstyleutils:style-not-found", `The style '${e}' could not be found`, { styleName: e });
    return s2.load(o);
  });
}
function c(e, t, o) {
  return e.styleUrl ? u(e.styleUrl, o) : e.styleName ? y(e.styleName, t, o) : Promise.reject(new s("symbolstyleutils:style-url-and-name-missing", "Either styleUrl or styleName is required to resolve a style"));
}
function p(e) {
  return null === e || "CIMSymbolReference" === e.type ? e : { type: "CIMSymbolReference", symbol: e };
}
function d2(e, r3) {
  if ("cimRef" === r3)
    return e.cimRef;
  if (e.formatInfos && !r2()) {
    for (const t of e.formatInfos)
      if ("gltf" === t.type)
        return t.href;
  }
  return e.webRef;
}
function j(r3, t) {
  const o = { responseType: "json", query: { f: "json" }, ...t };
  return U(F(r3), o);
}
var w2 = "esri_en";
var h = "Style";
var U2 = "https://cdn.arcgis.com/sharing/rest/content/items/220936cc6ed342c9937abd8f180e7d1e/resources/styles/cim/{SymbolName}.json?f=json";

export {
  a2 as a,
  c,
  p,
  d2 as d,
  j,
  U2 as U
};
//# sourceMappingURL=chunk-F2DXUUYL.js.map
