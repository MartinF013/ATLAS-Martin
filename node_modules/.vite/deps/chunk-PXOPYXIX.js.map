{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/WaterDistortion.glsl.js", "../../@arcgis/core/chunks/WaterSurface.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{a as e}from\"../../../../../../chunks/vec2.js\";import{a as t}from\"../../../../../../chunks/vec2f64.js\";import{s as r}from\"../../../../../../chunks/vec4.js\";import{c as a}from\"../../../../../../chunks/vec4f64.js\";import{FoamIntensity as o}from\"./FoamRendering.glsl.js\";import{Float2PassUniform as m}from\"../../shaderModules/Float2PassUniform.js\";import{Float4PassUniform as s}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as v}from\"../../shaderModules/interfaces.js\";import{Texture2DUniform as u}from\"../../shaderModules/Texture2DUniform.js\";function l(t){t.fragment.uniforms.add(new u(\"texWaveNormal\")),t.fragment.uniforms.add(new u(\"texWavePerturbation\")),t.fragment.uniforms.add([new s(\"waveParams\",(e=>r(i,e.waveStrength,e.waveTextureRepeat,e.flowStrength,e.flowOffset))),new m(\"waveDirection\",(t=>e(f,t.waveDirection[0]*t.waveVelocity,t.waveDirection[1]*t.waveVelocity)))]),t.include(o),t.fragment.code.add(v`const vec2  FLOW_JUMP = vec2(6.0/25.0, 5.0/24.0);\nvec2 textureDenormalized2D(sampler2D _tex, vec2 _uv) {\nreturn 2.0 * texture2D(_tex, _uv).rg - 1.0;\n}\nfloat sampleNoiseTexture(vec2 _uv) {\nreturn texture2D(texWavePerturbation, _uv).b;\n}\nvec3 textureDenormalized3D(sampler2D _tex, vec2 _uv) {\nreturn 2.0 * texture2D(_tex, _uv).rgb - 1.0;\n}\nfloat computeProgress(vec2 uv, float time) {\nreturn fract(time);\n}\nfloat computeWeight(vec2 uv, float time) {\nfloat progress = computeProgress(uv, time);\nreturn 1.0 - abs(1.0 - 2.0 * progress);\n}\nvec3 computeUVPerturbedWeigth(sampler2D texFlow, vec2 uv, float time, float phaseOffset) {\nfloat flowStrength = waveParams[2];\nfloat flowOffset = waveParams[3];\nvec2 flowVector = textureDenormalized2D(texFlow, uv) * flowStrength;\nfloat progress = computeProgress(uv, time + phaseOffset);\nfloat weight = computeWeight(uv, time + phaseOffset);\nvec2 result = uv;\nresult -= flowVector * (progress + flowOffset);\nresult += phaseOffset;\nresult += (time - progress) * FLOW_JUMP;\nreturn vec3(result, weight);\n}\nconst float TIME_NOISE_TEXTURE_REPEAT = 0.3737;\nconst float TIME_NOISE_STRENGTH = 7.77;\nvec3 getWaveLayer(sampler2D _texNormal, sampler2D _dudv, vec2 _uv, vec2 _waveDir, float time) {\nfloat waveStrength = waveParams[0];\nvec2 waveMovement = time * -_waveDir;\nfloat timeNoise = sampleNoiseTexture(_uv * TIME_NOISE_TEXTURE_REPEAT) * TIME_NOISE_STRENGTH;\nvec3 uv_A = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.0);\nvec3 uv_B = computeUVPerturbedWeigth(_dudv, _uv + waveMovement, time + timeNoise, 0.5);\nvec3 normal_A = textureDenormalized3D(_texNormal, uv_A.xy) * uv_A.z;\nvec3 normal_B = textureDenormalized3D(_texNormal, uv_B.xy) * uv_B.z;\nvec3 mixNormal = normalize(normal_A + normal_B);\nmixNormal.xy *= waveStrength;\nmixNormal.z = sqrt(1.0 - dot(mixNormal.xy, mixNormal.xy));\nreturn mixNormal;\n}\nvec4 getSurfaceNormalAndFoam(vec2 _uv, float _time) {\nfloat waveTextureRepeat = waveParams[1];\nvec3 normal = getWaveLayer(texWaveNormal, texWavePerturbation, _uv * waveTextureRepeat, waveDirection, _time);\nfloat foam  = normals2FoamIntensity(normal, waveParams[0]);\nreturn vec4(normal, foam);\n}`)}const i=a(),f=t();export{l as WaterDistortion};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.24/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{ShaderOutput as i}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutputOptions.js\";import{SliceDraw as r}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{OutputHighlight as a}from\"../views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js\";import{EvaluateAmbientLighting as n}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientLighting.glsl.js\";import{MainLighting as t}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as s}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{NormalUtils as l}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/NormalUtils.glsl.js\";import{PBRMode as d}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapDraw as g}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{Water as v}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Water.glsl.js\";import{WaterDistortion as m}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/WaterDistortion.glsl.js\";import{symbolAlphaCutoff as c}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{ColorConversion as p}from\"../views/3d/webgl-engine/core/shaderLibrary/util/ColorConversion.glsl.js\";import{addProjViewLocalOrigin as w,addCameraPosition as u}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as h}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as f}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{Float4Uniform as b}from\"../views/3d/webgl-engine/core/shaderModules/Float4Uniform.js\";import{FloatPassUniform as y}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as j}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{Matrix4Uniform as C}from\"../views/3d/webgl-engine/core/shaderModules/Matrix4Uniform.js\";import{ShaderBuilder as M}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{TransparencyPassType as F}from\"../views/3d/webgl-engine/lib/basicInterfaces.js\";import{VertexAttribute as P}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function L(L){const _=new M,{vertex:x,fragment:S}=_,D=w(_,L);return _.include(o),_.attributes.add(P.POSITION,\"vec3\"),_.attributes.add(P.UV0,\"vec2\"),x.uniforms.add(new f(\"waterColor\",(e=>e.color))),L.output!==i.Color&&L.output!==i.Alpha||(_.include(l,L),_.include(e,L),_.varyings.add(\"vuv\",\"vec2\"),_.varyings.add(\"vpos\",\"vec3\"),_.varyings.add(\"vnormal\",\"vec3\"),_.varyings.add(\"vtbnMatrix\",\"mat3\"),S.uniforms.add(D),L.hasMultipassTerrain&&_.varyings.add(\"depth\",\"float\"),x.code.add(j`\n      void main(void) {\n        if (waterColor.a < ${j.float(c)}) {\n          // Discard this vertex\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          return;\n        }\n\n        vuv = uv0;\n        vpos = position;\n\n        vnormal = getLocalUp(vpos, localOrigin);\n        vtbnMatrix = getTBNMatrix(vnormal);\n\n        ${L.hasMultipassTerrain?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\n\n        gl_Position = transformPosition(proj, view, vpos);\n        ${L.output===i.Color?\"forwardLinearDepth();\":\"\"}\n      }\n    `)),_.include(s,L),L.output===i.Alpha&&(_.include(r,L),S.uniforms.add(new b(\"waterColor\")),S.code.add(j`\n        void main() {\n          discardBySlice(vpos);\n          ${L.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n\n          gl_FragColor = vec4(waterColor.a);\n        }\n      `)),L.output===i.Color&&(_.include(t,{isGround:!1}),_.include(n,{pbrMode:d.Disabled,lightingSphericalHarmonicsOrder:2}),_.include(m),_.include(r,L),_.include(g,L),_.include(v,L),S.uniforms.add([new b(\"waterColor\"),new h(\"lightingMainDirection\",((e,i)=>i.lighting.lightingMainDirection)),new h(\"lightingMainIntensity\",((e,i)=>i.lighting.mainLight.intensity)),new y(\"timeElapsed\",(e=>e.timeElapsed)),new C(\"view\")]),u(S,L),S.include(p),S.code.add(j`\n      void main() {\n        discardBySlice(vpos);\n        ${L.hasMultipassTerrain?\"terrainDepthTest(gl_FragCoord, depth);\":\"\"}\n        vec3 localUp = vnormal;\n        // the created normal is in tangent space\n        vec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);\n\n        // we rotate the normal according to the tangent-bitangent-normal-Matrix\n        vec3 n = normalize(vtbnMatrix * tangentNormalFoam.xyz);\n        vec3 v = -normalize(vpos - cameraPosition);\n        float shadow = ${L.receiveShadows?j`1.0 - readShadowMap(vpos, linearDepth)`:\"1.0\"};\n        vec4 vPosView = view*vec4(vpos, 1.0);\n        vec4 final = vec4(getSeaColor(n, v, lightingMainDirection, waterColor.rgb, lightingMainIntensity, localUp, shadow, tangentNormalFoam.w, vPosView.xyz, vpos + localOrigin), waterColor.w);\n\n        // gamma correction\n        gl_FragColor = delinearizeGamma(final);\n        gl_FragColor = highlightSlice(gl_FragColor, vpos);\n        ${L.transparencyPassType===F.Color?\"gl_FragColor = premultiplyAlpha(gl_FragColor);\":\"\"}\n      }\n    `)),L.output===i.Normal&&(_.include(l,L),_.include(m,L),_.include(r,L),_.varyings.add(\"vpos\",\"vec3\"),_.varyings.add(\"vuv\",\"vec2\"),x.code.add(j`\n        void main(void) {\n          if (waterColor.a < ${j.float(c)}) {\n            // Discard this vertex\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n            return;\n          }\n\n          vuv = uv0;\n          vpos = position;\n\n          gl_Position = transformPosition(proj, view, vpos);\n        }\n    `),S.uniforms.add(new y(\"timeElapsed\",(e=>e.timeElapsed))),S.code.add(j`void main() {\ndiscardBySlice(vpos);\nvec4 tangentNormalFoam = getSurfaceNormalAndFoam(vuv, timeElapsed);\ntangentNormalFoam.xyz = normalize(tangentNormalFoam.xyz);\ngl_FragColor = vec4((tangentNormalFoam.xyz + vec3(1.0)) * 0.5, tangentNormalFoam.w);\n}`)),L.output===i.Draped&&(_.varyings.add(\"vpos\",\"vec3\"),x.code.add(j`\n        void main(void) {\n          if (waterColor.a < ${j.float(c)}) {\n            // Discard this vertex\n            gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n            return;\n          }\n\n          vpos = position;\n          gl_Position = transformPosition(proj, view, vpos);\n        }\n    `),S.uniforms.add(new b(\"waterColor\")),S.code.add(j`void main() {\ngl_FragColor = waterColor;\n}`)),L.output===i.Highlight&&(_.include(a),_.varyings.add(\"vpos\",\"vec3\"),x.code.add(j`\n      void main(void) {\n        if (waterColor.a < ${j.float(c)}) {\n          // Discard this vertex\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n          return;\n        }\n\n        vpos = position;\n        gl_Position = transformPosition(proj, view, vpos);\n      }\n    `),_.include(r,L),S.code.add(j`void main() {\ndiscardBySlice(vpos);\noutputHighlight();\n}`)),_}const _=Object.freeze(Object.defineProperty({__proto__:null,build:L},Symbol.toStringTag,{value:\"Module\"}));export{_ as W,L as b};\n"],
  "mappings": "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",
  "names": ["l", "t", "e", "i", "r", "o", "n", "L", "_", "r", "e", "t", "n", "o", "l", "c", "i", "O"]
}
