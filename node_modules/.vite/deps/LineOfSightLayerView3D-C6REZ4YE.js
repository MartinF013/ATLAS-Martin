import {
  n as n2
} from "./chunk-WLVMYWO2.js";
import {
  u
} from "./chunk-6UGZAJSY.js";
import "./chunk-2EPPX4WN.js";
import "./chunk-JJ7VMWJT.js";
import "./chunk-6GPADSSO.js";
import "./chunk-JJRJ6TV3.js";
import "./chunk-K2FQEYBG.js";
import "./chunk-G4IZ2HTT.js";
import {
  l as l2,
  w
} from "./chunk-T7BEWVV3.js";
import "./chunk-RN2KRYDN.js";
import "./chunk-OO2JXX7L.js";
import "./chunk-FTLBKDGL.js";
import "./chunk-H7JF6Q7A.js";
import "./chunk-TT2HIXWQ.js";
import "./chunk-OIPX3EDD.js";
import "./chunk-HPH3FMVB.js";
import "./chunk-5N3FSR63.js";
import "./chunk-DMJWTK32.js";
import "./chunk-3NMRL5CR.js";
import "./chunk-SN4RUQ4N.js";
import "./chunk-ZIHDQYKE.js";
import "./chunk-GSRNZQFV.js";
import "./chunk-ICD7AJSY.js";
import {
  d,
  n8 as n
} from "./chunk-2QOWZFCU.js";
import {
  e
} from "./chunk-IVBXK6OP.js";
import "./chunk-YAAIZ67O.js";
import "./chunk-5EQKHR4M.js";
import {
  O,
  p
} from "./chunk-U3PSONS6.js";
import {
  s2 as s
} from "./chunk-HFTNOKM2.js";
import "./chunk-23NWA6WL.js";
import "./chunk-CVWDM4C7.js";
import "./chunk-G5JBUC5N.js";
import {
  h,
  l,
  r,
  t
} from "./chunk-CBQWMOBK.js";
import "./chunk-AC2VUBZ6.js";

// node_modules/@arcgis/core/views/3d/layers/LineOfSightLayerView3D.js
var d2 = "analysis-view-handles";
var V = class extends n2(u) {
  constructor(s2) {
    super(s2), this.type = "line-of-sight-3d", this._analysisModules = { "line-of-sight": null };
  }
  initialize() {
    this.handles.add(l2(() => this.layer.analysis, (s2) => {
      this._destroyAnalysisView(), r(s2) && this._createAnalysisView(s2);
    }, w), d2);
  }
  destroy() {
    this.handles.remove(d2), this._destroyAnalysisView();
  }
  async whenAnalysisView() {
    if (r(this.analysisView))
      return this.analysisView;
    if (r(this._createAnalysisViewTask))
      return this._createAnalysisViewTask.promise;
    throw new s("layerview:no-analysisview-for-analysis", "The analysis has not been set on the LineOfSightLayer of this layer view");
  }
  isUpdating() {
    return r(this._createAnalysisViewTask) || r(this.analysisView) && this.analysisView.updating;
  }
  _createAnalysisView(s2) {
    const i = O(async (e2) => (this.analysisView = await this._createAnalysisViewPromise(s2, e2), this._createAnalysisViewTask === i && (this._createAnalysisViewTask = null), this.analysisView));
    this._createAnalysisViewTask = i;
  }
  _destroyAnalysisView() {
    this.analysisView = l(this.analysisView), this._createAnalysisViewTask = h(this._createAnalysisViewTask);
  }
  async _createAnalysisViewPromise(s2, e2) {
    const a = s2.type;
    let t2 = this._analysisModules[a];
    if (t(t2)) {
      const s3 = await this._loadAnalysisModule(a);
      this._analysisModules[a] = s3, t2 = s3;
    }
    const n3 = new t2.default({ analysis: s2, view: this.view, parent: this });
    if (await n3.when(), p(e2))
      throw n3.destroy(), new s("layerview:no-analysisview-for-analysis", "The analysis has not been added to the LineOfSightLayer of this layer view", { analysis: s2 });
    return n3;
  }
  _loadAnalysisModule(s2) {
    return "line-of-sight" === s2 ? import("./LineOfSightAnalysisView3D-VU6QBM5F.js") : null;
  }
};
e([d()], V.prototype, "type", void 0), e([d()], V.prototype, "layer", void 0), e([d()], V.prototype, "analysisView", void 0), e([d()], V.prototype, "_createAnalysisViewTask", void 0), V = e([n("esri.views.3d.layers.LineOfSightLayerView3D")], V);
var f = V;
export {
  f as default
};
//# sourceMappingURL=LineOfSightLayerView3D-C6REZ4YE.js.map
