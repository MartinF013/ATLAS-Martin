import {
  B,
  c2 as c,
  c3 as c2,
  i,
  u
} from "./chunk-EI4MOLML.js";
import {
  h,
  ye
} from "./chunk-5Z5455ZY.js";

// node_modules/@arcgis/core/support/popupUtils.js
var l = ["oid", "global-id"];
var a = ["oid", "global-id", "guid"];
function d({ displayField: t, editFieldsInfo: i2, fields: o, objectIdField: n, title: r }, s) {
  if (!o)
    return null;
  const l2 = w({ editFieldsInfo: i2, fields: o, objectIdField: n }, s);
  if (!l2.length)
    return null;
  const a2 = j({ titleBase: r, fields: o, displayField: t }), d2 = g();
  return new B({ title: a2, content: d2, fieldInfos: l2 });
}
var p = [/^fnode_$/i, /^tnode_$/i, /^lpoly_$/i, /^rpoly_$/i, /^poly_$/i, /^subclass$/i, /^subclass_$/i, /^rings_ok$/i, /^rings_nok$/i, /shape/i, /perimeter/i, /objectid/i, /_i$/i];
var c3 = (e, { editFieldsInfo: t, objectIdField: i2, visibleFieldNames: o }) => o ? o.has(e.name) : !f(e.name, t) && ((!i2 || e.name !== i2) && (!l.includes(e.type) && !p.some((t2) => t2.test(e.name))));
function u2(e, t) {
  const i2 = e;
  return t && (e = e.filter((e2) => !t.includes(e2.type))), e === i2 && (e = e.slice()), e.sort(m), e;
}
function m(e, t) {
  return "oid" === e.type ? -1 : "oid" === t.type ? 1 : y(e) ? -1 : y(t) ? 1 : (e.alias || e.name).toLocaleLowerCase().localeCompare((t.alias || t.name).toLocaleLowerCase());
}
function f(e, t) {
  if (!e || !t)
    return false;
  const { creationDateField: i2, creatorField: o, editDateField: n, editorField: r } = t;
  return [i2 && i2.toLowerCase(), o && o.toLowerCase(), n && n.toLowerCase(), r && r.toLowerCase()].includes(e.toLowerCase());
}
function F(e, t) {
  return e.editable && !a.includes(e.type) && !f(e.name, t);
}
function w({ editFieldsInfo: e, fields: t, objectIdField: i2 }, o) {
  return u2(t, (o == null ? void 0 : o.ignoreFieldTypes) || I).map((t2) => new c({ fieldName: t2.name, isEditable: F(t2, e), label: t2.alias, format: C(t2), visible: c3(t2, { editFieldsInfo: e, objectIdField: i2, visibleFieldNames: o == null ? void 0 : o.visibleFieldNames }) }));
}
function C(e) {
  switch (e.type) {
    case "small-integer":
    case "integer":
    case "single":
      return new u({ digitSeparator: true, places: 0 });
    case "double":
      return new u({ digitSeparator: true, places: 2 });
    case "date":
      return new u({ dateFormat: "long-month-day-year" });
    default:
      return "string" === e.type && ye(e.name) ? new u({ digitSeparator: true, places: 0 }) : null;
  }
}
function g() {
  return [new c2(), new i()];
}
function j(e) {
  const t = h(e), { titleBase: o } = e;
  return t ? `${o}: {${t.trim()}}` : o;
}
function y(e) {
  if ("name" === (e.name && e.name.toLowerCase()))
    return true;
  return "name" === (e.alias && e.alias.toLowerCase()) || void 0;
}
var I = ["geometry", "blob", "raster", "guid", "xml"];

export {
  d
};
//# sourceMappingURL=chunk-T47JAOQZ.js.map
